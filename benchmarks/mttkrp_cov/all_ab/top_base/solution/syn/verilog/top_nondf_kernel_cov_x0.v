// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_nondf_kernel_cov_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xout_address0,
        xout_ce0,
        xout_q0,
        xin_address0,
        xin_ce0,
        xin_we0,
        xin_d0
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_state2 = 34'd2;
parameter    ap_ST_fsm_state3 = 34'd4;
parameter    ap_ST_fsm_state4 = 34'd8;
parameter    ap_ST_fsm_state5 = 34'd16;
parameter    ap_ST_fsm_state6 = 34'd32;
parameter    ap_ST_fsm_state7 = 34'd64;
parameter    ap_ST_fsm_state8 = 34'd128;
parameter    ap_ST_fsm_state9 = 34'd256;
parameter    ap_ST_fsm_state10 = 34'd512;
parameter    ap_ST_fsm_state11 = 34'd1024;
parameter    ap_ST_fsm_state12 = 34'd2048;
parameter    ap_ST_fsm_state13 = 34'd4096;
parameter    ap_ST_fsm_state14 = 34'd8192;
parameter    ap_ST_fsm_state15 = 34'd16384;
parameter    ap_ST_fsm_state16 = 34'd32768;
parameter    ap_ST_fsm_state17 = 34'd65536;
parameter    ap_ST_fsm_state18 = 34'd131072;
parameter    ap_ST_fsm_state19 = 34'd262144;
parameter    ap_ST_fsm_state20 = 34'd524288;
parameter    ap_ST_fsm_state21 = 34'd1048576;
parameter    ap_ST_fsm_state22 = 34'd2097152;
parameter    ap_ST_fsm_state23 = 34'd4194304;
parameter    ap_ST_fsm_state24 = 34'd8388608;
parameter    ap_ST_fsm_state25 = 34'd16777216;
parameter    ap_ST_fsm_state26 = 34'd33554432;
parameter    ap_ST_fsm_state27 = 34'd67108864;
parameter    ap_ST_fsm_state28 = 34'd134217728;
parameter    ap_ST_fsm_state29 = 34'd268435456;
parameter    ap_ST_fsm_state30 = 34'd536870912;
parameter    ap_ST_fsm_state31 = 34'd1073741824;
parameter    ap_ST_fsm_state32 = 34'd2147483648;
parameter    ap_ST_fsm_state33 = 34'd4294967296;
parameter    ap_ST_fsm_state34 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] xout_address0;
output   xout_ce0;
input  [511:0] xout_q0;
output  [11:0] xin_address0;
output   xin_ce0;
output   xin_we0;
output  [118:0] xin_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg xout_ce0;
reg xin_ce0;
reg xin_we0;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [127:0] data_V_q0;
reg  signed [127:0] reg_330;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state12;
wire   [127:0] data_V_q1;
wire    ap_CS_fsm_state18;
wire   [6:0] add_ln29_fu_335_p2;
reg   [6:0] add_ln29_reg_726;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_cast_fu_345_p3;
reg   [11:0] tmp_cast_reg_731;
wire   [6:0] add_ln30_fu_359_p2;
reg   [6:0] add_ln30_reg_739;
wire    ap_CS_fsm_state3;
reg   [11:0] data_V_addr_reg_744;
wire   [0:0] icmp_ln30_fu_380_p2;
wire   [127:0] trunc_ln208_fu_386_p1;
reg   [127:0] trunc_ln208_reg_757;
wire    ap_CS_fsm_state4;
wire   [6:0] add_ln35_fu_390_p2;
reg   [6:0] add_ln35_reg_762;
wire    ap_CS_fsm_state6;
wire   [11:0] zext_ln35_1_fu_401_p1;
reg   [11:0] zext_ln35_1_reg_767;
reg   [5:0] mean_V_addr_reg_775;
wire   [0:0] icmp_ln35_fu_405_p2;
wire   [6:0] add_ln38_fu_411_p2;
reg   [6:0] add_ln38_reg_780;
wire    ap_CS_fsm_state7;
wire   [127:0] add_ln691_fu_456_p2;
wire    ap_CS_fsm_state9;
wire   [6:0] add_ln43_fu_462_p2;
reg   [6:0] add_ln43_reg_798;
wire    ap_CS_fsm_state10;
wire   [11:0] tmp_13_cast_fu_472_p3;
reg   [11:0] tmp_13_cast_reg_803;
wire   [6:0] add_ln44_fu_486_p2;
reg   [6:0] add_ln44_reg_811;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln44_fu_492_p1;
reg   [63:0] zext_ln44_reg_816;
reg   [11:0] data_V_addr_6_reg_821;
wire   [127:0] sub_ln692_fu_520_p2;
reg   [127:0] sub_ln692_reg_834;
wire    ap_CS_fsm_state13;
wire   [6:0] add_ln47_fu_526_p2;
reg   [6:0] add_ln47_reg_839;
wire    ap_CS_fsm_state15;
wire   [11:0] zext_ln50_fu_532_p1;
reg   [11:0] zext_ln50_reg_844;
wire   [11:0] tmp_15_cast_fu_540_p3;
reg   [11:0] tmp_15_cast_reg_850;
wire   [6:0] add_ln48_fu_554_p2;
reg   [6:0] add_ln48_reg_858;
wire    ap_CS_fsm_state16;
wire   [11:0] zext_ln50_1_fu_560_p1;
reg   [11:0] zext_ln50_1_reg_863;
reg   [11:0] cov_V_addr_reg_868;
reg   [11:0] cov_V_addr_4_reg_873;
wire   [6:0] add_ln51_fu_602_p2;
reg   [6:0] add_ln51_reg_881;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln51_fu_640_p2;
reg  signed [127:0] data_V_load_6_reg_904;
wire   [127:0] grp_fu_656_p2;
reg   [127:0] mul_ln691_reg_909;
wire    ap_CS_fsm_state23;
wire   [127:0] add_ln691_2_fu_661_p2;
wire    ap_CS_fsm_state24;
reg   [118:0] trunc_ln693_2_reg_919;
wire    ap_CS_fsm_state28;
wire   [6:0] add_ln57_fu_676_p2;
reg   [6:0] add_ln57_reg_924;
wire    ap_CS_fsm_state31;
wire   [11:0] tmp_16_cast_fu_686_p3;
reg   [11:0] tmp_16_cast_reg_929;
wire   [6:0] add_ln58_fu_700_p2;
reg   [6:0] add_ln58_reg_937;
wire    ap_CS_fsm_state32;
wire   [63:0] zext_ln208_2_fu_715_p1;
reg   [63:0] zext_ln208_2_reg_942;
wire   [118:0] cov_V_q0;
reg   [118:0] cov_V_load_reg_955;
wire    ap_CS_fsm_state33;
reg   [5:0] mean_V_address0;
reg    mean_V_ce0;
reg    mean_V_we0;
wire   [117:0] mean_V_d0;
wire   [117:0] mean_V_q0;
reg   [11:0] data_V_address0;
reg    data_V_ce0;
reg    data_V_we0;
reg   [127:0] data_V_d0;
wire   [11:0] data_V_address1;
reg    data_V_ce1;
reg   [11:0] cov_V_address0;
reg    cov_V_ce0;
reg    cov_V_we0;
reg   [6:0] i_reg_185;
reg   [6:0] j_5_reg_196;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln29_fu_353_p2;
reg   [6:0] j_reg_207;
wire   [0:0] icmp_ln38_fu_439_p2;
reg   [6:0] i_6_reg_218;
reg   [127:0] add_i3113_reg_229;
reg   [6:0] i_5_reg_241;
wire   [0:0] icmp_ln44_fu_510_p2;
reg   [6:0] j_6_reg_252;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln43_fu_480_p2;
reg   [6:0] i_7_reg_263;
wire   [0:0] icmp_ln48_fu_596_p2;
reg   [6:0] j_7_reg_274;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln47_fu_548_p2;
reg   [6:0] k_reg_285;
reg   [127:0] conv3_i2112_reg_296;
reg   [6:0] i_8_reg_308;
wire   [0:0] icmp_ln58_fu_720_p2;
reg   [6:0] j_8_reg_319;
wire    ap_CS_fsm_state34;
wire   [0:0] icmp_ln57_fu_694_p2;
wire   [63:0] zext_ln31_1_fu_374_p1;
wire   [63:0] zext_ln35_fu_396_p1;
wire   [63:0] zext_ln691_fu_434_p1;
wire   [63:0] zext_ln692_2_fu_505_p1;
wire   [63:0] zext_ln50_2_fu_569_p1;
wire   [63:0] zext_ln54_fu_591_p1;
wire   [63:0] zext_ln215_fu_625_p1;
wire   [63:0] zext_ln215_2_fu_635_p1;
wire    ap_CS_fsm_state29;
wire   [5:0] trunc_ln31_fu_341_p1;
wire   [11:0] zext_ln31_fu_365_p1;
wire   [11:0] add_ln31_fu_369_p2;
wire   [5:0] trunc_ln691_fu_417_p1;
wire   [11:0] tmp_14_cast_fu_421_p3;
wire   [11:0] add_ln691_3_fu_429_p2;
wire   [5:0] trunc_ln692_fu_468_p1;
wire   [11:0] zext_ln692_fu_496_p1;
wire   [11:0] add_ln692_fu_500_p2;
wire   [127:0] mean_V_load_cast_fu_516_p1;
wire   [5:0] trunc_ln50_fu_536_p1;
wire   [11:0] add_ln50_fu_564_p2;
wire   [5:0] trunc_ln54_fu_574_p1;
wire   [11:0] tmp_17_cast_fu_578_p3;
wire   [11:0] add_ln54_fu_586_p2;
wire   [5:0] trunc_ln215_fu_608_p1;
wire   [11:0] tmp_20_cast_fu_612_p3;
wire   [11:0] add_ln215_fu_620_p2;
wire   [11:0] add_ln215_2_fu_630_p2;
wire   [127:0] grp_fu_650_p0;
wire   [129:0] grp_fu_650_p1;
wire    ap_CS_fsm_state19;
wire   [256:0] grp_fu_650_p2;
wire   [5:0] trunc_ln208_1_fu_682_p1;
wire   [11:0] zext_ln208_fu_706_p1;
wire   [11:0] add_ln208_fu_710_p2;
reg   [33:0] ap_NS_fsm;
wire   [256:0] grp_fu_650_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
end

top_nondf_kernel_cov_x0_mean_V #(
    .DataWidth( 118 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mean_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_V_address0),
    .ce0(mean_V_ce0),
    .we0(mean_V_we0),
    .d0(mean_V_d0),
    .q0(mean_V_q0)
);

top_nondf_kernel_cov_x0_data_V #(
    .DataWidth( 128 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_V_address0),
    .ce0(data_V_ce0),
    .we0(data_V_we0),
    .d0(data_V_d0),
    .q0(data_V_q0),
    .address1(data_V_address1),
    .ce1(data_V_ce1),
    .q1(data_V_q1)
);

top_nondf_kernel_cov_x0_cov_V #(
    .DataWidth( 119 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
cov_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cov_V_address0),
    .ce0(cov_V_ce0),
    .we0(cov_V_we0),
    .d0(trunc_ln693_2_reg_919),
    .q0(cov_V_q0)
);

top_mul_128ns_130ns_257_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 130 ),
    .dout_WIDTH( 257 ))
mul_128ns_130ns_257_5_1_U821(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_650_p0),
    .din1(grp_fu_650_p1),
    .ce(1'b1),
    .dout(grp_fu_650_p2)
);

top_mul_128s_128s_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 128 ))
mul_128s_128s_128_5_1_U822(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_V_load_6_reg_904),
    .din1(reg_330),
    .ce(1'b1),
    .dout(grp_fu_656_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln35_fu_405_p2 == 1'd0))) begin
        add_i3113_reg_229 <= 128'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        add_i3113_reg_229 <= add_ln691_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        conv3_i2112_reg_296 <= 128'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        conv3_i2112_reg_296 <= add_ln691_2_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln35_fu_405_p2 == 1'd1))) begin
        i_5_reg_241 <= 7'd0;
    end else if (((icmp_ln44_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_5_reg_241 <= add_ln43_reg_798;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln35_fu_405_p2 == 1'd0))) begin
        i_6_reg_218 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i_6_reg_218 <= add_ln38_reg_780;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_480_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_7_reg_263 <= 7'd0;
    end else if (((icmp_ln48_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_7_reg_263 <= add_ln47_reg_839;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_548_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_8_reg_308 <= 7'd0;
    end else if (((icmp_ln58_fu_720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_8_reg_308 <= add_ln57_reg_924;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_185 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln30_fu_380_p2 == 1'd1))) begin
        i_reg_185 <= add_ln29_reg_726;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_5_reg_196 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_5_reg_196 <= add_ln30_reg_739;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_480_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        j_6_reg_252 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        j_6_reg_252 <= add_ln44_reg_811;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_548_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        j_7_reg_274 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        j_7_reg_274 <= add_ln48_reg_858;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        j_8_reg_319 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        j_8_reg_319 <= add_ln58_reg_937;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_207 <= 7'd0;
    end else if (((icmp_ln38_fu_439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        j_reg_207 <= add_ln35_reg_762;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        k_reg_285 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        k_reg_285 <= add_ln51_reg_881;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_330 <= data_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_330 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln29_reg_726 <= add_ln29_fu_335_p2;
        tmp_cast_reg_731[11 : 6] <= tmp_cast_fu_345_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln30_reg_739 <= add_ln30_fu_359_p2;
        data_V_addr_reg_744 <= zext_ln31_1_fu_374_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln35_reg_762 <= add_ln35_fu_390_p2;
        zext_ln35_1_reg_767[6 : 0] <= zext_ln35_1_fu_401_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln38_reg_780 <= add_ln38_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln43_reg_798 <= add_ln43_fu_462_p2;
        tmp_13_cast_reg_803[11 : 6] <= tmp_13_cast_fu_472_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln44_reg_811 <= add_ln44_fu_486_p2;
        data_V_addr_6_reg_821 <= zext_ln692_2_fu_505_p1;
        zext_ln44_reg_816[6 : 0] <= zext_ln44_fu_492_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln47_reg_839 <= add_ln47_fu_526_p2;
        tmp_15_cast_reg_850[11 : 6] <= tmp_15_cast_fu_540_p3[11 : 6];
        zext_ln50_reg_844[6 : 0] <= zext_ln50_fu_532_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln48_reg_858 <= add_ln48_fu_554_p2;
        cov_V_addr_4_reg_873 <= zext_ln54_fu_591_p1;
        cov_V_addr_reg_868 <= zext_ln50_2_fu_569_p1;
        zext_ln50_1_reg_863[6 : 0] <= zext_ln50_1_fu_560_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln51_reg_881 <= add_ln51_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln57_reg_924 <= add_ln57_fu_676_p2;
        tmp_16_cast_reg_929[11 : 6] <= tmp_16_cast_fu_686_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln58_reg_937 <= add_ln58_fu_700_p2;
        zext_ln208_2_reg_942[11 : 0] <= zext_ln208_2_fu_715_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        cov_V_load_reg_955 <= cov_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        data_V_load_6_reg_904 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln35_fu_405_p2 == 1'd0))) begin
        mean_V_addr_reg_775 <= zext_ln35_fu_396_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        mul_ln691_reg_909 <= grp_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sub_ln692_reg_834 <= sub_ln692_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln208_reg_757 <= trunc_ln208_fu_386_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        trunc_ln693_2_reg_919 <= {{grp_fu_650_p2[256:138]}};
    end
end

always @ (*) begin
    if ((((icmp_ln57_fu_694_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_694_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        cov_V_address0 = zext_ln208_2_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        cov_V_address0 = cov_V_addr_4_reg_873;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        cov_V_address0 = cov_V_addr_reg_868;
    end else begin
        cov_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        cov_V_ce0 = 1'b1;
    end else begin
        cov_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30))) begin
        cov_V_we0 = 1'b1;
    end else begin
        cov_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        data_V_address0 = zext_ln215_2_fu_635_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_V_address0 = data_V_addr_6_reg_821;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_V_address0 = zext_ln692_2_fu_505_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_V_address0 = zext_ln691_fu_434_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_address0 = data_V_addr_reg_744;
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        data_V_ce1 = 1'b1;
    end else begin
        data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_V_d0 = sub_ln692_reg_834;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_d0 = trunc_ln208_reg_757;
    end else begin
        data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state5))) begin
        data_V_we0 = 1'b1;
    end else begin
        data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mean_V_address0 = zext_ln44_reg_816;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        mean_V_address0 = mean_V_addr_reg_775;
    end else begin
        mean_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7))) begin
        mean_V_ce0 = 1'b1;
    end else begin
        mean_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln38_fu_439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        mean_V_we0 = 1'b1;
    end else begin
        mean_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        xin_ce0 = 1'b1;
    end else begin
        xin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        xin_we0 = 1'b1;
    end else begin
        xin_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xout_ce0 = 1'b1;
    end else begin
        xout_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln29_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln30_fu_380_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln35_fu_405_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln38_fu_439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln43_fu_480_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln44_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln47_fu_548_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln48_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln51_fu_640_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln57_fu_694_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln58_fu_720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln208_fu_710_p2 = (tmp_16_cast_reg_929 + zext_ln208_fu_706_p1);

assign add_ln215_2_fu_630_p2 = (tmp_20_cast_fu_612_p3 + zext_ln50_1_reg_863);

assign add_ln215_fu_620_p2 = (tmp_20_cast_fu_612_p3 + zext_ln50_reg_844);

assign add_ln29_fu_335_p2 = (i_reg_185 + 7'd1);

assign add_ln30_fu_359_p2 = (j_5_reg_196 + 7'd1);

assign add_ln31_fu_369_p2 = (tmp_cast_reg_731 + zext_ln31_fu_365_p1);

assign add_ln35_fu_390_p2 = (j_reg_207 + 7'd1);

assign add_ln38_fu_411_p2 = (i_6_reg_218 + 7'd1);

assign add_ln43_fu_462_p2 = (i_5_reg_241 + 7'd1);

assign add_ln44_fu_486_p2 = (j_6_reg_252 + 7'd1);

assign add_ln47_fu_526_p2 = (i_7_reg_263 + 7'd1);

assign add_ln48_fu_554_p2 = (j_7_reg_274 + 7'd1);

assign add_ln50_fu_564_p2 = (tmp_15_cast_reg_850 + zext_ln50_1_fu_560_p1);

assign add_ln51_fu_602_p2 = (k_reg_285 + 7'd1);

assign add_ln54_fu_586_p2 = (tmp_17_cast_fu_578_p3 + zext_ln50_reg_844);

assign add_ln57_fu_676_p2 = (i_8_reg_308 + 7'd1);

assign add_ln58_fu_700_p2 = (j_8_reg_319 + 7'd1);

assign add_ln691_2_fu_661_p2 = (mul_ln691_reg_909 + conv3_i2112_reg_296);

assign add_ln691_3_fu_429_p2 = (tmp_14_cast_fu_421_p3 + zext_ln35_1_reg_767);

assign add_ln691_fu_456_p2 = ($signed(reg_330) + $signed(add_i3113_reg_229));

assign add_ln692_fu_500_p2 = (tmp_13_cast_reg_803 + zext_ln692_fu_496_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address1 = zext_ln215_fu_625_p1;

assign grp_fu_650_p0 = grp_fu_650_p00;

assign grp_fu_650_p00 = conv3_i2112_reg_296;

assign grp_fu_650_p1 = 257'd340614998755660788452097358758680985857;

assign icmp_ln29_fu_353_p2 = ((i_reg_185 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_380_p2 = ((j_5_reg_196 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_405_p2 = ((j_reg_207 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_439_p2 = ((i_6_reg_218 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_480_p2 = ((i_5_reg_241 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_510_p2 = ((j_6_reg_252 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_548_p2 = ((i_7_reg_263 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_596_p2 = ((j_7_reg_274 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_640_p2 = ((k_reg_285 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_694_p2 = ((i_8_reg_308 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_720_p2 = ((j_8_reg_319 == 7'd64) ? 1'b1 : 1'b0);

assign mean_V_d0 = {{add_i3113_reg_229[127:10]}};

assign mean_V_load_cast_fu_516_p1 = mean_V_q0;

assign sub_ln692_fu_520_p2 = ($signed(reg_330) - $signed(mean_V_load_cast_fu_516_p1));

assign tmp_13_cast_fu_472_p3 = {{trunc_ln692_fu_468_p1}, {6'd0}};

assign tmp_14_cast_fu_421_p3 = {{trunc_ln691_fu_417_p1}, {6'd0}};

assign tmp_15_cast_fu_540_p3 = {{trunc_ln50_fu_536_p1}, {6'd0}};

assign tmp_16_cast_fu_686_p3 = {{trunc_ln208_1_fu_682_p1}, {6'd0}};

assign tmp_17_cast_fu_578_p3 = {{trunc_ln54_fu_574_p1}, {6'd0}};

assign tmp_20_cast_fu_612_p3 = {{trunc_ln215_fu_608_p1}, {6'd0}};

assign tmp_cast_fu_345_p3 = {{trunc_ln31_fu_341_p1}, {6'd0}};

assign trunc_ln208_1_fu_682_p1 = i_8_reg_308[5:0];

assign trunc_ln208_fu_386_p1 = xout_q0[127:0];

assign trunc_ln215_fu_608_p1 = k_reg_285[5:0];

assign trunc_ln31_fu_341_p1 = i_reg_185[5:0];

assign trunc_ln50_fu_536_p1 = i_7_reg_263[5:0];

assign trunc_ln54_fu_574_p1 = j_7_reg_274[5:0];

assign trunc_ln691_fu_417_p1 = i_6_reg_218[5:0];

assign trunc_ln692_fu_468_p1 = i_5_reg_241[5:0];

assign xin_address0 = zext_ln208_2_reg_942;

assign xin_d0 = cov_V_load_reg_955;

assign xout_address0 = zext_ln31_1_fu_374_p1;

assign zext_ln208_2_fu_715_p1 = add_ln208_fu_710_p2;

assign zext_ln208_fu_706_p1 = j_8_reg_319;

assign zext_ln215_2_fu_635_p1 = add_ln215_2_fu_630_p2;

assign zext_ln215_fu_625_p1 = add_ln215_fu_620_p2;

assign zext_ln31_1_fu_374_p1 = add_ln31_fu_369_p2;

assign zext_ln31_fu_365_p1 = j_5_reg_196;

assign zext_ln35_1_fu_401_p1 = j_reg_207;

assign zext_ln35_fu_396_p1 = j_reg_207;

assign zext_ln44_fu_492_p1 = j_6_reg_252;

assign zext_ln50_1_fu_560_p1 = j_7_reg_274;

assign zext_ln50_2_fu_569_p1 = add_ln50_fu_564_p2;

assign zext_ln50_fu_532_p1 = i_7_reg_263;

assign zext_ln54_fu_591_p1 = add_ln54_fu_586_p2;

assign zext_ln691_fu_434_p1 = add_ln691_3_fu_429_p2;

assign zext_ln692_2_fu_505_p1 = add_ln692_fu_500_p2;

assign zext_ln692_fu_496_p1 = j_6_reg_252;

always @ (posedge ap_clk) begin
    tmp_cast_reg_731[5:0] <= 6'b000000;
    zext_ln35_1_reg_767[11:7] <= 5'b00000;
    tmp_13_cast_reg_803[5:0] <= 6'b000000;
    zext_ln44_reg_816[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln50_reg_844[11:7] <= 5'b00000;
    tmp_15_cast_reg_850[5:0] <= 6'b000000;
    zext_ln50_1_reg_863[11:7] <= 5'b00000;
    tmp_16_cast_reg_929[5:0] <= 6'b000000;
    zext_ln208_2_reg_942[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //top_nondf_kernel_cov_x0
