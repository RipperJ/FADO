// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_IO_L2_in_0_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_C_IO_L2_in_0_x017_dout,
        fifo_C_C_IO_L2_in_0_x017_empty_n,
        fifo_C_C_IO_L2_in_0_x017_read,
        fifo_C_C_IO_L2_in_1_x018_din,
        fifo_C_C_IO_L2_in_1_x018_full_n,
        fifo_C_C_IO_L2_in_1_x018_write,
        fifo_C_PE_0_0_x0101_din,
        fifo_C_PE_0_0_x0101_full_n,
        fifo_C_PE_0_0_x0101_write
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_C_C_IO_L2_in_0_x017_dout;
input   fifo_C_C_IO_L2_in_0_x017_empty_n;
output   fifo_C_C_IO_L2_in_0_x017_read;
output  [511:0] fifo_C_C_IO_L2_in_1_x018_din;
input   fifo_C_C_IO_L2_in_1_x018_full_n;
output   fifo_C_C_IO_L2_in_1_x018_write;
output  [255:0] fifo_C_PE_0_0_x0101_din;
input   fifo_C_PE_0_0_x0101_full_n;
output   fifo_C_PE_0_0_x0101_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_C_IO_L2_in_0_x017_read;
reg fifo_C_C_IO_L2_in_1_x018_write;
reg[255:0] fifo_C_PE_0_0_x0101_din;
reg fifo_C_PE_0_0_x0101_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_C_IO_L2_in_0_x017_blk_n;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state32;
reg    fifo_C_C_IO_L2_in_1_x018_blk_n;
reg    fifo_C_PE_0_0_x0101_blk_n;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire   [4:0] add_ln890_214_fu_572_p2;
reg   [4:0] add_ln890_214_reg_1571;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_578_p2;
wire   [0:0] icmp_ln890237_fu_584_p2;
reg   [0:0] icmp_ln890237_reg_1580;
wire   [2:0] select_ln3053_fu_590_p3;
reg   [2:0] select_ln3053_reg_1585;
wire   [0:0] or_ln3053_fu_598_p2;
reg   [0:0] or_ln3053_reg_1590;
wire   [0:0] and_ln3053_fu_610_p2;
wire   [5:0] add_i_i780_cast_fu_624_p2;
reg   [5:0] add_i_i780_cast_reg_1598;
wire   [0:0] icmp_ln3060_fu_630_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] c3_60_fu_636_p2;
reg   [3:0] c3_60_reg_1608;
wire   [0:0] icmp_ln886_14_fu_646_p2;
wire   [0:0] icmp_ln3065_fu_651_p2;
reg   [0:0] icmp_ln3065_reg_1617;
wire   [3:0] add_ln691_1211_fu_657_p2;
reg   [3:0] add_ln691_1211_reg_1621;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln691_1209_fu_669_p2;
reg   [3:0] add_ln691_1209_reg_1629;
wire   [6:0] tmp_833_cast_fu_679_p3;
reg   [6:0] tmp_833_cast_reg_1634;
wire   [4:0] add_ln691_1212_fu_693_p2;
reg   [4:0] add_ln691_1212_reg_1642;
wire    ap_CS_fsm_state5;
wire   [4:0] add_ln691_1210_fu_705_p2;
reg   [4:0] add_ln691_1210_reg_1650;
wire    ap_CS_fsm_state7;
reg   [6:0] local_C_pong_V_addr_reg_1655;
wire   [16:0] add_ln3101_fu_731_p2;
reg   [16:0] add_ln3101_reg_1663;
wire    ap_CS_fsm_state9;
wire   [3:0] select_ln3108_fu_845_p3;
reg   [3:0] select_ln3108_reg_1671;
wire   [0:0] icmp_ln3101_fu_741_p2;
wire   [0:0] select_ln3108_1_fu_857_p3;
reg   [0:0] select_ln3108_1_reg_1677;
wire   [5:0] select_ln890_251_fu_865_p3;
reg   [5:0] select_ln890_251_reg_1682;
wire   [3:0] select_ln3108_2_fu_901_p3;
reg   [3:0] select_ln3108_2_reg_1687;
wire   [9:0] select_ln890_252_fu_915_p3;
reg   [9:0] select_ln890_252_reg_1692;
wire   [10:0] select_ln890_253_fu_929_p3;
reg   [10:0] select_ln890_253_reg_1697;
wire    ap_CS_fsm_state10;
wire   [255:0] select_ln3124_fu_960_p3;
reg   [255:0] select_ln3124_reg_1707;
wire    ap_CS_fsm_state11;
wire   [3:0] add_ln691_1203_fu_967_p2;
wire   [0:0] arb_fu_978_p2;
wire    ap_CS_fsm_state28;
wire   [2:0] add_ln691_1204_fu_983_p2;
wire   [0:0] icmp_ln3134_fu_988_p2;
wire    ap_CS_fsm_state29;
wire   [3:0] c3_59_fu_994_p2;
reg   [3:0] c3_59_reg_1731;
wire   [0:0] icmp_ln886_fu_1004_p2;
wire   [0:0] icmp_ln3139_fu_1009_p2;
reg   [0:0] icmp_ln3139_reg_1740;
wire   [3:0] add_ln691_1207_fu_1015_p2;
reg   [3:0] add_ln691_1207_reg_1744;
wire    ap_CS_fsm_state30;
wire   [3:0] add_ln691_1205_fu_1027_p2;
reg   [3:0] add_ln691_1205_reg_1752;
wire   [6:0] tmp_832_cast_fu_1037_p3;
reg   [6:0] tmp_832_cast_reg_1757;
wire   [4:0] add_ln691_1208_fu_1051_p2;
reg   [4:0] add_ln691_1208_reg_1765;
wire    ap_CS_fsm_state31;
wire   [4:0] add_ln691_1206_fu_1063_p2;
reg   [4:0] add_ln691_1206_reg_1773;
wire    ap_CS_fsm_state33;
reg   [6:0] local_C_ping_V_addr_31_reg_1778;
wire   [16:0] add_ln3175_fu_1089_p2;
reg   [16:0] add_ln3175_reg_1786;
wire    ap_CS_fsm_state35;
wire   [3:0] select_ln3182_fu_1203_p3;
reg   [3:0] select_ln3182_reg_1794;
wire   [0:0] icmp_ln3175_fu_1099_p2;
wire   [0:0] select_ln3182_1_fu_1215_p3;
reg   [0:0] select_ln3182_1_reg_1800;
wire   [5:0] select_ln890_248_fu_1223_p3;
reg   [5:0] select_ln890_248_reg_1805;
wire   [3:0] select_ln3182_2_fu_1259_p3;
reg   [3:0] select_ln3182_2_reg_1810;
wire   [9:0] select_ln890_249_fu_1273_p3;
reg   [9:0] select_ln890_249_reg_1815;
wire   [10:0] select_ln890_250_fu_1287_p3;
reg   [10:0] select_ln890_250_reg_1820;
wire    ap_CS_fsm_state36;
wire   [255:0] select_ln3198_fu_1318_p3;
reg   [255:0] select_ln3198_reg_1830;
wire    ap_CS_fsm_state37;
wire   [3:0] add_ln691_1201_fu_1325_p2;
wire   [16:0] add_ln3219_fu_1330_p2;
reg   [16:0] add_ln3219_reg_1840;
wire    ap_CS_fsm_state54;
wire   [3:0] select_ln3226_fu_1444_p3;
reg   [3:0] select_ln3226_reg_1848;
wire   [0:0] icmp_ln3219_fu_1340_p2;
wire   [0:0] select_ln3226_1_fu_1456_p3;
reg   [0:0] select_ln3226_1_reg_1854;
wire   [5:0] select_ln890_fu_1464_p3;
reg   [5:0] select_ln890_reg_1859;
wire   [3:0] select_ln3226_2_fu_1500_p3;
reg   [3:0] select_ln3226_2_reg_1864;
wire   [9:0] select_ln890_246_fu_1514_p3;
reg   [9:0] select_ln890_246_reg_1869;
wire   [10:0] select_ln890_247_fu_1528_p3;
reg   [10:0] select_ln890_247_reg_1874;
wire    ap_CS_fsm_state55;
wire   [3:0] add_ln691_1199_fu_1545_p2;
reg   [3:0] add_ln691_1199_reg_1884;
wire   [255:0] select_ln3242_fu_1564_p3;
reg   [255:0] select_ln3242_reg_1889;
wire    ap_CS_fsm_state56;
reg   [6:0] local_C_ping_V_address0;
reg    local_C_ping_V_ce0;
wire   [511:0] local_C_ping_V_q0;
reg    local_C_ping_V_ce1;
reg    local_C_ping_V_we1;
wire   [6:0] local_C_pong_V_address0;
reg    local_C_pong_V_ce0;
wire   [511:0] local_C_pong_V_q0;
reg    local_C_pong_V_ce1;
reg    local_C_pong_V_we1;
reg   [4:0] indvar_flatten111_reg_250;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_261;
reg   [0:0] intra_trans_en_reg_272;
reg   [0:0] arb_16_reg_285;
reg   [3:0] c3_58_reg_297;
wire   [0:0] icmp_ln890_1215_fu_687_p2;
wire   [0:0] icmp_ln890_1216_fu_663_p2;
reg   [3:0] c4_V_44_reg_308;
wire   [0:0] icmp_ln890_1226_fu_699_p2;
reg   [3:0] c4_V_43_reg_319;
wire   [0:0] icmp_ln890_1225_fu_725_p2;
reg   [4:0] c5_V_92_reg_330;
reg    ap_block_state6;
reg   [4:0] c5_V_91_reg_341;
reg   [16:0] indvar_flatten47_reg_352;
reg   [10:0] indvar_flatten19_reg_363;
reg   [9:0] indvar_flatten_reg_374;
reg   [5:0] c6_V_96_reg_385;
reg   [3:0] c7_V_94_reg_396;
reg   [3:0] c3_reg_407;
wire   [0:0] icmp_ln890_1213_fu_1045_p2;
wire   [0:0] icmp_ln890_1214_fu_1021_p2;
reg   [3:0] c4_V_42_reg_418;
wire   [0:0] icmp_ln890_1224_fu_1057_p2;
reg   [3:0] c4_V_reg_429;
wire   [0:0] icmp_ln890_1223_fu_1083_p2;
reg   [4:0] c5_V_90_reg_440;
reg    ap_block_state32;
reg   [4:0] c5_V_reg_451;
reg   [16:0] indvar_flatten103_reg_462;
reg   [10:0] indvar_flatten75_reg_473;
reg   [9:0] indvar_flatten55_reg_484;
reg   [5:0] c6_V_95_reg_495;
reg   [3:0] c7_V_93_reg_506;
reg   [16:0] indvar_flatten167_reg_517;
reg   [10:0] indvar_flatten139_reg_528;
reg   [9:0] indvar_flatten119_reg_539;
reg   [5:0] c6_V_reg_550;
reg   [3:0] c7_V_reg_561;
wire   [63:0] zext_ln3075_1_fu_720_p1;
wire   [63:0] tmp_153_fu_937_p4;
wire   [63:0] zext_ln3149_1_fu_1078_p1;
wire   [63:0] tmp_152_fu_1295_p4;
wire   [63:0] tmp_s_fu_1536_p4;
wire   [0:0] xor_ln3053_fu_604_p2;
wire   [5:0] p_shl_fu_616_p3;
wire   [5:0] zext_ln886_14_fu_642_p1;
wire   [2:0] trunc_ln3075_fu_675_p1;
wire   [6:0] zext_ln3075_fu_711_p1;
wire   [6:0] add_ln3075_fu_715_p2;
wire   [0:0] icmp_ln890_1220_fu_747_p2;
wire   [0:0] empty_fu_737_p1;
wire   [0:0] xor_ln3101_fu_753_p2;
wire   [0:0] icmp_ln890_1221_fu_765_p2;
wire   [0:0] icmp_ln890_1222_fu_777_p2;
wire   [0:0] and_ln3101_2_fu_783_p2;
wire   [0:0] or_ln3107_fu_789_p2;
wire   [0:0] xor_ln3107_fu_803_p2;
wire   [0:0] and_ln3101_fu_759_p2;
wire   [0:0] or_ln3107_1_fu_809_p2;
wire   [0:0] and_ln3101_1_fu_771_p2;
wire   [5:0] select_ln3107_fu_795_p3;
wire   [0:0] and_ln3107_1_fu_821_p2;
wire   [0:0] or_ln3108_fu_833_p2;
wire   [0:0] or_ln3108_1_fu_839_p2;
wire   [5:0] add_ln691_1202_fu_827_p2;
wire   [0:0] empty_2508_fu_853_p1;
wire   [0:0] and_ln3107_fu_815_p2;
wire   [3:0] tmp_713_fu_883_p4;
wire   [3:0] tmp_712_fu_873_p4;
wire   [3:0] select_ln3107_1_fu_893_p3;
wire   [9:0] add_ln890_212_fu_909_p2;
wire   [10:0] add_ln890_213_fu_923_p2;
wire   [255:0] data_split_V_1_117_fu_950_p4;
wire   [255:0] data_split_V_0_117_fu_946_p1;
wire   [0:0] xor_ln3208_fu_972_p2;
wire   [5:0] zext_ln886_fu_1000_p1;
wire   [2:0] trunc_ln3149_fu_1033_p1;
wire   [6:0] zext_ln3149_fu_1069_p1;
wire   [6:0] add_ln3149_fu_1073_p2;
wire   [0:0] icmp_ln890_1217_fu_1105_p2;
wire   [0:0] empty_2509_fu_1095_p1;
wire   [0:0] xor_ln3175_fu_1111_p2;
wire   [0:0] icmp_ln890_1218_fu_1123_p2;
wire   [0:0] icmp_ln890_1219_fu_1135_p2;
wire   [0:0] and_ln3175_2_fu_1141_p2;
wire   [0:0] or_ln3181_fu_1147_p2;
wire   [0:0] xor_ln3181_fu_1161_p2;
wire   [0:0] and_ln3175_fu_1117_p2;
wire   [0:0] or_ln3181_1_fu_1167_p2;
wire   [0:0] and_ln3175_1_fu_1129_p2;
wire   [5:0] select_ln3181_fu_1153_p3;
wire   [0:0] and_ln3181_1_fu_1179_p2;
wire   [0:0] or_ln3182_fu_1191_p2;
wire   [0:0] or_ln3182_1_fu_1197_p2;
wire   [5:0] add_ln691_1200_fu_1185_p2;
wire   [0:0] empty_2510_fu_1211_p1;
wire   [0:0] and_ln3181_fu_1173_p2;
wire   [3:0] tmp_711_fu_1241_p4;
wire   [3:0] tmp_710_fu_1231_p4;
wire   [3:0] select_ln3181_1_fu_1251_p3;
wire   [9:0] add_ln890_210_fu_1267_p2;
wire   [10:0] add_ln890_211_fu_1281_p2;
wire   [255:0] data_split_V_1_116_fu_1308_p4;
wire   [255:0] data_split_V_0_116_fu_1304_p1;
wire   [0:0] icmp_ln890_1210_fu_1346_p2;
wire   [0:0] empty_2511_fu_1336_p1;
wire   [0:0] xor_ln3219_fu_1352_p2;
wire   [0:0] icmp_ln890_1211_fu_1364_p2;
wire   [0:0] icmp_ln890_1212_fu_1376_p2;
wire   [0:0] and_ln3219_2_fu_1382_p2;
wire   [0:0] or_ln3225_fu_1388_p2;
wire   [0:0] xor_ln3225_fu_1402_p2;
wire   [0:0] and_ln3219_fu_1358_p2;
wire   [0:0] or_ln3225_1_fu_1408_p2;
wire   [0:0] and_ln3219_1_fu_1370_p2;
wire   [5:0] select_ln3225_fu_1394_p3;
wire   [0:0] and_ln3225_1_fu_1420_p2;
wire   [0:0] or_ln3226_fu_1432_p2;
wire   [0:0] or_ln3226_1_fu_1438_p2;
wire   [5:0] add_ln691_fu_1426_p2;
wire   [0:0] empty_2512_fu_1452_p1;
wire   [0:0] and_ln3225_fu_1414_p2;
wire   [3:0] tmp_709_fu_1482_p4;
wire   [3:0] tmp_fu_1472_p4;
wire   [3:0] select_ln3225_1_fu_1492_p3;
wire   [9:0] add_ln890_fu_1508_p2;
wire   [10:0] add_ln890_209_fu_1522_p2;
wire   [255:0] data_split_V_1_fu_1554_p4;
wire   [255:0] data_split_V_0_fu_1550_p1;
wire    ap_CS_fsm_state73;
reg   [72:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 73'd1;
end

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_V_address0),
    .ce0(local_C_ping_V_ce0),
    .q0(local_C_ping_V_q0),
    .address1(local_C_ping_V_addr_31_reg_1778),
    .ce1(local_C_ping_V_ce1),
    .we1(local_C_ping_V_we1),
    .d1(fifo_C_C_IO_L2_in_0_x017_dout)
);

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_V_address0),
    .ce0(local_C_pong_V_ce0),
    .q0(local_C_pong_V_q0),
    .address1(local_C_pong_V_addr_reg_1655),
    .ce1(local_C_pong_V_ce1),
    .we1(local_C_pong_V_we1),
    .d1(fifo_C_C_IO_L2_in_0_x017_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        arb_16_reg_285 <= arb_fu_978_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_16_reg_285 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c1_V_reg_261 <= add_ln691_1204_fu_983_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_261 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln3053_fu_610_p2) & (icmp_ln890_fu_578_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_58_reg_297 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1216_fu_663_p2 == 1'd1) & (icmp_ln3065_reg_1617 == 1'd0)) | ((icmp_ln890_1215_fu_687_p2 == 1'd1) & (icmp_ln3065_reg_1617 == 1'd1))))) begin
        c3_58_reg_297 <= c3_60_reg_1608;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln3053_fu_610_p2) & (icmp_ln890_fu_578_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_reg_407 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((icmp_ln890_1214_fu_1021_p2 == 1'd1) & (icmp_ln3139_reg_1740 == 1'd0)) | ((icmp_ln890_1213_fu_1045_p2 == 1'd1) & (icmp_ln3139_reg_1740 == 1'd1))))) begin
        c3_reg_407 <= c3_59_reg_1731;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3139_fu_1009_p2 == 1'd0) & (icmp_ln886_fu_1004_p2 == 1'd0) & (icmp_ln3134_fu_988_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        c4_V_42_reg_418 <= 4'd0;
    end else if (((icmp_ln890_1224_fu_1057_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        c4_V_42_reg_418 <= add_ln691_1207_reg_1744;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3065_fu_651_p2 == 1'd1) & (icmp_ln886_14_fu_646_p2 == 1'd0) & (icmp_ln3060_fu_630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c4_V_43_reg_319 <= 4'd0;
    end else if (((icmp_ln890_1225_fu_725_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        c4_V_43_reg_319 <= add_ln691_1209_reg_1629;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3065_fu_651_p2 == 1'd0) & (icmp_ln886_14_fu_646_p2 == 1'd0) & (icmp_ln3060_fu_630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c4_V_44_reg_308 <= 4'd0;
    end else if (((icmp_ln890_1226_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c4_V_44_reg_308 <= add_ln691_1211_reg_1621;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3139_fu_1009_p2 == 1'd1) & (icmp_ln886_fu_1004_p2 == 1'd0) & (icmp_ln3134_fu_988_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        c4_V_reg_429 <= 4'd0;
    end else if (((icmp_ln890_1223_fu_1083_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        c4_V_reg_429 <= add_ln691_1205_reg_1752;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1214_fu_1021_p2 == 1'd0) & (icmp_ln3139_reg_1740 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        c5_V_90_reg_440 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
        c5_V_90_reg_440 <= add_ln691_1208_reg_1765;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1215_fu_687_p2 == 1'd0) & (icmp_ln3065_reg_1617 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_91_reg_341 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        c5_V_91_reg_341 <= add_ln691_1210_reg_1650;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1216_fu_663_p2 == 1'd0) & (icmp_ln3065_reg_1617 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_92_reg_330 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        c5_V_92_reg_330 <= add_ln691_1212_reg_1642;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1213_fu_1045_p2 == 1'd0) & (icmp_ln3139_reg_1740 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        c5_V_reg_451 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        c5_V_reg_451 <= add_ln691_1206_reg_1773;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        c6_V_95_reg_495 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        c6_V_95_reg_495 <= select_ln890_248_reg_1805;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        c6_V_96_reg_385 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        c6_V_96_reg_385 <= select_ln890_251_reg_1682;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c6_V_reg_550 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        c6_V_reg_550 <= select_ln890_reg_1859;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        c7_V_93_reg_506 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        c7_V_93_reg_506 <= add_ln691_1201_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        c7_V_94_reg_396 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        c7_V_94_reg_396 <= add_ln691_1203_fu_967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c7_V_reg_561 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        c7_V_reg_561 <= add_ln691_1199_reg_1884;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        indvar_flatten103_reg_462 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten103_reg_462 <= add_ln3175_reg_1786;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        indvar_flatten111_reg_250 <= add_ln890_214_reg_1571;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten111_reg_250 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten119_reg_539 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten119_reg_539 <= select_ln890_246_reg_1869;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten139_reg_528 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten139_reg_528 <= select_ln890_247_reg_1874;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten167_reg_517 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten167_reg_517 <= add_ln3219_reg_1840;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        indvar_flatten19_reg_363 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten19_reg_363 <= select_ln890_253_reg_1697;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        indvar_flatten47_reg_352 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten47_reg_352 <= add_ln3101_reg_1663;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        indvar_flatten55_reg_484 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten55_reg_484 <= select_ln890_249_reg_1815;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        indvar_flatten75_reg_473 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten75_reg_473 <= select_ln890_250_reg_1820;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
        indvar_flatten_reg_374 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
        indvar_flatten_reg_374 <= select_ln890_252_reg_1692;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        intra_trans_en_reg_272 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_272 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_578_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_i_i780_cast_reg_1598[5 : 3] <= add_i_i780_cast_fu_624_p2[5 : 3];
        icmp_ln890237_reg_1580 <= icmp_ln890237_fu_584_p2;
        or_ln3053_reg_1590 <= or_ln3053_fu_598_p2;
        select_ln3053_reg_1585 <= select_ln3053_fu_590_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln3101_reg_1663 <= add_ln3101_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln3175_reg_1786 <= add_ln3175_fu_1089_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln3219_reg_1840 <= add_ln3219_fu_1330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        add_ln691_1199_reg_1884 <= add_ln691_1199_fu_1545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3139_reg_1740 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        add_ln691_1205_reg_1752 <= add_ln691_1205_fu_1027_p2;
        tmp_832_cast_reg_1757[6 : 4] <= tmp_832_cast_fu_1037_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln691_1206_reg_1773 <= add_ln691_1206_fu_1063_p2;
        local_C_ping_V_addr_31_reg_1778 <= zext_ln3149_1_fu_1078_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3139_reg_1740 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        add_ln691_1207_reg_1744 <= add_ln691_1207_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln691_1208_reg_1765 <= add_ln691_1208_fu_1051_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3065_reg_1617 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln691_1209_reg_1629 <= add_ln691_1209_fu_669_p2;
        tmp_833_cast_reg_1634[6 : 4] <= tmp_833_cast_fu_679_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln691_1210_reg_1650 <= add_ln691_1210_fu_705_p2;
        local_C_pong_V_addr_reg_1655 <= zext_ln3075_1_fu_720_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3065_reg_1617 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln691_1211_reg_1621 <= add_ln691_1211_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1212_reg_1642 <= add_ln691_1212_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_214_reg_1571 <= add_ln890_214_fu_572_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        c3_59_reg_1731 <= c3_59_fu_994_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c3_60_reg_1608 <= c3_60_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_14_fu_646_p2 == 1'd0) & (icmp_ln3060_fu_630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln3065_reg_1617 <= icmp_ln3065_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_1004_p2 == 1'd0) & (icmp_ln3134_fu_988_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        icmp_ln3139_reg_1740 <= icmp_ln3139_fu_1009_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3101_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        select_ln3108_1_reg_1677 <= select_ln3108_1_fu_857_p3;
        select_ln3108_2_reg_1687 <= select_ln3108_2_fu_901_p3;
        select_ln3108_reg_1671 <= select_ln3108_fu_845_p3;
        select_ln890_251_reg_1682 <= select_ln890_251_fu_865_p3;
        select_ln890_252_reg_1692 <= select_ln890_252_fu_915_p3;
        select_ln890_253_reg_1697 <= select_ln890_253_fu_929_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        select_ln3124_reg_1707 <= select_ln3124_fu_960_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3175_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        select_ln3182_1_reg_1800 <= select_ln3182_1_fu_1215_p3;
        select_ln3182_2_reg_1810 <= select_ln3182_2_fu_1259_p3;
        select_ln3182_reg_1794 <= select_ln3182_fu_1203_p3;
        select_ln890_248_reg_1805 <= select_ln890_248_fu_1223_p3;
        select_ln890_249_reg_1815 <= select_ln890_249_fu_1273_p3;
        select_ln890_250_reg_1820 <= select_ln890_250_fu_1287_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        select_ln3198_reg_1830 <= select_ln3198_fu_1318_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3219_fu_1340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        select_ln3226_1_reg_1854 <= select_ln3226_1_fu_1456_p3;
        select_ln3226_2_reg_1864 <= select_ln3226_2_fu_1500_p3;
        select_ln3226_reg_1848 <= select_ln3226_fu_1444_p3;
        select_ln890_246_reg_1869 <= select_ln890_246_fu_1514_p3;
        select_ln890_247_reg_1874 <= select_ln890_247_fu_1528_p3;
        select_ln890_reg_1859 <= select_ln890_fu_1464_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        select_ln3242_reg_1889 <= select_ln3242_fu_1564_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        fifo_C_C_IO_L2_in_0_x017_blk_n = fifo_C_C_IO_L2_in_0_x017_empty_n;
    end else begin
        fifo_C_C_IO_L2_in_0_x017_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | (~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_0_x017_read = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_0_x017_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        fifo_C_C_IO_L2_in_1_x018_blk_n = fifo_C_C_IO_L2_in_1_x018_full_n;
    end else begin
        fifo_C_C_IO_L2_in_1_x018_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_1_x018_write = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_1_x018_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        fifo_C_PE_0_0_x0101_blk_n = fifo_C_PE_0_0_x0101_full_n;
    end else begin
        fifo_C_PE_0_0_x0101_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)))) begin
        fifo_C_PE_0_0_x0101_din = select_ln3242_reg_1889;
    end else if ((((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)))) begin
        fifo_C_PE_0_0_x0101_din = select_ln3198_reg_1830;
    end else if ((((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)))) begin
        fifo_C_PE_0_0_x0101_din = select_ln3124_reg_1707;
    end else begin
        fifo_C_PE_0_0_x0101_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_0_x0101_full_n == 1'b1)))) begin
        fifo_C_PE_0_0_x0101_write = 1'b1;
    end else begin
        fifo_C_PE_0_0_x0101_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        local_C_ping_V_address0 = tmp_s_fu_1536_p4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_C_ping_V_address0 = tmp_153_fu_937_p4;
    end else begin
        local_C_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state10))) begin
        local_C_ping_V_ce0 = 1'b1;
    end else begin
        local_C_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        local_C_ping_V_ce1 = 1'b1;
    end else begin
        local_C_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        local_C_ping_V_we1 = 1'b1;
    end else begin
        local_C_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        local_C_pong_V_ce0 = 1'b1;
    end else begin
        local_C_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_C_pong_V_ce1 = 1'b1;
    end else begin
        local_C_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_C_pong_V_we1 = 1'b1;
    end else begin
        local_C_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else if (((1'd1 == and_ln3053_fu_610_p2) & (icmp_ln890_fu_578_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln3060_fu_630_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd0)) | ((icmp_ln886_14_fu_646_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1216_fu_663_p2 == 1'd1) & (icmp_ln3065_reg_1617 == 1'd0)) | ((icmp_ln890_1215_fu_687_p2 == 1'd1) & (icmp_ln3065_reg_1617 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln890_1215_fu_687_p2 == 1'd0) & (icmp_ln3065_reg_1617 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1226_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln890_1225_fu_725_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln3101_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((1'b1 == ap_CS_fsm_state29) & (((icmp_ln3134_fu_988_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd0)) | ((icmp_ln886_fu_1004_p2 == 1'd1) & (or_ln3053_reg_1590 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (((icmp_ln890_1214_fu_1021_p2 == 1'd1) & (icmp_ln3139_reg_1740 == 1'd0)) | ((icmp_ln890_1213_fu_1045_p2 == 1'd1) & (icmp_ln3139_reg_1740 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((icmp_ln890_1213_fu_1045_p2 == 1'd0) & (icmp_ln3139_reg_1740 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln890_1224_fu_1057_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln890_1223_fu_1083_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln3175_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln3219_fu_1340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_0_x0101_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i780_cast_fu_624_p2 = ($signed(6'd41) - $signed(p_shl_fu_616_p3));

assign add_ln3075_fu_715_p2 = (tmp_833_cast_reg_1634 + zext_ln3075_fu_711_p1);

assign add_ln3101_fu_731_p2 = (indvar_flatten47_reg_352 + 17'd1);

assign add_ln3149_fu_1073_p2 = (tmp_832_cast_reg_1757 + zext_ln3149_fu_1069_p1);

assign add_ln3175_fu_1089_p2 = (indvar_flatten103_reg_462 + 17'd1);

assign add_ln3219_fu_1330_p2 = (indvar_flatten167_reg_517 + 17'd1);

assign add_ln691_1199_fu_1545_p2 = (select_ln3226_reg_1848 + 4'd1);

assign add_ln691_1200_fu_1185_p2 = (select_ln3181_fu_1153_p3 + 6'd1);

assign add_ln691_1201_fu_1325_p2 = (select_ln3182_reg_1794 + 4'd1);

assign add_ln691_1202_fu_827_p2 = (select_ln3107_fu_795_p3 + 6'd1);

assign add_ln691_1203_fu_967_p2 = (select_ln3108_reg_1671 + 4'd1);

assign add_ln691_1204_fu_983_p2 = (select_ln3053_reg_1585 + 3'd1);

assign add_ln691_1205_fu_1027_p2 = (c4_V_reg_429 + 4'd1);

assign add_ln691_1206_fu_1063_p2 = (c5_V_reg_451 + 5'd1);

assign add_ln691_1207_fu_1015_p2 = (c4_V_42_reg_418 + 4'd1);

assign add_ln691_1208_fu_1051_p2 = (c5_V_90_reg_440 + 5'd1);

assign add_ln691_1209_fu_669_p2 = (c4_V_43_reg_319 + 4'd1);

assign add_ln691_1210_fu_705_p2 = (c5_V_91_reg_341 + 5'd1);

assign add_ln691_1211_fu_657_p2 = (c4_V_44_reg_308 + 4'd1);

assign add_ln691_1212_fu_693_p2 = (c5_V_92_reg_330 + 5'd1);

assign add_ln691_fu_1426_p2 = (select_ln3225_fu_1394_p3 + 6'd1);

assign add_ln890_209_fu_1522_p2 = (indvar_flatten139_reg_528 + 11'd1);

assign add_ln890_210_fu_1267_p2 = (indvar_flatten55_reg_484 + 10'd1);

assign add_ln890_211_fu_1281_p2 = (indvar_flatten75_reg_473 + 11'd1);

assign add_ln890_212_fu_909_p2 = (indvar_flatten_reg_374 + 10'd1);

assign add_ln890_213_fu_923_p2 = (indvar_flatten19_reg_363 + 11'd1);

assign add_ln890_214_fu_572_p2 = (indvar_flatten111_reg_250 + 5'd1);

assign add_ln890_fu_1508_p2 = (indvar_flatten119_reg_539 + 10'd1);

assign and_ln3053_fu_610_p2 = (xor_ln3053_fu_604_p2 & arb_16_reg_285);

assign and_ln3101_1_fu_771_p2 = (xor_ln3101_fu_753_p2 & icmp_ln890_1221_fu_765_p2);

assign and_ln3101_2_fu_783_p2 = (xor_ln3101_fu_753_p2 & icmp_ln890_1222_fu_777_p2);

assign and_ln3101_fu_759_p2 = (xor_ln3101_fu_753_p2 & empty_fu_737_p1);

assign and_ln3107_1_fu_821_p2 = (or_ln3107_1_fu_809_p2 & and_ln3101_1_fu_771_p2);

assign and_ln3107_fu_815_p2 = (or_ln3107_1_fu_809_p2 & and_ln3101_fu_759_p2);

assign and_ln3175_1_fu_1129_p2 = (xor_ln3175_fu_1111_p2 & icmp_ln890_1218_fu_1123_p2);

assign and_ln3175_2_fu_1141_p2 = (xor_ln3175_fu_1111_p2 & icmp_ln890_1219_fu_1135_p2);

assign and_ln3175_fu_1117_p2 = (xor_ln3175_fu_1111_p2 & empty_2509_fu_1095_p1);

assign and_ln3181_1_fu_1179_p2 = (or_ln3181_1_fu_1167_p2 & and_ln3175_1_fu_1129_p2);

assign and_ln3181_fu_1173_p2 = (or_ln3181_1_fu_1167_p2 & and_ln3175_fu_1117_p2);

assign and_ln3219_1_fu_1370_p2 = (xor_ln3219_fu_1352_p2 & icmp_ln890_1211_fu_1364_p2);

assign and_ln3219_2_fu_1382_p2 = (xor_ln3219_fu_1352_p2 & icmp_ln890_1212_fu_1376_p2);

assign and_ln3219_fu_1358_p2 = (xor_ln3219_fu_1352_p2 & empty_2511_fu_1336_p1);

assign and_ln3225_1_fu_1420_p2 = (or_ln3225_1_fu_1408_p2 & and_ln3219_1_fu_1370_p2);

assign and_ln3225_fu_1414_p2 = (or_ln3225_1_fu_1408_p2 & and_ln3219_fu_1358_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state32 = ((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((fifo_C_C_IO_L2_in_0_x017_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_1_x018_full_n == 1'b0));
end

assign arb_fu_978_p2 = (xor_ln3208_fu_972_p2 | icmp_ln890237_reg_1580);

assign c3_59_fu_994_p2 = (c3_reg_407 + 4'd1);

assign c3_60_fu_636_p2 = (c3_58_reg_297 + 4'd1);

assign data_split_V_0_116_fu_1304_p1 = local_C_pong_V_q0[255:0];

assign data_split_V_0_117_fu_946_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_0_fu_1550_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_1_116_fu_1308_p4 = {{local_C_pong_V_q0[511:256]}};

assign data_split_V_1_117_fu_950_p4 = {{local_C_ping_V_q0[511:256]}};

assign data_split_V_1_fu_1554_p4 = {{local_C_ping_V_q0[511:256]}};

assign empty_2508_fu_853_p1 = add_ln691_1202_fu_827_p2[0:0];

assign empty_2509_fu_1095_p1 = c6_V_95_reg_495[0:0];

assign empty_2510_fu_1211_p1 = add_ln691_1200_fu_1185_p2[0:0];

assign empty_2511_fu_1336_p1 = c6_V_reg_550[0:0];

assign empty_2512_fu_1452_p1 = add_ln691_fu_1426_p2[0:0];

assign empty_fu_737_p1 = c6_V_96_reg_385[0:0];

assign fifo_C_C_IO_L2_in_1_x018_din = fifo_C_C_IO_L2_in_0_x017_dout;

assign icmp_ln3060_fu_630_p2 = ((c3_58_reg_297 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln3065_fu_651_p2 = ((c3_58_reg_297 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln3101_fu_741_p2 = ((indvar_flatten47_reg_352 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln3134_fu_988_p2 = ((c3_reg_407 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln3139_fu_1009_p2 = ((c3_reg_407 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln3175_fu_1099_p2 = ((indvar_flatten103_reg_462 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln3219_fu_1340_p2 = ((indvar_flatten167_reg_517 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln886_14_fu_646_p2 = ((zext_ln886_14_fu_642_p1 > add_i_i780_cast_reg_1598) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1004_p2 = ((zext_ln886_fu_1000_p1 > add_i_i780_cast_reg_1598) ? 1'b1 : 1'b0);

assign icmp_ln890237_fu_584_p2 = ((c1_V_reg_261 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1210_fu_1346_p2 = ((indvar_flatten139_reg_528 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1211_fu_1364_p2 = ((c7_V_reg_561 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1212_fu_1376_p2 = ((indvar_flatten119_reg_539 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1213_fu_1045_p2 = ((c4_V_reg_429 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1214_fu_1021_p2 = ((c4_V_42_reg_418 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1215_fu_687_p2 = ((c4_V_43_reg_319 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1216_fu_663_p2 = ((c4_V_44_reg_308 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1217_fu_1105_p2 = ((indvar_flatten75_reg_473 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1218_fu_1123_p2 = ((c7_V_93_reg_506 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1219_fu_1135_p2 = ((indvar_flatten55_reg_484 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1220_fu_747_p2 = ((indvar_flatten19_reg_363 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1221_fu_765_p2 = ((c7_V_94_reg_396 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1222_fu_777_p2 = ((indvar_flatten_reg_374 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1223_fu_1083_p2 = ((c5_V_reg_451 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1224_fu_1057_p2 = ((c5_V_90_reg_440 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1225_fu_725_p2 = ((c5_V_91_reg_341 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1226_fu_699_p2 = ((c5_V_92_reg_330 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_578_p2 = ((indvar_flatten111_reg_250 == 5'd24) ? 1'b1 : 1'b0);

assign local_C_pong_V_address0 = tmp_152_fu_1295_p4;

assign or_ln3053_fu_598_p2 = (intra_trans_en_reg_272 | icmp_ln890237_fu_584_p2);

assign or_ln3107_1_fu_809_p2 = (xor_ln3107_fu_803_p2 | icmp_ln890_1220_fu_747_p2);

assign or_ln3107_fu_789_p2 = (icmp_ln890_1220_fu_747_p2 | and_ln3101_2_fu_783_p2);

assign or_ln3108_1_fu_839_p2 = (or_ln3108_fu_833_p2 | icmp_ln890_1220_fu_747_p2);

assign or_ln3108_fu_833_p2 = (and_ln3107_1_fu_821_p2 | and_ln3101_2_fu_783_p2);

assign or_ln3181_1_fu_1167_p2 = (xor_ln3181_fu_1161_p2 | icmp_ln890_1217_fu_1105_p2);

assign or_ln3181_fu_1147_p2 = (icmp_ln890_1217_fu_1105_p2 | and_ln3175_2_fu_1141_p2);

assign or_ln3182_1_fu_1197_p2 = (or_ln3182_fu_1191_p2 | icmp_ln890_1217_fu_1105_p2);

assign or_ln3182_fu_1191_p2 = (and_ln3181_1_fu_1179_p2 | and_ln3175_2_fu_1141_p2);

assign or_ln3225_1_fu_1408_p2 = (xor_ln3225_fu_1402_p2 | icmp_ln890_1210_fu_1346_p2);

assign or_ln3225_fu_1388_p2 = (icmp_ln890_1210_fu_1346_p2 | and_ln3219_2_fu_1382_p2);

assign or_ln3226_1_fu_1438_p2 = (or_ln3226_fu_1432_p2 | icmp_ln890_1210_fu_1346_p2);

assign or_ln3226_fu_1432_p2 = (and_ln3225_1_fu_1420_p2 | and_ln3219_2_fu_1382_p2);

assign p_shl_fu_616_p3 = {{select_ln3053_fu_590_p3}, {3'd0}};

assign select_ln3053_fu_590_p3 = ((icmp_ln890237_fu_584_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_261);

assign select_ln3107_1_fu_893_p3 = ((or_ln3107_fu_789_p2[0:0] == 1'b1) ? 4'd0 : tmp_713_fu_883_p4);

assign select_ln3107_fu_795_p3 = ((or_ln3107_fu_789_p2[0:0] == 1'b1) ? 6'd0 : c6_V_96_reg_385);

assign select_ln3108_1_fu_857_p3 = ((and_ln3107_1_fu_821_p2[0:0] == 1'b1) ? empty_2508_fu_853_p1 : and_ln3107_fu_815_p2);

assign select_ln3108_2_fu_901_p3 = ((and_ln3107_1_fu_821_p2[0:0] == 1'b1) ? tmp_712_fu_873_p4 : select_ln3107_1_fu_893_p3);

assign select_ln3108_fu_845_p3 = ((or_ln3108_1_fu_839_p2[0:0] == 1'b1) ? 4'd0 : c7_V_94_reg_396);

assign select_ln3124_fu_960_p3 = ((select_ln3108_1_reg_1677[0:0] == 1'b1) ? data_split_V_1_117_fu_950_p4 : data_split_V_0_117_fu_946_p1);

assign select_ln3181_1_fu_1251_p3 = ((or_ln3181_fu_1147_p2[0:0] == 1'b1) ? 4'd0 : tmp_711_fu_1241_p4);

assign select_ln3181_fu_1153_p3 = ((or_ln3181_fu_1147_p2[0:0] == 1'b1) ? 6'd0 : c6_V_95_reg_495);

assign select_ln3182_1_fu_1215_p3 = ((and_ln3181_1_fu_1179_p2[0:0] == 1'b1) ? empty_2510_fu_1211_p1 : and_ln3181_fu_1173_p2);

assign select_ln3182_2_fu_1259_p3 = ((and_ln3181_1_fu_1179_p2[0:0] == 1'b1) ? tmp_710_fu_1231_p4 : select_ln3181_1_fu_1251_p3);

assign select_ln3182_fu_1203_p3 = ((or_ln3182_1_fu_1197_p2[0:0] == 1'b1) ? 4'd0 : c7_V_93_reg_506);

assign select_ln3198_fu_1318_p3 = ((select_ln3182_1_reg_1800[0:0] == 1'b1) ? data_split_V_1_116_fu_1308_p4 : data_split_V_0_116_fu_1304_p1);

assign select_ln3225_1_fu_1492_p3 = ((or_ln3225_fu_1388_p2[0:0] == 1'b1) ? 4'd0 : tmp_709_fu_1482_p4);

assign select_ln3225_fu_1394_p3 = ((or_ln3225_fu_1388_p2[0:0] == 1'b1) ? 6'd0 : c6_V_reg_550);

assign select_ln3226_1_fu_1456_p3 = ((and_ln3225_1_fu_1420_p2[0:0] == 1'b1) ? empty_2512_fu_1452_p1 : and_ln3225_fu_1414_p2);

assign select_ln3226_2_fu_1500_p3 = ((and_ln3225_1_fu_1420_p2[0:0] == 1'b1) ? tmp_fu_1472_p4 : select_ln3225_1_fu_1492_p3);

assign select_ln3226_fu_1444_p3 = ((or_ln3226_1_fu_1438_p2[0:0] == 1'b1) ? 4'd0 : c7_V_reg_561);

assign select_ln3242_fu_1564_p3 = ((select_ln3226_1_reg_1854[0:0] == 1'b1) ? data_split_V_1_fu_1554_p4 : data_split_V_0_fu_1550_p1);

assign select_ln890_246_fu_1514_p3 = ((or_ln3225_fu_1388_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_fu_1508_p2);

assign select_ln890_247_fu_1528_p3 = ((icmp_ln890_1210_fu_1346_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_209_fu_1522_p2);

assign select_ln890_248_fu_1223_p3 = ((and_ln3181_1_fu_1179_p2[0:0] == 1'b1) ? add_ln691_1200_fu_1185_p2 : select_ln3181_fu_1153_p3);

assign select_ln890_249_fu_1273_p3 = ((or_ln3181_fu_1147_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_210_fu_1267_p2);

assign select_ln890_250_fu_1287_p3 = ((icmp_ln890_1217_fu_1105_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_211_fu_1281_p2);

assign select_ln890_251_fu_865_p3 = ((and_ln3107_1_fu_821_p2[0:0] == 1'b1) ? add_ln691_1202_fu_827_p2 : select_ln3107_fu_795_p3);

assign select_ln890_252_fu_915_p3 = ((or_ln3107_fu_789_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_212_fu_909_p2);

assign select_ln890_253_fu_929_p3 = ((icmp_ln890_1220_fu_747_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_213_fu_923_p2);

assign select_ln890_fu_1464_p3 = ((and_ln3225_1_fu_1420_p2[0:0] == 1'b1) ? add_ln691_fu_1426_p2 : select_ln3225_fu_1394_p3);

assign tmp_152_fu_1295_p4 = {{{{56'd0}, {select_ln3182_reg_1794}}}, {select_ln3182_2_reg_1810}};

assign tmp_153_fu_937_p4 = {{{{56'd0}, {select_ln3108_reg_1671}}}, {select_ln3108_2_reg_1687}};

assign tmp_709_fu_1482_p4 = {{c6_V_reg_550[4:1]}};

assign tmp_710_fu_1231_p4 = {{add_ln691_1200_fu_1185_p2[4:1]}};

assign tmp_711_fu_1241_p4 = {{c6_V_95_reg_495[4:1]}};

assign tmp_712_fu_873_p4 = {{add_ln691_1202_fu_827_p2[4:1]}};

assign tmp_713_fu_883_p4 = {{c6_V_96_reg_385[4:1]}};

assign tmp_832_cast_fu_1037_p3 = {{trunc_ln3149_fu_1033_p1}, {4'd0}};

assign tmp_833_cast_fu_679_p3 = {{trunc_ln3075_fu_675_p1}, {4'd0}};

assign tmp_fu_1472_p4 = {{add_ln691_fu_1426_p2[4:1]}};

assign tmp_s_fu_1536_p4 = {{{{56'd0}, {select_ln3226_reg_1848}}}, {select_ln3226_2_reg_1864}};

assign trunc_ln3075_fu_675_p1 = c4_V_43_reg_319[2:0];

assign trunc_ln3149_fu_1033_p1 = c4_V_reg_429[2:0];

assign xor_ln3053_fu_604_p2 = (icmp_ln890237_fu_584_p2 ^ 1'd1);

assign xor_ln3101_fu_753_p2 = (icmp_ln890_1220_fu_747_p2 ^ 1'd1);

assign xor_ln3107_fu_803_p2 = (icmp_ln890_1222_fu_777_p2 ^ 1'd1);

assign xor_ln3175_fu_1111_p2 = (icmp_ln890_1217_fu_1105_p2 ^ 1'd1);

assign xor_ln3181_fu_1161_p2 = (icmp_ln890_1219_fu_1135_p2 ^ 1'd1);

assign xor_ln3208_fu_972_p2 = (arb_16_reg_285 ^ 1'd1);

assign xor_ln3219_fu_1352_p2 = (icmp_ln890_1210_fu_1346_p2 ^ 1'd1);

assign xor_ln3225_fu_1402_p2 = (icmp_ln890_1212_fu_1376_p2 ^ 1'd1);

assign zext_ln3075_1_fu_720_p1 = add_ln3075_fu_715_p2;

assign zext_ln3075_fu_711_p1 = c5_V_91_reg_341;

assign zext_ln3149_1_fu_1078_p1 = add_ln3149_fu_1073_p2;

assign zext_ln3149_fu_1069_p1 = c5_V_reg_451;

assign zext_ln886_14_fu_642_p1 = c3_58_reg_297;

assign zext_ln886_fu_1000_p1 = c3_reg_407;

always @ (posedge ap_clk) begin
    add_i_i780_cast_reg_1598[2:0] <= 3'b001;
    tmp_833_cast_reg_1634[3:0] <= 4'b0000;
    tmp_832_cast_reg_1757[3:0] <= 4'b0000;
end

endmodule //top_C_IO_L2_in_0_x0
