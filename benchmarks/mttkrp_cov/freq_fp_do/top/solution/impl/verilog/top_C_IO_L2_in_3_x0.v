// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_IO_L2_in_3_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_C_IO_L2_in_3_x020_dout,
        fifo_C_C_IO_L2_in_3_x020_empty_n,
        fifo_C_C_IO_L2_in_3_x020_read,
        fifo_C_C_IO_L2_in_4_x021_din,
        fifo_C_C_IO_L2_in_4_x021_full_n,
        fifo_C_C_IO_L2_in_4_x021_write,
        fifo_C_PE_0_3_x0116_din,
        fifo_C_PE_0_3_x0116_full_n,
        fifo_C_PE_0_3_x0116_write
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_C_C_IO_L2_in_3_x020_dout;
input   fifo_C_C_IO_L2_in_3_x020_empty_n;
output   fifo_C_C_IO_L2_in_3_x020_read;
output  [511:0] fifo_C_C_IO_L2_in_4_x021_din;
input   fifo_C_C_IO_L2_in_4_x021_full_n;
output   fifo_C_C_IO_L2_in_4_x021_write;
output  [255:0] fifo_C_PE_0_3_x0116_din;
input   fifo_C_PE_0_3_x0116_full_n;
output   fifo_C_PE_0_3_x0116_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_C_IO_L2_in_3_x020_read;
reg fifo_C_C_IO_L2_in_4_x021_write;
reg[255:0] fifo_C_PE_0_3_x0116_din;
reg fifo_C_PE_0_3_x0116_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_C_IO_L2_in_3_x020_blk_n;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state32;
reg    fifo_C_C_IO_L2_in_4_x021_blk_n;
reg    fifo_C_PE_0_3_x0116_blk_n;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire   [4:0] add_ln890_169_fu_580_p2;
reg   [4:0] add_ln890_169_reg_1583;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_586_p2;
wire   [0:0] icmp_ln890237_fu_592_p2;
reg   [0:0] icmp_ln890237_reg_1592;
wire   [2:0] select_ln3815_fu_598_p3;
reg   [2:0] select_ln3815_reg_1597;
wire   [0:0] or_ln3815_fu_606_p2;
reg   [0:0] or_ln3815_reg_1602;
wire   [0:0] and_ln3815_fu_618_p2;
wire   [5:0] add_i_i780_cast_fu_632_p2;
reg   [5:0] add_i_i780_cast_reg_1610;
wire   [0:0] tmp_645_fu_638_p3;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln886_8_fu_650_p2;
wire   [0:0] icmp_ln3827_fu_655_p2;
reg   [0:0] icmp_ln3827_reg_1624;
wire   [3:0] add_ln691_1118_fu_661_p2;
reg   [3:0] add_ln691_1118_reg_1628;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln691_1116_fu_673_p2;
reg   [3:0] add_ln691_1116_reg_1636;
wire   [6:0] tmp_726_cast_fu_683_p3;
reg   [6:0] tmp_726_cast_reg_1641;
wire   [3:0] c3_42_fu_697_p2;
wire   [0:0] icmp_ln890_1104_fu_691_p2;
wire   [0:0] icmp_ln890_1105_fu_667_p2;
wire   [4:0] add_ln691_1119_fu_703_p2;
reg   [4:0] add_ln691_1119_reg_1654;
wire    ap_CS_fsm_state5;
wire   [4:0] add_ln691_1117_fu_715_p2;
reg   [4:0] add_ln691_1117_reg_1662;
wire    ap_CS_fsm_state7;
reg   [6:0] local_C_pong_V_addr_reg_1667;
wire   [16:0] add_ln3863_fu_741_p2;
reg   [16:0] add_ln3863_reg_1675;
wire    ap_CS_fsm_state9;
wire   [3:0] select_ln3870_fu_855_p3;
reg   [3:0] select_ln3870_reg_1683;
wire   [0:0] icmp_ln3863_fu_751_p2;
wire   [0:0] select_ln3870_1_fu_867_p3;
reg   [0:0] select_ln3870_1_reg_1689;
wire   [5:0] select_ln890_176_fu_875_p3;
reg   [5:0] select_ln890_176_reg_1694;
wire   [3:0] select_ln3870_2_fu_911_p3;
reg   [3:0] select_ln3870_2_reg_1699;
wire   [9:0] select_ln890_177_fu_925_p3;
reg   [9:0] select_ln890_177_reg_1704;
wire   [10:0] select_ln890_178_fu_939_p3;
reg   [10:0] select_ln890_178_reg_1709;
wire    ap_CS_fsm_state10;
wire   [255:0] select_ln3886_fu_970_p3;
reg   [255:0] select_ln3886_reg_1719;
wire    ap_CS_fsm_state11;
wire   [3:0] add_ln691_1110_fu_977_p2;
wire   [0:0] arb_fu_988_p2;
wire    ap_CS_fsm_state28;
wire   [2:0] add_ln691_1111_fu_993_p2;
wire   [0:0] tmp_644_fu_998_p3;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln886_fu_1010_p2;
wire   [0:0] icmp_ln3901_fu_1015_p2;
reg   [0:0] icmp_ln3901_reg_1747;
wire   [3:0] add_ln691_1114_fu_1021_p2;
reg   [3:0] add_ln691_1114_reg_1751;
wire    ap_CS_fsm_state30;
wire   [3:0] add_ln691_1112_fu_1033_p2;
reg   [3:0] add_ln691_1112_reg_1759;
wire   [6:0] tmp_721_cast_fu_1043_p3;
reg   [6:0] tmp_721_cast_reg_1764;
wire   [3:0] c3_41_fu_1057_p2;
wire   [0:0] icmp_ln890_1102_fu_1051_p2;
wire   [0:0] icmp_ln890_1103_fu_1027_p2;
wire   [4:0] add_ln691_1115_fu_1063_p2;
reg   [4:0] add_ln691_1115_reg_1777;
wire    ap_CS_fsm_state31;
wire   [4:0] add_ln691_1113_fu_1075_p2;
reg   [4:0] add_ln691_1113_reg_1785;
wire    ap_CS_fsm_state33;
reg   [6:0] local_C_ping_V_addr_19_reg_1790;
wire   [16:0] add_ln3937_fu_1101_p2;
reg   [16:0] add_ln3937_reg_1798;
wire    ap_CS_fsm_state35;
wire   [3:0] select_ln3944_fu_1215_p3;
reg   [3:0] select_ln3944_reg_1806;
wire   [0:0] icmp_ln3937_fu_1111_p2;
wire   [0:0] select_ln3944_1_fu_1227_p3;
reg   [0:0] select_ln3944_1_reg_1812;
wire   [5:0] select_ln890_173_fu_1235_p3;
reg   [5:0] select_ln890_173_reg_1817;
wire   [3:0] select_ln3944_2_fu_1271_p3;
reg   [3:0] select_ln3944_2_reg_1822;
wire   [9:0] select_ln890_174_fu_1285_p3;
reg   [9:0] select_ln890_174_reg_1827;
wire   [10:0] select_ln890_175_fu_1299_p3;
reg   [10:0] select_ln890_175_reg_1832;
wire    ap_CS_fsm_state36;
wire   [255:0] select_ln3960_fu_1330_p3;
reg   [255:0] select_ln3960_reg_1842;
wire    ap_CS_fsm_state37;
wire   [3:0] add_ln691_1108_fu_1337_p2;
wire   [16:0] add_ln3981_fu_1342_p2;
reg   [16:0] add_ln3981_reg_1852;
wire    ap_CS_fsm_state54;
wire   [3:0] select_ln3988_fu_1456_p3;
reg   [3:0] select_ln3988_reg_1860;
wire   [0:0] icmp_ln3981_fu_1352_p2;
wire   [0:0] select_ln3988_1_fu_1468_p3;
reg   [0:0] select_ln3988_1_reg_1866;
wire   [5:0] select_ln890_fu_1476_p3;
reg   [5:0] select_ln890_reg_1871;
wire   [3:0] select_ln3988_2_fu_1512_p3;
reg   [3:0] select_ln3988_2_reg_1876;
wire   [9:0] select_ln890_171_fu_1526_p3;
reg   [9:0] select_ln890_171_reg_1881;
wire   [10:0] select_ln890_172_fu_1540_p3;
reg   [10:0] select_ln890_172_reg_1886;
wire    ap_CS_fsm_state55;
wire   [255:0] select_ln4004_fu_1571_p3;
reg   [255:0] select_ln4004_reg_1896;
wire    ap_CS_fsm_state56;
wire   [3:0] add_ln691_1106_fu_1578_p2;
reg   [6:0] local_C_ping_V_address0;
reg    local_C_ping_V_ce0;
wire   [511:0] local_C_ping_V_q0;
reg    local_C_ping_V_ce1;
reg    local_C_ping_V_we1;
wire   [6:0] local_C_pong_V_address0;
reg    local_C_pong_V_ce0;
wire   [511:0] local_C_pong_V_q0;
reg    local_C_pong_V_ce1;
reg    local_C_pong_V_we1;
reg   [4:0] indvar_flatten111_reg_256;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_267;
reg   [0:0] intra_trans_en_reg_278;
reg   [0:0] arb_10_reg_291;
reg   [3:0] c3_40_reg_303;
reg   [3:0] c4_V_26_reg_315;
wire   [0:0] icmp_ln890_1115_fu_709_p2;
reg   [3:0] c4_V_25_reg_326;
wire   [0:0] icmp_ln890_1114_fu_735_p2;
reg   [4:0] c5_V_74_reg_337;
reg    ap_block_state6;
reg   [4:0] c5_V_73_reg_348;
reg   [16:0] indvar_flatten47_reg_359;
reg   [10:0] indvar_flatten19_reg_370;
reg   [9:0] indvar_flatten_reg_381;
reg   [5:0] c6_V_84_reg_392;
reg   [3:0] c7_V_82_reg_403;
reg   [3:0] c3_reg_414;
reg   [3:0] c4_V_24_reg_426;
wire   [0:0] icmp_ln890_1113_fu_1069_p2;
reg   [3:0] c4_V_reg_437;
wire   [0:0] icmp_ln890_1112_fu_1095_p2;
reg   [4:0] c5_V_72_reg_448;
reg    ap_block_state32;
reg   [4:0] c5_V_reg_459;
reg   [16:0] indvar_flatten103_reg_470;
reg   [10:0] indvar_flatten75_reg_481;
reg   [9:0] indvar_flatten55_reg_492;
reg   [5:0] c6_V_83_reg_503;
reg   [3:0] c7_V_81_reg_514;
reg   [16:0] indvar_flatten167_reg_525;
reg   [10:0] indvar_flatten139_reg_536;
reg   [9:0] indvar_flatten119_reg_547;
reg   [5:0] c6_V_reg_558;
reg   [3:0] c7_V_reg_569;
wire   [63:0] zext_ln3837_1_fu_730_p1;
wire   [63:0] tmp_147_fu_947_p4;
wire   [63:0] zext_ln3911_1_fu_1090_p1;
wire   [63:0] tmp_146_fu_1307_p4;
wire   [63:0] tmp_s_fu_1548_p4;
wire   [0:0] xor_ln3815_fu_612_p2;
wire   [5:0] p_shl_fu_624_p3;
wire   [5:0] zext_ln886_8_fu_646_p1;
wire   [2:0] trunc_ln3837_fu_679_p1;
wire   [6:0] zext_ln3837_fu_721_p1;
wire   [6:0] add_ln3837_fu_725_p2;
wire   [0:0] icmp_ln890_1109_fu_757_p2;
wire   [0:0] empty_fu_747_p1;
wire   [0:0] xor_ln3863_fu_763_p2;
wire   [0:0] icmp_ln890_1110_fu_775_p2;
wire   [0:0] icmp_ln890_1111_fu_787_p2;
wire   [0:0] and_ln3863_2_fu_793_p2;
wire   [0:0] or_ln3869_fu_799_p2;
wire   [0:0] xor_ln3869_fu_813_p2;
wire   [0:0] and_ln3863_fu_769_p2;
wire   [0:0] or_ln3869_1_fu_819_p2;
wire   [0:0] and_ln3863_1_fu_781_p2;
wire   [5:0] select_ln3869_fu_805_p3;
wire   [0:0] and_ln3869_1_fu_831_p2;
wire   [0:0] or_ln3870_fu_843_p2;
wire   [0:0] or_ln3870_1_fu_849_p2;
wire   [5:0] add_ln691_1109_fu_837_p2;
wire   [0:0] empty_2469_fu_863_p1;
wire   [0:0] and_ln3869_fu_825_p2;
wire   [3:0] tmp_649_fu_893_p4;
wire   [3:0] tmp_648_fu_883_p4;
wire   [3:0] select_ln3869_1_fu_903_p3;
wire   [9:0] add_ln890_167_fu_919_p2;
wire   [10:0] add_ln890_168_fu_933_p2;
wire   [255:0] data_split_V_1_105_fu_960_p4;
wire   [255:0] data_split_V_0_105_fu_956_p1;
wire   [0:0] xor_ln3970_fu_982_p2;
wire   [5:0] zext_ln886_fu_1006_p1;
wire   [2:0] trunc_ln3911_fu_1039_p1;
wire   [6:0] zext_ln3911_fu_1081_p1;
wire   [6:0] add_ln3911_fu_1085_p2;
wire   [0:0] icmp_ln890_1106_fu_1117_p2;
wire   [0:0] empty_2470_fu_1107_p1;
wire   [0:0] xor_ln3937_fu_1123_p2;
wire   [0:0] icmp_ln890_1107_fu_1135_p2;
wire   [0:0] icmp_ln890_1108_fu_1147_p2;
wire   [0:0] and_ln3937_2_fu_1153_p2;
wire   [0:0] or_ln3943_fu_1159_p2;
wire   [0:0] xor_ln3943_fu_1173_p2;
wire   [0:0] and_ln3937_fu_1129_p2;
wire   [0:0] or_ln3943_1_fu_1179_p2;
wire   [0:0] and_ln3937_1_fu_1141_p2;
wire   [5:0] select_ln3943_fu_1165_p3;
wire   [0:0] and_ln3943_1_fu_1191_p2;
wire   [0:0] or_ln3944_fu_1203_p2;
wire   [0:0] or_ln3944_1_fu_1209_p2;
wire   [5:0] add_ln691_1107_fu_1197_p2;
wire   [0:0] empty_2471_fu_1223_p1;
wire   [0:0] and_ln3943_fu_1185_p2;
wire   [3:0] tmp_647_fu_1253_p4;
wire   [3:0] tmp_646_fu_1243_p4;
wire   [3:0] select_ln3943_1_fu_1263_p3;
wire   [9:0] add_ln890_165_fu_1279_p2;
wire   [10:0] add_ln890_166_fu_1293_p2;
wire   [255:0] data_split_V_1_104_fu_1320_p4;
wire   [255:0] data_split_V_0_104_fu_1316_p1;
wire   [0:0] icmp_ln890_1099_fu_1358_p2;
wire   [0:0] empty_2472_fu_1348_p1;
wire   [0:0] xor_ln3981_fu_1364_p2;
wire   [0:0] icmp_ln890_1100_fu_1376_p2;
wire   [0:0] icmp_ln890_1101_fu_1388_p2;
wire   [0:0] and_ln3981_2_fu_1394_p2;
wire   [0:0] or_ln3987_fu_1400_p2;
wire   [0:0] xor_ln3987_fu_1414_p2;
wire   [0:0] and_ln3981_fu_1370_p2;
wire   [0:0] or_ln3987_1_fu_1420_p2;
wire   [0:0] and_ln3981_1_fu_1382_p2;
wire   [5:0] select_ln3987_fu_1406_p3;
wire   [0:0] and_ln3987_1_fu_1432_p2;
wire   [0:0] or_ln3988_fu_1444_p2;
wire   [0:0] or_ln3988_1_fu_1450_p2;
wire   [5:0] add_ln691_fu_1438_p2;
wire   [0:0] empty_2473_fu_1464_p1;
wire   [0:0] and_ln3987_fu_1426_p2;
wire   [3:0] tmp_643_fu_1494_p4;
wire   [3:0] tmp_fu_1484_p4;
wire   [3:0] select_ln3987_1_fu_1504_p3;
wire   [9:0] add_ln890_fu_1520_p2;
wire   [10:0] add_ln890_164_fu_1534_p2;
wire   [255:0] data_split_V_1_fu_1561_p4;
wire   [255:0] data_split_V_0_fu_1557_p1;
wire    ap_CS_fsm_state73;
reg   [72:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 73'd1;
end

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_V_address0),
    .ce0(local_C_ping_V_ce0),
    .q0(local_C_ping_V_q0),
    .address1(local_C_ping_V_addr_19_reg_1790),
    .ce1(local_C_ping_V_ce1),
    .we1(local_C_ping_V_we1),
    .d1(fifo_C_C_IO_L2_in_3_x020_dout)
);

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_V_address0),
    .ce0(local_C_pong_V_ce0),
    .q0(local_C_pong_V_q0),
    .address1(local_C_pong_V_addr_reg_1667),
    .ce1(local_C_pong_V_ce1),
    .we1(local_C_pong_V_we1),
    .d1(fifo_C_C_IO_L2_in_3_x020_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        arb_10_reg_291 <= arb_fu_988_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_10_reg_291 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c1_V_reg_267 <= add_ln691_1111_fu_993_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_267 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln3815_fu_618_p2) & (icmp_ln890_fu_586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_40_reg_303 <= 4'd3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1105_fu_667_p2 == 1'd1) & (icmp_ln3827_reg_1624 == 1'd0)) | ((icmp_ln890_1104_fu_691_p2 == 1'd1) & (icmp_ln3827_reg_1624 == 1'd1))))) begin
        c3_40_reg_303 <= c3_42_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln3815_fu_618_p2) & (icmp_ln890_fu_586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_reg_414 <= 4'd3;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((icmp_ln890_1103_fu_1027_p2 == 1'd1) & (icmp_ln3901_reg_1747 == 1'd0)) | ((icmp_ln890_1102_fu_1051_p2 == 1'd1) & (icmp_ln3901_reg_1747 == 1'd1))))) begin
        c3_reg_414 <= c3_41_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3901_fu_1015_p2 == 1'd0) & (icmp_ln886_fu_1010_p2 == 1'd0) & (tmp_644_fu_998_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        c4_V_24_reg_426 <= 4'd0;
    end else if (((icmp_ln890_1113_fu_1069_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        c4_V_24_reg_426 <= add_ln691_1114_reg_1751;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3827_fu_655_p2 == 1'd1) & (icmp_ln886_8_fu_650_p2 == 1'd0) & (tmp_645_fu_638_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c4_V_25_reg_326 <= 4'd0;
    end else if (((icmp_ln890_1114_fu_735_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        c4_V_25_reg_326 <= add_ln691_1116_reg_1636;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3827_fu_655_p2 == 1'd0) & (icmp_ln886_8_fu_650_p2 == 1'd0) & (tmp_645_fu_638_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c4_V_26_reg_315 <= 4'd0;
    end else if (((icmp_ln890_1115_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c4_V_26_reg_315 <= add_ln691_1118_reg_1628;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3901_fu_1015_p2 == 1'd1) & (icmp_ln886_fu_1010_p2 == 1'd0) & (tmp_644_fu_998_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        c4_V_reg_437 <= 4'd0;
    end else if (((icmp_ln890_1112_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        c4_V_reg_437 <= add_ln691_1112_reg_1759;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1103_fu_1027_p2 == 1'd0) & (icmp_ln3901_reg_1747 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        c5_V_72_reg_448 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
        c5_V_72_reg_448 <= add_ln691_1115_reg_1777;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1104_fu_691_p2 == 1'd0) & (icmp_ln3827_reg_1624 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_73_reg_348 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        c5_V_73_reg_348 <= add_ln691_1117_reg_1662;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1105_fu_667_p2 == 1'd0) & (icmp_ln3827_reg_1624 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_74_reg_337 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        c5_V_74_reg_337 <= add_ln691_1119_reg_1654;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1102_fu_1051_p2 == 1'd0) & (icmp_ln3901_reg_1747 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        c5_V_reg_459 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        c5_V_reg_459 <= add_ln691_1113_reg_1785;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        c6_V_83_reg_503 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        c6_V_83_reg_503 <= select_ln890_173_reg_1817;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        c6_V_84_reg_392 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        c6_V_84_reg_392 <= select_ln890_176_reg_1694;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c6_V_reg_558 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        c6_V_reg_558 <= select_ln890_reg_1871;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        c7_V_81_reg_514 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        c7_V_81_reg_514 <= add_ln691_1108_fu_1337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        c7_V_82_reg_403 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        c7_V_82_reg_403 <= add_ln691_1110_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c7_V_reg_569 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        c7_V_reg_569 <= add_ln691_1106_fu_1578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        indvar_flatten103_reg_470 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten103_reg_470 <= add_ln3937_reg_1798;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        indvar_flatten111_reg_256 <= add_ln890_169_reg_1583;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten111_reg_256 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten119_reg_547 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten119_reg_547 <= select_ln890_171_reg_1881;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten139_reg_536 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten139_reg_536 <= select_ln890_172_reg_1886;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten167_reg_525 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten167_reg_525 <= add_ln3981_reg_1852;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        indvar_flatten19_reg_370 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten19_reg_370 <= select_ln890_178_reg_1709;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        indvar_flatten47_reg_359 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten47_reg_359 <= add_ln3863_reg_1675;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        indvar_flatten55_reg_492 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten55_reg_492 <= select_ln890_174_reg_1827;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        indvar_flatten75_reg_481 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten75_reg_481 <= select_ln890_175_reg_1832;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
        indvar_flatten_reg_381 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
        indvar_flatten_reg_381 <= select_ln890_177_reg_1704;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        intra_trans_en_reg_278 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_278 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_i_i780_cast_reg_1610[5 : 3] <= add_i_i780_cast_fu_632_p2[5 : 3];
        icmp_ln890237_reg_1592 <= icmp_ln890237_fu_592_p2;
        or_ln3815_reg_1602 <= or_ln3815_fu_606_p2;
        select_ln3815_reg_1597 <= select_ln3815_fu_598_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln3863_reg_1675 <= add_ln3863_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln3937_reg_1798 <= add_ln3937_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln3981_reg_1852 <= add_ln3981_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3901_reg_1747 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        add_ln691_1112_reg_1759 <= add_ln691_1112_fu_1033_p2;
        tmp_721_cast_reg_1764[6 : 4] <= tmp_721_cast_fu_1043_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln691_1113_reg_1785 <= add_ln691_1113_fu_1075_p2;
        local_C_ping_V_addr_19_reg_1790 <= zext_ln3911_1_fu_1090_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3901_reg_1747 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        add_ln691_1114_reg_1751 <= add_ln691_1114_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln691_1115_reg_1777 <= add_ln691_1115_fu_1063_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3827_reg_1624 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln691_1116_reg_1636 <= add_ln691_1116_fu_673_p2;
        tmp_726_cast_reg_1641[6 : 4] <= tmp_726_cast_fu_683_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln691_1117_reg_1662 <= add_ln691_1117_fu_715_p2;
        local_C_pong_V_addr_reg_1667 <= zext_ln3837_1_fu_730_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3827_reg_1624 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln691_1118_reg_1628 <= add_ln691_1118_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1119_reg_1654 <= add_ln691_1119_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_169_reg_1583 <= add_ln890_169_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_8_fu_650_p2 == 1'd0) & (tmp_645_fu_638_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln3827_reg_1624 <= icmp_ln3827_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_1010_p2 == 1'd0) & (tmp_644_fu_998_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        icmp_ln3901_reg_1747 <= icmp_ln3901_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3863_fu_751_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        select_ln3870_1_reg_1689 <= select_ln3870_1_fu_867_p3;
        select_ln3870_2_reg_1699 <= select_ln3870_2_fu_911_p3;
        select_ln3870_reg_1683 <= select_ln3870_fu_855_p3;
        select_ln890_176_reg_1694 <= select_ln890_176_fu_875_p3;
        select_ln890_177_reg_1704 <= select_ln890_177_fu_925_p3;
        select_ln890_178_reg_1709 <= select_ln890_178_fu_939_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        select_ln3886_reg_1719 <= select_ln3886_fu_970_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3937_fu_1111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        select_ln3944_1_reg_1812 <= select_ln3944_1_fu_1227_p3;
        select_ln3944_2_reg_1822 <= select_ln3944_2_fu_1271_p3;
        select_ln3944_reg_1806 <= select_ln3944_fu_1215_p3;
        select_ln890_173_reg_1817 <= select_ln890_173_fu_1235_p3;
        select_ln890_174_reg_1827 <= select_ln890_174_fu_1285_p3;
        select_ln890_175_reg_1832 <= select_ln890_175_fu_1299_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        select_ln3960_reg_1842 <= select_ln3960_fu_1330_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3981_fu_1352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        select_ln3988_1_reg_1866 <= select_ln3988_1_fu_1468_p3;
        select_ln3988_2_reg_1876 <= select_ln3988_2_fu_1512_p3;
        select_ln3988_reg_1860 <= select_ln3988_fu_1456_p3;
        select_ln890_171_reg_1881 <= select_ln890_171_fu_1526_p3;
        select_ln890_172_reg_1886 <= select_ln890_172_fu_1540_p3;
        select_ln890_reg_1871 <= select_ln890_fu_1476_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        select_ln4004_reg_1896 <= select_ln4004_fu_1571_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        fifo_C_C_IO_L2_in_3_x020_blk_n = fifo_C_C_IO_L2_in_3_x020_empty_n;
    end else begin
        fifo_C_C_IO_L2_in_3_x020_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | (~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_3_x020_read = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_3_x020_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        fifo_C_C_IO_L2_in_4_x021_blk_n = fifo_C_C_IO_L2_in_4_x021_full_n;
    end else begin
        fifo_C_C_IO_L2_in_4_x021_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_4_x021_write = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_4_x021_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        fifo_C_PE_0_3_x0116_blk_n = fifo_C_PE_0_3_x0116_full_n;
    end else begin
        fifo_C_PE_0_3_x0116_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)))) begin
        fifo_C_PE_0_3_x0116_din = select_ln4004_reg_1896;
    end else if ((((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)))) begin
        fifo_C_PE_0_3_x0116_din = select_ln3960_reg_1842;
    end else if ((((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)))) begin
        fifo_C_PE_0_3_x0116_din = select_ln3886_reg_1719;
    end else begin
        fifo_C_PE_0_3_x0116_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_3_x0116_full_n == 1'b1)))) begin
        fifo_C_PE_0_3_x0116_write = 1'b1;
    end else begin
        fifo_C_PE_0_3_x0116_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        local_C_ping_V_address0 = tmp_s_fu_1548_p4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_C_ping_V_address0 = tmp_147_fu_947_p4;
    end else begin
        local_C_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state10))) begin
        local_C_ping_V_ce0 = 1'b1;
    end else begin
        local_C_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        local_C_ping_V_ce1 = 1'b1;
    end else begin
        local_C_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        local_C_ping_V_we1 = 1'b1;
    end else begin
        local_C_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        local_C_pong_V_ce0 = 1'b1;
    end else begin
        local_C_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_C_pong_V_ce1 = 1'b1;
    end else begin
        local_C_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_C_pong_V_we1 = 1'b1;
    end else begin
        local_C_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else if (((1'd1 == and_ln3815_fu_618_p2) & (icmp_ln890_fu_586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((tmp_645_fu_638_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd0)) | ((icmp_ln886_8_fu_650_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1105_fu_667_p2 == 1'd1) & (icmp_ln3827_reg_1624 == 1'd0)) | ((icmp_ln890_1104_fu_691_p2 == 1'd1) & (icmp_ln3827_reg_1624 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln890_1104_fu_691_p2 == 1'd0) & (icmp_ln3827_reg_1624 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1115_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln890_1114_fu_735_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln3863_fu_751_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd1)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((1'b1 == ap_CS_fsm_state29) & (((tmp_644_fu_998_p3 == 1'd1) & (or_ln3815_reg_1602 == 1'd0)) | ((icmp_ln886_fu_1010_p2 == 1'd1) & (or_ln3815_reg_1602 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (((icmp_ln890_1103_fu_1027_p2 == 1'd1) & (icmp_ln3901_reg_1747 == 1'd0)) | ((icmp_ln890_1102_fu_1051_p2 == 1'd1) & (icmp_ln3901_reg_1747 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((icmp_ln890_1102_fu_1051_p2 == 1'd0) & (icmp_ln3901_reg_1747 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln890_1113_fu_1069_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln890_1112_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln3937_fu_1111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln3981_fu_1352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_3_x0116_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i780_cast_fu_632_p2 = ($signed(6'd41) - $signed(p_shl_fu_624_p3));

assign add_ln3837_fu_725_p2 = (tmp_726_cast_reg_1641 + zext_ln3837_fu_721_p1);

assign add_ln3863_fu_741_p2 = (indvar_flatten47_reg_359 + 17'd1);

assign add_ln3911_fu_1085_p2 = (tmp_721_cast_reg_1764 + zext_ln3911_fu_1081_p1);

assign add_ln3937_fu_1101_p2 = (indvar_flatten103_reg_470 + 17'd1);

assign add_ln3981_fu_1342_p2 = (indvar_flatten167_reg_525 + 17'd1);

assign add_ln691_1106_fu_1578_p2 = (select_ln3988_reg_1860 + 4'd1);

assign add_ln691_1107_fu_1197_p2 = (select_ln3943_fu_1165_p3 + 6'd1);

assign add_ln691_1108_fu_1337_p2 = (select_ln3944_reg_1806 + 4'd1);

assign add_ln691_1109_fu_837_p2 = (select_ln3869_fu_805_p3 + 6'd1);

assign add_ln691_1110_fu_977_p2 = (select_ln3870_reg_1683 + 4'd1);

assign add_ln691_1111_fu_993_p2 = (select_ln3815_reg_1597 + 3'd1);

assign add_ln691_1112_fu_1033_p2 = (c4_V_reg_437 + 4'd1);

assign add_ln691_1113_fu_1075_p2 = (c5_V_reg_459 + 5'd1);

assign add_ln691_1114_fu_1021_p2 = (c4_V_24_reg_426 + 4'd1);

assign add_ln691_1115_fu_1063_p2 = (c5_V_72_reg_448 + 5'd1);

assign add_ln691_1116_fu_673_p2 = (c4_V_25_reg_326 + 4'd1);

assign add_ln691_1117_fu_715_p2 = (c5_V_73_reg_348 + 5'd1);

assign add_ln691_1118_fu_661_p2 = (c4_V_26_reg_315 + 4'd1);

assign add_ln691_1119_fu_703_p2 = (c5_V_74_reg_337 + 5'd1);

assign add_ln691_fu_1438_p2 = (select_ln3987_fu_1406_p3 + 6'd1);

assign add_ln890_164_fu_1534_p2 = (indvar_flatten139_reg_536 + 11'd1);

assign add_ln890_165_fu_1279_p2 = (indvar_flatten55_reg_492 + 10'd1);

assign add_ln890_166_fu_1293_p2 = (indvar_flatten75_reg_481 + 11'd1);

assign add_ln890_167_fu_919_p2 = (indvar_flatten_reg_381 + 10'd1);

assign add_ln890_168_fu_933_p2 = (indvar_flatten19_reg_370 + 11'd1);

assign add_ln890_169_fu_580_p2 = (indvar_flatten111_reg_256 + 5'd1);

assign add_ln890_fu_1520_p2 = (indvar_flatten119_reg_547 + 10'd1);

assign and_ln3815_fu_618_p2 = (xor_ln3815_fu_612_p2 & arb_10_reg_291);

assign and_ln3863_1_fu_781_p2 = (xor_ln3863_fu_763_p2 & icmp_ln890_1110_fu_775_p2);

assign and_ln3863_2_fu_793_p2 = (xor_ln3863_fu_763_p2 & icmp_ln890_1111_fu_787_p2);

assign and_ln3863_fu_769_p2 = (xor_ln3863_fu_763_p2 & empty_fu_747_p1);

assign and_ln3869_1_fu_831_p2 = (or_ln3869_1_fu_819_p2 & and_ln3863_1_fu_781_p2);

assign and_ln3869_fu_825_p2 = (or_ln3869_1_fu_819_p2 & and_ln3863_fu_769_p2);

assign and_ln3937_1_fu_1141_p2 = (xor_ln3937_fu_1123_p2 & icmp_ln890_1107_fu_1135_p2);

assign and_ln3937_2_fu_1153_p2 = (xor_ln3937_fu_1123_p2 & icmp_ln890_1108_fu_1147_p2);

assign and_ln3937_fu_1129_p2 = (xor_ln3937_fu_1123_p2 & empty_2470_fu_1107_p1);

assign and_ln3943_1_fu_1191_p2 = (or_ln3943_1_fu_1179_p2 & and_ln3937_1_fu_1141_p2);

assign and_ln3943_fu_1185_p2 = (or_ln3943_1_fu_1179_p2 & and_ln3937_fu_1129_p2);

assign and_ln3981_1_fu_1382_p2 = (xor_ln3981_fu_1364_p2 & icmp_ln890_1100_fu_1376_p2);

assign and_ln3981_2_fu_1394_p2 = (xor_ln3981_fu_1364_p2 & icmp_ln890_1101_fu_1388_p2);

assign and_ln3981_fu_1370_p2 = (xor_ln3981_fu_1364_p2 & empty_2472_fu_1348_p1);

assign and_ln3987_1_fu_1432_p2 = (or_ln3987_1_fu_1420_p2 & and_ln3981_1_fu_1382_p2);

assign and_ln3987_fu_1426_p2 = (or_ln3987_1_fu_1420_p2 & and_ln3981_fu_1370_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state32 = ((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((fifo_C_C_IO_L2_in_3_x020_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_4_x021_full_n == 1'b0));
end

assign arb_fu_988_p2 = (xor_ln3970_fu_982_p2 | icmp_ln890237_reg_1592);

assign c3_41_fu_1057_p2 = (c3_reg_414 + 4'd1);

assign c3_42_fu_697_p2 = (c3_40_reg_303 + 4'd1);

assign data_split_V_0_104_fu_1316_p1 = local_C_pong_V_q0[255:0];

assign data_split_V_0_105_fu_956_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_0_fu_1557_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_1_104_fu_1320_p4 = {{local_C_pong_V_q0[511:256]}};

assign data_split_V_1_105_fu_960_p4 = {{local_C_ping_V_q0[511:256]}};

assign data_split_V_1_fu_1561_p4 = {{local_C_ping_V_q0[511:256]}};

assign empty_2469_fu_863_p1 = add_ln691_1109_fu_837_p2[0:0];

assign empty_2470_fu_1107_p1 = c6_V_83_reg_503[0:0];

assign empty_2471_fu_1223_p1 = add_ln691_1107_fu_1197_p2[0:0];

assign empty_2472_fu_1348_p1 = c6_V_reg_558[0:0];

assign empty_2473_fu_1464_p1 = add_ln691_fu_1438_p2[0:0];

assign empty_fu_747_p1 = c6_V_84_reg_392[0:0];

assign fifo_C_C_IO_L2_in_4_x021_din = fifo_C_C_IO_L2_in_3_x020_dout;

assign icmp_ln3827_fu_655_p2 = ((c3_40_reg_303 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln3863_fu_751_p2 = ((indvar_flatten47_reg_359 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln3901_fu_1015_p2 = ((c3_reg_414 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln3937_fu_1111_p2 = ((indvar_flatten103_reg_470 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln3981_fu_1352_p2 = ((indvar_flatten167_reg_525 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln886_8_fu_650_p2 = ((zext_ln886_8_fu_646_p1 > add_i_i780_cast_reg_1610) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1010_p2 = ((zext_ln886_fu_1006_p1 > add_i_i780_cast_reg_1610) ? 1'b1 : 1'b0);

assign icmp_ln890237_fu_592_p2 = ((c1_V_reg_267 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1099_fu_1358_p2 = ((indvar_flatten139_reg_536 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1100_fu_1376_p2 = ((c7_V_reg_569 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1101_fu_1388_p2 = ((indvar_flatten119_reg_547 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1102_fu_1051_p2 = ((c4_V_reg_437 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1103_fu_1027_p2 = ((c4_V_24_reg_426 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1104_fu_691_p2 = ((c4_V_25_reg_326 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1105_fu_667_p2 = ((c4_V_26_reg_315 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1106_fu_1117_p2 = ((indvar_flatten75_reg_481 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1107_fu_1135_p2 = ((c7_V_81_reg_514 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1108_fu_1147_p2 = ((indvar_flatten55_reg_492 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1109_fu_757_p2 = ((indvar_flatten19_reg_370 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1110_fu_775_p2 = ((c7_V_82_reg_403 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1111_fu_787_p2 = ((indvar_flatten_reg_381 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1112_fu_1095_p2 = ((c5_V_reg_459 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1113_fu_1069_p2 = ((c5_V_72_reg_448 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1114_fu_735_p2 = ((c5_V_73_reg_348 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1115_fu_709_p2 = ((c5_V_74_reg_337 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_586_p2 = ((indvar_flatten111_reg_256 == 5'd24) ? 1'b1 : 1'b0);

assign local_C_pong_V_address0 = tmp_146_fu_1307_p4;

assign or_ln3815_fu_606_p2 = (intra_trans_en_reg_278 | icmp_ln890237_fu_592_p2);

assign or_ln3869_1_fu_819_p2 = (xor_ln3869_fu_813_p2 | icmp_ln890_1109_fu_757_p2);

assign or_ln3869_fu_799_p2 = (icmp_ln890_1109_fu_757_p2 | and_ln3863_2_fu_793_p2);

assign or_ln3870_1_fu_849_p2 = (or_ln3870_fu_843_p2 | icmp_ln890_1109_fu_757_p2);

assign or_ln3870_fu_843_p2 = (and_ln3869_1_fu_831_p2 | and_ln3863_2_fu_793_p2);

assign or_ln3943_1_fu_1179_p2 = (xor_ln3943_fu_1173_p2 | icmp_ln890_1106_fu_1117_p2);

assign or_ln3943_fu_1159_p2 = (icmp_ln890_1106_fu_1117_p2 | and_ln3937_2_fu_1153_p2);

assign or_ln3944_1_fu_1209_p2 = (or_ln3944_fu_1203_p2 | icmp_ln890_1106_fu_1117_p2);

assign or_ln3944_fu_1203_p2 = (and_ln3943_1_fu_1191_p2 | and_ln3937_2_fu_1153_p2);

assign or_ln3987_1_fu_1420_p2 = (xor_ln3987_fu_1414_p2 | icmp_ln890_1099_fu_1358_p2);

assign or_ln3987_fu_1400_p2 = (icmp_ln890_1099_fu_1358_p2 | and_ln3981_2_fu_1394_p2);

assign or_ln3988_1_fu_1450_p2 = (or_ln3988_fu_1444_p2 | icmp_ln890_1099_fu_1358_p2);

assign or_ln3988_fu_1444_p2 = (and_ln3987_1_fu_1432_p2 | and_ln3981_2_fu_1394_p2);

assign p_shl_fu_624_p3 = {{select_ln3815_fu_598_p3}, {3'd0}};

assign select_ln3815_fu_598_p3 = ((icmp_ln890237_fu_592_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_267);

assign select_ln3869_1_fu_903_p3 = ((or_ln3869_fu_799_p2[0:0] == 1'b1) ? 4'd0 : tmp_649_fu_893_p4);

assign select_ln3869_fu_805_p3 = ((or_ln3869_fu_799_p2[0:0] == 1'b1) ? 6'd0 : c6_V_84_reg_392);

assign select_ln3870_1_fu_867_p3 = ((and_ln3869_1_fu_831_p2[0:0] == 1'b1) ? empty_2469_fu_863_p1 : and_ln3869_fu_825_p2);

assign select_ln3870_2_fu_911_p3 = ((and_ln3869_1_fu_831_p2[0:0] == 1'b1) ? tmp_648_fu_883_p4 : select_ln3869_1_fu_903_p3);

assign select_ln3870_fu_855_p3 = ((or_ln3870_1_fu_849_p2[0:0] == 1'b1) ? 4'd0 : c7_V_82_reg_403);

assign select_ln3886_fu_970_p3 = ((select_ln3870_1_reg_1689[0:0] == 1'b1) ? data_split_V_1_105_fu_960_p4 : data_split_V_0_105_fu_956_p1);

assign select_ln3943_1_fu_1263_p3 = ((or_ln3943_fu_1159_p2[0:0] == 1'b1) ? 4'd0 : tmp_647_fu_1253_p4);

assign select_ln3943_fu_1165_p3 = ((or_ln3943_fu_1159_p2[0:0] == 1'b1) ? 6'd0 : c6_V_83_reg_503);

assign select_ln3944_1_fu_1227_p3 = ((and_ln3943_1_fu_1191_p2[0:0] == 1'b1) ? empty_2471_fu_1223_p1 : and_ln3943_fu_1185_p2);

assign select_ln3944_2_fu_1271_p3 = ((and_ln3943_1_fu_1191_p2[0:0] == 1'b1) ? tmp_646_fu_1243_p4 : select_ln3943_1_fu_1263_p3);

assign select_ln3944_fu_1215_p3 = ((or_ln3944_1_fu_1209_p2[0:0] == 1'b1) ? 4'd0 : c7_V_81_reg_514);

assign select_ln3960_fu_1330_p3 = ((select_ln3944_1_reg_1812[0:0] == 1'b1) ? data_split_V_1_104_fu_1320_p4 : data_split_V_0_104_fu_1316_p1);

assign select_ln3987_1_fu_1504_p3 = ((or_ln3987_fu_1400_p2[0:0] == 1'b1) ? 4'd0 : tmp_643_fu_1494_p4);

assign select_ln3987_fu_1406_p3 = ((or_ln3987_fu_1400_p2[0:0] == 1'b1) ? 6'd0 : c6_V_reg_558);

assign select_ln3988_1_fu_1468_p3 = ((and_ln3987_1_fu_1432_p2[0:0] == 1'b1) ? empty_2473_fu_1464_p1 : and_ln3987_fu_1426_p2);

assign select_ln3988_2_fu_1512_p3 = ((and_ln3987_1_fu_1432_p2[0:0] == 1'b1) ? tmp_fu_1484_p4 : select_ln3987_1_fu_1504_p3);

assign select_ln3988_fu_1456_p3 = ((or_ln3988_1_fu_1450_p2[0:0] == 1'b1) ? 4'd0 : c7_V_reg_569);

assign select_ln4004_fu_1571_p3 = ((select_ln3988_1_reg_1866[0:0] == 1'b1) ? data_split_V_1_fu_1561_p4 : data_split_V_0_fu_1557_p1);

assign select_ln890_171_fu_1526_p3 = ((or_ln3987_fu_1400_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_fu_1520_p2);

assign select_ln890_172_fu_1540_p3 = ((icmp_ln890_1099_fu_1358_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_164_fu_1534_p2);

assign select_ln890_173_fu_1235_p3 = ((and_ln3943_1_fu_1191_p2[0:0] == 1'b1) ? add_ln691_1107_fu_1197_p2 : select_ln3943_fu_1165_p3);

assign select_ln890_174_fu_1285_p3 = ((or_ln3943_fu_1159_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_165_fu_1279_p2);

assign select_ln890_175_fu_1299_p3 = ((icmp_ln890_1106_fu_1117_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_166_fu_1293_p2);

assign select_ln890_176_fu_875_p3 = ((and_ln3869_1_fu_831_p2[0:0] == 1'b1) ? add_ln691_1109_fu_837_p2 : select_ln3869_fu_805_p3);

assign select_ln890_177_fu_925_p3 = ((or_ln3869_fu_799_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_167_fu_919_p2);

assign select_ln890_178_fu_939_p3 = ((icmp_ln890_1109_fu_757_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_168_fu_933_p2);

assign select_ln890_fu_1476_p3 = ((and_ln3987_1_fu_1432_p2[0:0] == 1'b1) ? add_ln691_fu_1438_p2 : select_ln3987_fu_1406_p3);

assign tmp_146_fu_1307_p4 = {{{{56'd0}, {select_ln3944_reg_1806}}}, {select_ln3944_2_reg_1822}};

assign tmp_147_fu_947_p4 = {{{{56'd0}, {select_ln3870_reg_1683}}}, {select_ln3870_2_reg_1699}};

assign tmp_643_fu_1494_p4 = {{c6_V_reg_558[4:1]}};

assign tmp_644_fu_998_p3 = c3_reg_414[32'd3];

assign tmp_645_fu_638_p3 = c3_40_reg_303[32'd3];

assign tmp_646_fu_1243_p4 = {{add_ln691_1107_fu_1197_p2[4:1]}};

assign tmp_647_fu_1253_p4 = {{c6_V_83_reg_503[4:1]}};

assign tmp_648_fu_883_p4 = {{add_ln691_1109_fu_837_p2[4:1]}};

assign tmp_649_fu_893_p4 = {{c6_V_84_reg_392[4:1]}};

assign tmp_721_cast_fu_1043_p3 = {{trunc_ln3911_fu_1039_p1}, {4'd0}};

assign tmp_726_cast_fu_683_p3 = {{trunc_ln3837_fu_679_p1}, {4'd0}};

assign tmp_fu_1484_p4 = {{add_ln691_fu_1438_p2[4:1]}};

assign tmp_s_fu_1548_p4 = {{{{56'd0}, {select_ln3988_reg_1860}}}, {select_ln3988_2_reg_1876}};

assign trunc_ln3837_fu_679_p1 = c4_V_25_reg_326[2:0];

assign trunc_ln3911_fu_1039_p1 = c4_V_reg_437[2:0];

assign xor_ln3815_fu_612_p2 = (icmp_ln890237_fu_592_p2 ^ 1'd1);

assign xor_ln3863_fu_763_p2 = (icmp_ln890_1109_fu_757_p2 ^ 1'd1);

assign xor_ln3869_fu_813_p2 = (icmp_ln890_1111_fu_787_p2 ^ 1'd1);

assign xor_ln3937_fu_1123_p2 = (icmp_ln890_1106_fu_1117_p2 ^ 1'd1);

assign xor_ln3943_fu_1173_p2 = (icmp_ln890_1108_fu_1147_p2 ^ 1'd1);

assign xor_ln3970_fu_982_p2 = (arb_10_reg_291 ^ 1'd1);

assign xor_ln3981_fu_1364_p2 = (icmp_ln890_1099_fu_1358_p2 ^ 1'd1);

assign xor_ln3987_fu_1414_p2 = (icmp_ln890_1101_fu_1388_p2 ^ 1'd1);

assign zext_ln3837_1_fu_730_p1 = add_ln3837_fu_725_p2;

assign zext_ln3837_fu_721_p1 = c5_V_73_reg_348;

assign zext_ln3911_1_fu_1090_p1 = add_ln3911_fu_1085_p2;

assign zext_ln3911_fu_1081_p1 = c5_V_reg_459;

assign zext_ln886_8_fu_646_p1 = c3_40_reg_303;

assign zext_ln886_fu_1006_p1 = c3_reg_414;

always @ (posedge ap_clk) begin
    add_i_i780_cast_reg_1610[2:0] <= 3'b001;
    tmp_726_cast_reg_1641[3:0] <= 4'b0000;
    tmp_721_cast_reg_1764[3:0] <= 4'b0000;
end

endmodule //top_C_IO_L2_in_3_x0
