// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_D_drain_IO_L3_out_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_D_drain_out_din,
        fifo_D_drain_out_full_n,
        fifo_D_drain_out_write,
        fifo_D_drain_local_in_dout,
        fifo_D_drain_local_in_empty_n,
        fifo_D_drain_local_in_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state6 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [127:0] fifo_D_drain_out_din;
input   fifo_D_drain_out_full_n;
output   fifo_D_drain_out_write;
input  [127:0] fifo_D_drain_local_in_dout;
input   fifo_D_drain_local_in_empty_n;
output   fifo_D_drain_local_in_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_D_drain_out_write;
reg fifo_D_drain_local_in_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_D_drain_out_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_561_reg_259;
reg    fifo_D_drain_local_in_blk_n;
reg   [7:0] indvar_flatten11_reg_129;
wire   [4:0] add_ln890_fu_140_p2;
reg   [4:0] add_ln890_reg_218;
wire    ap_CS_fsm_state2;
wire   [2:0] select_ln26257_fu_158_p3;
reg   [2:0] select_ln26257_reg_226;
wire   [0:0] icmp_ln890_fu_146_p2;
wire   [5:0] add_i_i56_cast_fu_174_p2;
reg   [5:0] add_i_i56_cast_reg_231;
wire   [0:0] icmp_ln26261_fu_180_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] c3_1_fu_186_p2;
reg   [3:0] c3_1_reg_240;
wire   [0:0] icmp_ln886_fu_196_p2;
wire   [2:0] add_ln691_fu_201_p2;
wire   [7:0] add_ln890_1_fu_206_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_561_fu_212_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg   [4:0] indvar_flatten19_reg_96;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_107;
reg   [3:0] c3_reg_118;
wire    ap_CS_fsm_state6;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln89022_fu_152_p2;
wire   [5:0] p_shl_fu_166_p3;
wire   [5:0] zext_ln886_fu_192_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln886_fu_196_p2 == 1'd0) & (icmp_ln26261_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln886_fu_196_p2 == 1'd0) & (icmp_ln26261_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln886_fu_196_p2 == 1'd1) | (icmp_ln26261_fu_180_p2 == 1'd1)))) begin
        c1_V_reg_107 <= add_ln691_fu_201_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_107 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c3_reg_118 <= c3_1_reg_240;
    end else if (((icmp_ln890_fu_146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_reg_118 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_196_p2 == 1'd0) & (icmp_ln26261_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten11_reg_129 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_561_fu_212_p2 == 1'd0))) begin
        indvar_flatten11_reg_129 <= add_ln890_1_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln886_fu_196_p2 == 1'd1) | (icmp_ln26261_fu_180_p2 == 1'd1)))) begin
        indvar_flatten19_reg_96 <= add_ln890_reg_218;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten19_reg_96 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_i_i56_cast_reg_231[5 : 3] <= add_i_i56_cast_fu_174_p2[5 : 3];
        select_ln26257_reg_226 <= select_ln26257_fu_158_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_reg_218 <= add_ln890_fu_140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c3_1_reg_240 <= c3_1_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_561_reg_259 <= icmp_ln890_561_fu_212_p2;
    end
end

always @ (*) begin
    if ((icmp_ln890_561_fu_212_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_561_reg_259 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_D_drain_local_in_blk_n = fifo_D_drain_local_in_empty_n;
    end else begin
        fifo_D_drain_local_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_561_reg_259 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_D_drain_local_in_read = 1'b1;
    end else begin
        fifo_D_drain_local_in_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_561_reg_259 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_D_drain_out_blk_n = fifo_D_drain_out_full_n;
    end else begin
        fifo_D_drain_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_561_reg_259 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_D_drain_out_write = 1'b1;
    end else begin
        fifo_D_drain_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln886_fu_196_p2 == 1'd1) | (icmp_ln26261_fu_180_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_561_fu_212_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_561_fu_212_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i56_cast_fu_174_p2 = ($signed(6'd41) - $signed(p_shl_fu_166_p3));

assign add_ln691_fu_201_p2 = (select_ln26257_reg_226 + 3'd1);

assign add_ln890_1_fu_206_p2 = (indvar_flatten11_reg_129 + 8'd1);

assign add_ln890_fu_140_p2 = (indvar_flatten19_reg_96 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_out_full_n == 1'b0)) | ((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_local_in_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_out_full_n == 1'b0)) | ((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_local_in_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_out_full_n == 1'b0)) | ((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_local_in_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_out_full_n == 1'b0)) | ((icmp_ln890_561_reg_259 == 1'd0) & (fifo_D_drain_local_in_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c3_1_fu_186_p2 = (c3_reg_118 + 4'd1);

assign fifo_D_drain_out_din = fifo_D_drain_local_in_dout;

assign icmp_ln26261_fu_180_p2 = ((c3_reg_118 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_196_p2 = ((zext_ln886_fu_192_p1 > add_i_i56_cast_reg_231) ? 1'b1 : 1'b0);

assign icmp_ln89022_fu_152_p2 = ((c1_V_reg_107 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_561_fu_212_p2 = ((indvar_flatten11_reg_129 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_146_p2 = ((indvar_flatten19_reg_96 == 5'd24) ? 1'b1 : 1'b0);

assign p_shl_fu_166_p3 = {{select_ln26257_fu_158_p3}, {3'd0}};

assign select_ln26257_fu_158_p3 = ((icmp_ln89022_fu_152_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_107);

assign zext_ln886_fu_192_p1 = c3_reg_118;

always @ (posedge ap_clk) begin
    add_i_i56_cast_reg_231[2:0] <= 3'b001;
end

endmodule //top_D_drain_IO_L3_out_x1
