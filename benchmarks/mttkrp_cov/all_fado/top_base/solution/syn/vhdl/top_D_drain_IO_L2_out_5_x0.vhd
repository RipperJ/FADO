-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_D_drain_IO_L2_out_5_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_6_x0211_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_6_x0211_read : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_5_x0210_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_5_x0210_write : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_read : OUT STD_LOGIC );
end;


architecture behav of top_D_drain_IO_L2_out_5_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L2_out_6_x0211_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L2_out_5_x0210_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_blk_n : STD_LOGIC;
    signal add_ln691_fu_213_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_reg_352 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln691_744_fu_225_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_744_reg_360 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_i_i100_cast_fu_245_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_i_i100_cast_reg_368 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln890_598_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11842_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11842_reg_379 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_fu_251_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_746_fu_274_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_746_reg_383 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln691_745_fu_286_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_745_reg_391 : STD_LOGIC_VECTOR (2 downto 0);
    signal c3_6_fu_298_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_599_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_600_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_749_fu_304_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_749_reg_404 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln691_750_fu_316_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_750_reg_412 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln691_747_fu_328_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_747_reg_420 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln691_748_fu_340_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_748_reg_428 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal c0_V_reg_113 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c1_V_reg_124 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c3_reg_135 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_4_reg_147 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_602_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_V_reg_158 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_601_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_V_4_reg_169 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_604_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_68_reg_180 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal c5_V_reg_191 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_603_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_reg_202 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state11 : BOOLEAN;
    signal p_shl_fu_237_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln886_fu_259_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_219_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c0_V_reg_113_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c0_V_reg_113 <= ap_const_lv3_0;
            elsif (((icmp_ln890_598_fu_231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c0_V_reg_113 <= add_ln691_reg_352;
            end if; 
        end if;
    end process;

    c1_V_reg_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_219_p2 = ap_const_lv1_0))) then 
                c1_V_reg_124 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln886_fu_263_p2 = ap_const_lv1_1) or (tmp_fu_251_p3 = ap_const_lv1_1)))) then 
                c1_V_reg_124 <= add_ln691_744_reg_360;
            end if; 
        end if;
    end process;

    c3_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln11842_reg_379 = ap_const_lv1_0) and (icmp_ln890_600_fu_280_p2 = ap_const_lv1_1)) or ((icmp_ln11842_reg_379 = ap_const_lv1_1) and (icmp_ln890_599_fu_292_p2 = ap_const_lv1_1))))) then 
                c3_reg_135 <= c3_6_fu_298_p2;
            elsif (((icmp_ln890_598_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c3_reg_135 <= ap_const_lv4_5;
            end if; 
        end if;
    end process;

    c4_V_4_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_263_p2 = ap_const_lv1_0) and (tmp_fu_251_p3 = ap_const_lv1_0) and (icmp_ln11842_fu_268_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c4_V_4_reg_147 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_602_fu_310_p2 = ap_const_lv1_1))) then 
                c4_V_4_reg_147 <= add_ln691_746_reg_383;
            end if; 
        end if;
    end process;

    c4_V_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_263_p2 = ap_const_lv1_0) and (tmp_fu_251_p3 = ap_const_lv1_0) and (icmp_ln11842_fu_268_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c4_V_reg_158 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln890_601_fu_334_p2 = ap_const_lv1_1))) then 
                c4_V_reg_158 <= add_ln691_745_reg_391;
            end if; 
        end if;
    end process;

    c5_V_4_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11842_reg_379 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_600_fu_280_p2 = ap_const_lv1_0))) then 
                c5_V_4_reg_169 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln890_604_fu_322_p2 = ap_const_lv1_1))) then 
                c5_V_4_reg_169 <= add_ln691_749_reg_404;
            end if; 
        end if;
    end process;

    c5_V_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11842_reg_379 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_599_fu_292_p2 = ap_const_lv1_0))) then 
                c5_V_reg_191 <= ap_const_lv5_0;
            elsif (((icmp_ln890_603_fu_346_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                c5_V_reg_191 <= add_ln691_747_reg_420;
            end if; 
        end if;
    end process;

    c6_V_68_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_602_fu_310_p2 = ap_const_lv1_0))) then 
                c6_V_68_reg_180 <= ap_const_lv2_0;
            elsif ((not(((fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                c6_V_68_reg_180 <= add_ln691_750_reg_412;
            end if; 
        end if;
    end process;

    c6_V_reg_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln890_601_fu_334_p2 = ap_const_lv1_0))) then 
                c6_V_reg_202 <= ap_const_lv2_0;
            elsif ((not(((fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                c6_V_reg_202 <= add_ln691_748_reg_428;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_598_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    add_i_i100_cast_reg_368(5 downto 3) <= add_i_i100_cast_fu_245_p2(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln691_744_reg_360 <= add_ln691_744_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11842_reg_379 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln691_745_reg_391 <= add_ln691_745_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11842_reg_379 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln691_746_reg_383 <= add_ln691_746_fu_274_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln691_747_reg_420 <= add_ln691_747_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln691_748_reg_428 <= add_ln691_748_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln691_749_reg_404 <= add_ln691_749_fu_304_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln691_750_reg_412 <= add_ln691_750_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_352 <= add_ln691_fu_213_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_263_p2 = ap_const_lv1_0) and (tmp_fu_251_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln11842_reg_379 <= icmp_ln11842_fu_268_p2;
            end if;
        end if;
    end process;
    add_i_i100_cast_reg_368(2 downto 0) <= "001";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n, fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln890_598_fu_231_p2, icmp_ln11842_reg_379, ap_CS_fsm_state4, tmp_fu_251_p3, icmp_ln886_fu_263_p2, ap_CS_fsm_state5, icmp_ln890_599_fu_292_p2, icmp_ln890_600_fu_280_p2, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, icmp_ln890_fu_219_p2, icmp_ln890_602_fu_310_p2, icmp_ln890_601_fu_334_p2, icmp_ln890_604_fu_322_p2, icmp_ln890_603_fu_346_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_219_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_598_fu_231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln886_fu_263_p2 = ap_const_lv1_1) or (tmp_fu_251_p3 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln11842_reg_379 = ap_const_lv1_0) and (icmp_ln890_600_fu_280_p2 = ap_const_lv1_1)) or ((icmp_ln11842_reg_379 = ap_const_lv1_1) and (icmp_ln890_599_fu_292_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((icmp_ln11842_reg_379 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_599_fu_292_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_602_fu_310_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln890_604_fu_322_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln890_601_fu_334_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln890_603_fu_346_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_i_i100_cast_fu_245_p2 <= std_logic_vector(signed(ap_const_lv6_29) - signed(p_shl_fu_237_p3));
    add_ln691_744_fu_225_p2 <= std_logic_vector(unsigned(c1_V_reg_124) + unsigned(ap_const_lv3_1));
    add_ln691_745_fu_286_p2 <= std_logic_vector(unsigned(c4_V_reg_158) + unsigned(ap_const_lv3_1));
    add_ln691_746_fu_274_p2 <= std_logic_vector(unsigned(c4_V_4_reg_147) + unsigned(ap_const_lv3_1));
    add_ln691_747_fu_328_p2 <= std_logic_vector(unsigned(c5_V_reg_191) + unsigned(ap_const_lv5_1));
    add_ln691_748_fu_340_p2 <= std_logic_vector(unsigned(c6_V_reg_202) + unsigned(ap_const_lv2_1));
    add_ln691_749_fu_304_p2 <= std_logic_vector(unsigned(c5_V_4_reg_169) + unsigned(ap_const_lv5_1));
    add_ln691_750_fu_316_p2 <= std_logic_vector(unsigned(c6_V_68_reg_180) + unsigned(ap_const_lv2_1));
    add_ln691_fu_213_p2 <= std_logic_vector(unsigned(c0_V_reg_113) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state11_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n)
    begin
                ap_block_state11 <= ((fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n, fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n)
    begin
                ap_block_state8 <= ((fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln890_fu_219_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_219_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln890_fu_219_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_219_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c3_6_fu_298_p2 <= std_logic_vector(unsigned(c3_reg_135) + unsigned(ap_const_lv4_1));

    fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_blk_n <= fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n;
        else 
            fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_read_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n, ap_CS_fsm_state11)
    begin
        if ((not(((fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_read <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_5_x0210_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_blk_n <= fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n;
        else 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_5_x0210_din_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_6_x0211_dout, fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n, fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_dout, fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((not(((fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_din <= fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_dout;
        elsif ((not(((fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_din <= fifo_D_drain_D_drain_IO_L2_out_6_x0211_dout;
        else 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_5_x0210_write_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n, fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((not(((fifo_D_drain_D_drain_IO_L1_out_5_0_x0193_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_write <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L2_out_5_x0210_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_6_x0211_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            fifo_D_drain_D_drain_IO_L2_out_6_x0211_blk_n <= fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n;
        else 
            fifo_D_drain_D_drain_IO_L2_out_6_x0211_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_6_x0211_read_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n, fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n, ap_CS_fsm_state8)
    begin
        if ((not(((fifo_D_drain_D_drain_IO_L2_out_5_x0210_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_6_x0211_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fifo_D_drain_D_drain_IO_L2_out_6_x0211_read <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L2_out_6_x0211_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln11842_fu_268_p2 <= "1" when (c3_reg_135 = ap_const_lv4_5) else "0";
    icmp_ln886_fu_263_p2 <= "1" when (unsigned(zext_ln886_fu_259_p1) > unsigned(add_i_i100_cast_reg_368)) else "0";
    icmp_ln890_598_fu_231_p2 <= "1" when (c1_V_reg_124 = ap_const_lv3_6) else "0";
    icmp_ln890_599_fu_292_p2 <= "1" when (c4_V_reg_158 = ap_const_lv3_4) else "0";
    icmp_ln890_600_fu_280_p2 <= "1" when (c4_V_4_reg_147 = ap_const_lv3_4) else "0";
    icmp_ln890_601_fu_334_p2 <= "1" when (c5_V_reg_191 = ap_const_lv5_10) else "0";
    icmp_ln890_602_fu_310_p2 <= "1" when (c5_V_4_reg_169 = ap_const_lv5_10) else "0";
    icmp_ln890_603_fu_346_p2 <= "1" when (c6_V_reg_202 = ap_const_lv2_2) else "0";
    icmp_ln890_604_fu_322_p2 <= "1" when (c6_V_68_reg_180 = ap_const_lv2_2) else "0";
    icmp_ln890_fu_219_p2 <= "1" when (c0_V_reg_113 = ap_const_lv3_4) else "0";
    p_shl_fu_237_p3 <= (c1_V_reg_124 & ap_const_lv3_0);
    tmp_fu_251_p3 <= c3_reg_135(3 downto 3);
    zext_ln886_fu_259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c3_reg_135),6));
end behav;
