// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_nondf_kernel_cov_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xout_address0,
        xout_ce0,
        xout_q0,
        xin_address0,
        xin_ce0,
        xin_we0,
        xin_d0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_pp0_stage0 = 18'd32;
parameter    ap_ST_fsm_state11 = 18'd64;
parameter    ap_ST_fsm_pp1_stage0 = 18'd128;
parameter    ap_ST_fsm_state17 = 18'd256;
parameter    ap_ST_fsm_pp2_stage0 = 18'd512;
parameter    ap_ST_fsm_pp2_stage1 = 18'd1024;
parameter    ap_ST_fsm_pp2_stage2 = 18'd2048;
parameter    ap_ST_fsm_pp2_stage3 = 18'd4096;
parameter    ap_ST_fsm_state34 = 18'd8192;
parameter    ap_ST_fsm_state35 = 18'd16384;
parameter    ap_ST_fsm_state36 = 18'd32768;
parameter    ap_ST_fsm_state37 = 18'd65536;
parameter    ap_ST_fsm_state38 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] xout_address0;
output   xout_ce0;
input  [127:0] xout_q0;
output  [11:0] xin_address0;
output   xin_ce0;
output   xin_we0;
output  [118:0] xin_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg xout_ce0;
reg xin_ce0;
reg xin_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten_reg_258;
reg   [6:0] j_reg_269;
reg   [6:0] i_2_reg_280;
reg   [127:0] add_i3113_reg_291;
reg   [12:0] indvar_flatten8_reg_303;
reg   [6:0] i_1_reg_314;
reg   [6:0] j_2_reg_325;
reg   [18:0] indvar_flatten36_reg_336;
reg   [6:0] i_3_reg_348;
reg   [13:0] indvar_flatten21_reg_359;
reg   [6:0] j_3_reg_370;
reg   [6:0] k_reg_381;
reg   [127:0] conv3_i2112_reg_392;
wire   [127:0] data_V_q0;
reg  signed [127:0] reg_425;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln79_reg_989;
reg   [0:0] icmp_ln79_reg_989_pp0_iter1_reg;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state20_pp2_stage2_iter0;
wire    ap_block_state24_pp2_stage2_iter1;
wire    ap_block_state28_pp2_stage2_iter2;
wire    ap_block_state32_pp2_stage2_iter3;
wire    ap_block_pp2_stage2_11001;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_state15_pp1_stage0_iter3;
wire    ap_block_state16_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln87_reg_1035;
reg   [0:0] icmp_ln87_reg_1035_pp1_iter1_reg;
wire   [127:0] data_V_q1;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] icmp_ln91_reg_1081;
wire   [6:0] add_ln73_fu_430_p2;
reg   [6:0] add_ln73_reg_947;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_cast_fu_440_p3;
reg   [11:0] tmp_cast_reg_952;
wire   [0:0] icmp_ln73_fu_448_p2;
wire   [6:0] add_ln74_fu_454_p2;
reg   [6:0] add_ln74_reg_961;
wire    ap_CS_fsm_state3;
reg   [11:0] data_V_addr_reg_966;
wire   [0:0] icmp_ln74_fu_475_p2;
reg   [127:0] xout_load_reg_979;
wire    ap_CS_fsm_state4;
wire   [12:0] add_ln79_1_fu_481_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln79_fu_487_p2;
reg   [0:0] icmp_ln79_reg_989_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_989_pp0_iter3_reg;
wire   [0:0] icmp_ln82_fu_499_p2;
reg   [0:0] icmp_ln82_reg_993;
reg   [0:0] icmp_ln82_reg_993_pp0_iter1_reg;
reg   [0:0] icmp_ln82_reg_993_pp0_iter2_reg;
wire   [6:0] select_ln79_2_fu_513_p3;
reg   [6:0] select_ln79_2_reg_998;
reg   [6:0] select_ln79_2_reg_998_pp0_iter1_reg;
reg   [6:0] select_ln79_2_reg_998_pp0_iter2_reg;
reg   [6:0] select_ln79_2_reg_998_pp0_iter3_reg;
wire   [5:0] trunc_ln691_fu_521_p1;
reg   [5:0] trunc_ln691_reg_1005;
wire   [6:0] add_ln82_fu_525_p2;
reg   [6:0] add_ln82_reg_1010;
wire   [0:0] icmp_ln82_1_fu_531_p2;
reg   [0:0] icmp_ln82_1_reg_1015;
reg   [0:0] icmp_ln82_1_reg_1015_pp0_iter1_reg;
reg   [0:0] icmp_ln82_1_reg_1015_pp0_iter2_reg;
reg   [0:0] icmp_ln82_1_reg_1015_pp0_iter3_reg;
wire   [127:0] add_ln691_fu_565_p2;
reg   [127:0] add_ln691_reg_1024;
reg    ap_enable_reg_pp0_iter3;
wire   [12:0] add_ln87_1_fu_585_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln87_fu_591_p2;
reg   [0:0] icmp_ln87_reg_1035_pp1_iter2_reg;
reg   [0:0] icmp_ln87_reg_1035_pp1_iter3_reg;
wire   [6:0] select_ln87_fu_609_p3;
reg   [6:0] select_ln87_reg_1039;
wire   [6:0] select_ln87_1_fu_617_p3;
reg   [6:0] select_ln87_1_reg_1045;
wire   [5:0] trunc_ln692_fu_625_p1;
reg   [5:0] trunc_ln692_reg_1050;
wire   [6:0] add_ln88_fu_629_p2;
reg   [11:0] data_V_addr_2_reg_1060;
reg   [11:0] data_V_addr_2_reg_1060_pp1_iter2_reg;
reg   [11:0] data_V_addr_2_reg_1060_pp1_iter3_reg;
wire   [117:0] mean_V_q0;
reg   [117:0] mean_V_load_reg_1071;
wire   [127:0] sub_ln692_fu_663_p2;
reg   [127:0] sub_ln692_reg_1076;
wire   [0:0] icmp_ln91_fu_669_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state18_pp2_stage0_iter0;
wire    ap_block_state22_pp2_stage0_iter1;
wire    ap_block_state26_pp2_stage0_iter2;
wire    ap_block_state30_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln91_reg_1081_pp2_iter1_reg;
reg   [0:0] icmp_ln91_reg_1081_pp2_iter2_reg;
wire   [6:0] select_ln91_1_fu_695_p3;
reg   [6:0] select_ln91_1_reg_1085;
wire   [5:0] trunc_ln94_fu_703_p1;
reg   [5:0] trunc_ln94_reg_1091;
wire   [0:0] or_ln92_fu_731_p2;
reg   [0:0] or_ln92_reg_1096;
reg   [0:0] or_ln92_reg_1096_pp2_iter1_reg;
wire   [6:0] select_ln92_fu_737_p3;
reg   [6:0] select_ln92_reg_1101;
wire   [6:0] select_ln92_2_fu_745_p3;
reg   [6:0] select_ln92_2_reg_1106;
wire   [5:0] trunc_ln98_fu_753_p1;
reg   [5:0] trunc_ln98_reg_1112;
wire   [5:0] trunc_ln215_fu_757_p1;
reg   [5:0] trunc_ln215_reg_1117;
wire   [13:0] select_ln92_3_fu_767_p3;
reg   [13:0] select_ln92_3_reg_1122;
wire   [11:0] add_ln98_fu_795_p2;
reg   [11:0] add_ln98_reg_1127;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state19_pp2_stage1_iter0;
wire    ap_block_state23_pp2_stage1_iter1;
wire    ap_block_state27_pp2_stage1_iter2;
wire    ap_block_state31_pp2_stage1_iter3;
wire    ap_block_pp2_stage1_11001;
reg   [11:0] add_ln98_reg_1127_pp2_iter1_reg;
wire   [11:0] add_ln94_fu_801_p2;
reg   [11:0] add_ln94_reg_1132;
reg   [11:0] add_ln94_reg_1132_pp2_iter1_reg;
wire   [6:0] add_ln95_fu_836_p2;
reg   [6:0] add_ln95_reg_1147;
wire   [0:0] icmp_ln95_1_fu_841_p2;
reg   [0:0] icmp_ln95_1_reg_1152;
reg   [0:0] icmp_ln95_1_reg_1152_pp2_iter1_reg;
reg   [0:0] icmp_ln95_1_reg_1152_pp2_iter2_reg;
reg   [0:0] icmp_ln95_1_reg_1152_pp2_iter3_reg;
reg  signed [127:0] data_V_load_3_reg_1156;
wire   [18:0] add_ln91_1_fu_847_p2;
reg   [18:0] add_ln91_1_reg_1161;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state21_pp2_stage3_iter0;
wire    ap_block_state25_pp2_stage3_iter1;
wire    ap_block_state29_pp2_stage3_iter2;
wire    ap_block_state33_pp2_stage3_iter3;
wire    ap_block_pp2_stage3_11001;
wire   [127:0] grp_fu_853_p2;
reg   [127:0] mul_ln691_reg_1166;
reg   [11:0] cov_V_addr_reg_1171;
reg   [11:0] cov_V_addr_reg_1171_pp2_iter3_reg;
reg   [11:0] cov_V_addr_2_reg_1176;
reg   [11:0] cov_V_addr_2_reg_1176_pp2_iter3_reg;
wire   [127:0] add_ln691_1_fu_873_p2;
reg   [127:0] add_ln691_1_reg_1181;
reg    ap_enable_reg_pp2_iter2;
reg   [118:0] trunc_ln693_1_reg_1192;
wire   [6:0] add_ln101_fu_897_p2;
reg   [6:0] add_ln101_reg_1197;
wire    ap_CS_fsm_state35;
wire   [11:0] tmp_9_cast_fu_907_p3;
reg   [11:0] tmp_9_cast_reg_1202;
wire   [6:0] add_ln102_fu_921_p2;
reg   [6:0] add_ln102_reg_1210;
wire    ap_CS_fsm_state36;
wire   [63:0] zext_ln208_1_fu_936_p1;
reg   [63:0] zext_ln208_1_reg_1215;
wire   [118:0] cov_V_q0;
reg   [118:0] cov_V_load_reg_1228;
wire    ap_CS_fsm_state37;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
wire    ap_CS_fsm_state11;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
wire    ap_CS_fsm_state17;
wire    ap_block_pp2_stage3_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_enable_reg_pp2_iter1;
reg    ap_condition_pp2_exit_iter2_state26;
reg    ap_enable_reg_pp2_iter3;
wire   [5:0] mean_V_address0;
reg    mean_V_ce0;
wire   [5:0] mean_V_address1;
reg    mean_V_ce1;
reg    mean_V_we1;
wire   [117:0] mean_V_d1;
reg   [11:0] data_V_address0;
reg    data_V_ce0;
reg   [11:0] data_V_address1;
reg    data_V_ce1;
reg    data_V_we1;
reg   [127:0] data_V_d1;
wire   [11:0] cov_V_address0;
reg    cov_V_ce0;
reg   [11:0] cov_V_address1;
reg    cov_V_ce1;
reg    cov_V_we1;
reg   [6:0] i_reg_236;
reg   [6:0] j_1_reg_247;
wire    ap_CS_fsm_state5;
reg   [6:0] ap_phi_mux_j_phi_fu_273_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_i_2_phi_fu_284_p4;
reg   [127:0] ap_phi_mux_add_i3113_phi_fu_295_p4;
reg   [6:0] ap_phi_mux_i_1_phi_fu_318_p4;
wire    ap_block_pp1_stage0;
reg   [18:0] ap_phi_mux_indvar_flatten36_phi_fu_340_p4;
wire    ap_block_pp2_stage0;
reg   [6:0] ap_phi_mux_i_3_phi_fu_352_p4;
reg   [13:0] ap_phi_mux_indvar_flatten21_phi_fu_363_p4;
reg   [6:0] ap_phi_mux_j_3_phi_fu_374_p4;
reg   [6:0] ap_phi_mux_k_phi_fu_385_p4;
reg   [127:0] ap_phi_mux_conv3_i2112_phi_fu_396_p4;
reg   [6:0] i_4_reg_403;
wire   [0:0] icmp_ln102_fu_941_p2;
wire    ap_CS_fsm_state34;
reg   [6:0] j_4_reg_414;
wire    ap_CS_fsm_state38;
wire   [0:0] icmp_ln101_fu_915_p2;
wire   [63:0] zext_ln75_1_fu_469_p1;
wire   [63:0] zext_ln691_1_fu_553_p1;
wire   [63:0] zext_ln79_fu_571_p1;
wire   [63:0] zext_ln692_1_fu_655_p1;
wire   [63:0] zext_ln88_fu_642_p1;
wire   [63:0] zext_ln215_fu_820_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln215_1_fu_831_p1;
wire   [63:0] zext_ln98_1_fu_865_p1;
wire   [63:0] zext_ln94_1_fu_869_p1;
wire    ap_block_pp2_stage2;
wire    ap_block_pp2_stage3;
wire   [5:0] trunc_ln75_fu_436_p1;
wire   [11:0] zext_ln75_fu_460_p1;
wire   [11:0] add_ln75_fu_464_p2;
wire   [6:0] add_ln79_fu_493_p2;
wire   [6:0] select_ln79_fu_505_p3;
wire   [11:0] tmp_3_cast_fu_540_p3;
wire   [11:0] zext_ln691_fu_537_p1;
wire   [11:0] add_ln691_2_fu_547_p2;
wire   [127:0] select_ln79_1_fu_558_p3;
wire   [0:0] icmp_ln88_fu_603_p2;
wire   [6:0] add_ln87_fu_597_p2;
wire   [11:0] tmp_4_cast_fu_635_p3;
wire   [11:0] zext_ln692_fu_646_p1;
wire   [11:0] add_ln692_fu_649_p2;
wire   [127:0] mean_V_load_cast_fu_660_p1;
wire   [0:0] icmp_ln92_fu_681_p2;
wire   [6:0] add_ln91_fu_675_p2;
wire   [0:0] icmp_ln95_fu_713_p2;
wire   [0:0] xor_ln91_fu_707_p2;
wire   [6:0] select_ln91_fu_687_p3;
wire   [0:0] and_ln91_fu_719_p2;
wire   [6:0] add_ln92_fu_725_p2;
wire   [13:0] add_ln92_1_fu_761_p2;
wire   [11:0] tmp_7_cast_fu_788_p3;
wire   [11:0] zext_ln94_fu_775_p1;
wire   [11:0] tmp_5_cast_fu_778_p3;
wire   [11:0] zext_ln98_fu_785_p1;
wire   [11:0] tmp_8_cast_fu_807_p3;
wire   [11:0] add_ln215_fu_814_p2;
wire   [11:0] add_ln215_1_fu_825_p2;
wire   [127:0] select_ln92_1_fu_858_p3;
wire   [127:0] grp_fu_881_p0;
wire   [129:0] grp_fu_881_p1;
wire   [256:0] grp_fu_881_p2;
wire   [5:0] trunc_ln208_fu_903_p1;
wire   [11:0] zext_ln208_fu_927_p1;
wire   [11:0] add_ln208_fu_931_p2;
reg   [17:0] ap_NS_fsm;
wire    ap_block_pp2_stage0_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [256:0] grp_fu_881_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
end

top_nondf_kernel_cov_x1_mean_V #(
    .DataWidth( 118 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mean_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_V_address0),
    .ce0(mean_V_ce0),
    .q0(mean_V_q0),
    .address1(mean_V_address1),
    .ce1(mean_V_ce1),
    .we1(mean_V_we1),
    .d1(mean_V_d1)
);

top_nondf_kernel_cov_x1_data_V #(
    .DataWidth( 128 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_V_address0),
    .ce0(data_V_ce0),
    .q0(data_V_q0),
    .address1(data_V_address1),
    .ce1(data_V_ce1),
    .we1(data_V_we1),
    .d1(data_V_d1),
    .q1(data_V_q1)
);

top_nondf_kernel_cov_x1_cov_V #(
    .DataWidth( 119 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
cov_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cov_V_address0),
    .ce0(cov_V_ce0),
    .q0(cov_V_q0),
    .address1(cov_V_address1),
    .ce1(cov_V_ce1),
    .we1(cov_V_we1),
    .d1(trunc_ln693_1_reg_1192)
);

top_mul_128s_128s_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 128 ))
mul_128s_128s_128_5_1_U1089(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_V_load_3_reg_1156),
    .din1(reg_425),
    .ce(1'b1),
    .dout(grp_fu_853_p2)
);

top_mul_128ns_130ns_257_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 130 ),
    .dout_WIDTH( 257 ))
mul_128ns_130ns_257_5_1_U1090(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_881_p0),
    .din1(grp_fu_881_p1),
    .ce(1'b1),
    .dout(grp_fu_881_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state6)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            if (((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter2_state26))) begin
                ap_enable_reg_pp2_iter2 <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_condition_pp2_exit_iter2_state26) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
        add_i3113_reg_291 <= 128'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln79_reg_989_pp0_iter3_reg == 1'd0))) begin
        add_i3113_reg_291 <= add_ln691_reg_1024;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        conv3_i2112_reg_392 <= 128'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln91_reg_1081_pp2_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        conv3_i2112_reg_392 <= add_ln691_1_reg_1181;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_1_reg_314 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln87_reg_1035 == 1'd0))) begin
        i_1_reg_314 <= select_ln87_1_reg_1045;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
        i_2_reg_280 <= 7'd0;
    end else if (((icmp_ln79_reg_989 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_280 <= add_ln82_reg_1010;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_3_reg_348 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        i_3_reg_348 <= select_ln91_1_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_4_reg_403 <= 7'd0;
    end else if (((icmp_ln102_fu_941_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        i_4_reg_403 <= add_ln101_reg_1197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_236 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln74_fu_475_p2 == 1'd1))) begin
        i_reg_236 <= add_ln73_reg_947;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten21_reg_359 <= 14'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        indvar_flatten21_reg_359 <= select_ln92_3_reg_1122;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten36_reg_336 <= 19'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        indvar_flatten36_reg_336 <= add_ln91_1_reg_1161;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten8_reg_303 <= 13'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_fu_591_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten8_reg_303 <= add_ln87_1_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
        indvar_flatten_reg_258 <= 13'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_487_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_258 <= add_ln79_1_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd0))) begin
        j_1_reg_247 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_1_reg_247 <= add_ln74_reg_961;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_2_reg_325 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_fu_591_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_2_reg_325 <= add_ln88_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_3_reg_370 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        j_3_reg_370 <= select_ln92_2_reg_1106;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        j_4_reg_414 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        j_4_reg_414 <= add_ln102_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
        j_reg_269 <= 7'd0;
    end else if (((icmp_ln79_reg_989 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_269 <= select_ln79_2_reg_998;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_reg_381 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        k_reg_381 <= add_ln95_reg_1147;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln91_reg_1081 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        reg_425 <= data_V_q1;
    end else if ((((icmp_ln79_reg_989_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_reg_1035_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        reg_425 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln101_reg_1197 <= add_ln101_fu_897_p2;
        tmp_9_cast_reg_1202[11 : 6] <= tmp_9_cast_fu_907_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln102_reg_1210 <= add_ln102_fu_921_p2;
        zext_ln208_1_reg_1215[11 : 0] <= zext_ln208_1_fu_936_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln91_reg_1081_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln691_1_reg_1181 <= add_ln691_1_fu_873_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln79_reg_989_pp0_iter2_reg == 1'd0))) begin
        add_ln691_reg_1024 <= add_ln691_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln73_reg_947 <= add_ln73_fu_430_p2;
        tmp_cast_reg_952[11 : 6] <= tmp_cast_fu_440_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln74_reg_961 <= add_ln74_fu_454_p2;
        data_V_addr_reg_966 <= zext_ln75_1_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_487_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln82_reg_1010 <= add_ln82_fu_525_p2;
        select_ln79_2_reg_998 <= select_ln79_2_fu_513_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln91_1_reg_1161 <= add_ln91_1_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln91_reg_1081 == 1'd0))) begin
        add_ln94_reg_1132 <= add_ln94_fu_801_p2;
        add_ln98_reg_1127 <= add_ln98_fu_795_p2;
        icmp_ln95_1_reg_1152 <= icmp_ln95_1_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln94_reg_1132_pp2_iter1_reg <= add_ln94_reg_1132;
        add_ln98_reg_1127_pp2_iter1_reg <= add_ln98_reg_1127;
        icmp_ln95_1_reg_1152_pp2_iter1_reg <= icmp_ln95_1_reg_1152;
        icmp_ln95_1_reg_1152_pp2_iter2_reg <= icmp_ln95_1_reg_1152_pp2_iter1_reg;
        icmp_ln95_1_reg_1152_pp2_iter3_reg <= icmp_ln95_1_reg_1152_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln91_reg_1081 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln95_reg_1147 <= add_ln95_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln91_reg_1081_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        cov_V_addr_2_reg_1176 <= zext_ln94_1_fu_869_p1;
        cov_V_addr_reg_1171 <= zext_ln98_1_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        cov_V_addr_2_reg_1176_pp2_iter3_reg <= cov_V_addr_2_reg_1176;
        cov_V_addr_reg_1171_pp2_iter3_reg <= cov_V_addr_reg_1171;
        icmp_ln91_reg_1081 <= icmp_ln91_fu_669_p2;
        icmp_ln91_reg_1081_pp2_iter1_reg <= icmp_ln91_reg_1081;
        icmp_ln91_reg_1081_pp2_iter2_reg <= icmp_ln91_reg_1081_pp2_iter1_reg;
        or_ln92_reg_1096_pp2_iter1_reg <= or_ln92_reg_1096;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        cov_V_load_reg_1228 <= cov_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln87_reg_1035 == 1'd0))) begin
        data_V_addr_2_reg_1060 <= zext_ln692_1_fu_655_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        data_V_addr_2_reg_1060_pp1_iter2_reg <= data_V_addr_2_reg_1060;
        data_V_addr_2_reg_1060_pp1_iter3_reg <= data_V_addr_2_reg_1060_pp1_iter2_reg;
        icmp_ln87_reg_1035_pp1_iter2_reg <= icmp_ln87_reg_1035_pp1_iter1_reg;
        icmp_ln87_reg_1035_pp1_iter3_reg <= icmp_ln87_reg_1035_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln91_reg_1081 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        data_V_load_3_reg_1156 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_989 <= icmp_ln79_fu_487_p2;
        icmp_ln79_reg_989_pp0_iter1_reg <= icmp_ln79_reg_989;
        icmp_ln82_1_reg_1015_pp0_iter1_reg <= icmp_ln82_1_reg_1015;
        icmp_ln82_reg_993_pp0_iter1_reg <= icmp_ln82_reg_993;
        select_ln79_2_reg_998_pp0_iter1_reg <= select_ln79_2_reg_998;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln79_reg_989_pp0_iter2_reg <= icmp_ln79_reg_989_pp0_iter1_reg;
        icmp_ln79_reg_989_pp0_iter3_reg <= icmp_ln79_reg_989_pp0_iter2_reg;
        icmp_ln82_1_reg_1015_pp0_iter2_reg <= icmp_ln82_1_reg_1015_pp0_iter1_reg;
        icmp_ln82_1_reg_1015_pp0_iter3_reg <= icmp_ln82_1_reg_1015_pp0_iter2_reg;
        icmp_ln82_reg_993_pp0_iter2_reg <= icmp_ln82_reg_993_pp0_iter1_reg;
        select_ln79_2_reg_998_pp0_iter2_reg <= select_ln79_2_reg_998_pp0_iter1_reg;
        select_ln79_2_reg_998_pp0_iter3_reg <= select_ln79_2_reg_998_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_487_p2 == 1'd0))) begin
        icmp_ln82_1_reg_1015 <= icmp_ln82_1_fu_531_p2;
        icmp_ln82_reg_993 <= icmp_ln82_fu_499_p2;
        trunc_ln691_reg_1005 <= trunc_ln691_fu_521_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln87_reg_1035 <= icmp_ln87_fu_591_p2;
        icmp_ln87_reg_1035_pp1_iter1_reg <= icmp_ln87_reg_1035;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_reg_1035_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        mean_V_load_reg_1071 <= mean_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln91_reg_1081_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        mul_ln691_reg_1166 <= grp_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln91_fu_669_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        or_ln92_reg_1096 <= or_ln92_fu_731_p2;
        select_ln92_reg_1101 <= select_ln92_fu_737_p3;
        trunc_ln215_reg_1117 <= trunc_ln215_fu_757_p1;
        trunc_ln94_reg_1091 <= trunc_ln94_fu_703_p1;
        trunc_ln98_reg_1112 <= trunc_ln98_fu_753_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_fu_591_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln87_1_reg_1045 <= select_ln87_1_fu_617_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_fu_591_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln87_reg_1039 <= select_ln87_fu_609_p3;
        trunc_ln692_reg_1050 <= trunc_ln692_fu_625_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln91_fu_669_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        select_ln91_1_reg_1085 <= select_ln91_1_fu_695_p3;
        select_ln92_2_reg_1106 <= select_ln92_2_fu_745_p3;
        select_ln92_3_reg_1122 <= select_ln92_3_fu_767_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln87_reg_1035_pp1_iter2_reg == 1'd0))) begin
        sub_ln692_reg_1076 <= sub_ln692_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln95_1_reg_1152_pp2_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        trunc_ln693_1_reg_1192 <= {{grp_fu_881_p2[256:138]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        xout_load_reg_979 <= xout_q0;
    end
end

always @ (*) begin
    if ((icmp_ln79_fu_487_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln87_fu_591_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        ap_condition_pp2_exit_iter2_state26 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter2_state26 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln91_reg_1081 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln101_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln79_reg_989_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_add_i3113_phi_fu_295_p4 = add_ln691_reg_1024;
    end else begin
        ap_phi_mux_add_i3113_phi_fu_295_p4 = add_i3113_reg_291;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln91_reg_1081_pp2_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_conv3_i2112_phi_fu_396_p4 = add_ln691_1_reg_1181;
    end else begin
        ap_phi_mux_conv3_i2112_phi_fu_396_p4 = conv3_i2112_reg_392;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln87_reg_1035 == 1'd0))) begin
        ap_phi_mux_i_1_phi_fu_318_p4 = select_ln87_1_reg_1045;
    end else begin
        ap_phi_mux_i_1_phi_fu_318_p4 = i_1_reg_314;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_989 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_2_phi_fu_284_p4 = add_ln82_reg_1010;
    end else begin
        ap_phi_mux_i_2_phi_fu_284_p4 = i_2_reg_280;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        ap_phi_mux_i_3_phi_fu_352_p4 = select_ln91_1_reg_1085;
    end else begin
        ap_phi_mux_i_3_phi_fu_352_p4 = i_3_reg_348;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        ap_phi_mux_indvar_flatten21_phi_fu_363_p4 = select_ln92_3_reg_1122;
    end else begin
        ap_phi_mux_indvar_flatten21_phi_fu_363_p4 = indvar_flatten21_reg_359;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        ap_phi_mux_indvar_flatten36_phi_fu_340_p4 = add_ln91_1_reg_1161;
    end else begin
        ap_phi_mux_indvar_flatten36_phi_fu_340_p4 = indvar_flatten36_reg_336;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        ap_phi_mux_j_3_phi_fu_374_p4 = select_ln92_2_reg_1106;
    end else begin
        ap_phi_mux_j_3_phi_fu_374_p4 = j_3_reg_370;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_989 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_273_p4 = select_ln79_2_reg_998;
    end else begin
        ap_phi_mux_j_phi_fu_273_p4 = j_reg_269;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln91_reg_1081 == 1'd0))) begin
        ap_phi_mux_k_phi_fu_385_p4 = add_ln95_reg_1147;
    end else begin
        ap_phi_mux_k_phi_fu_385_p4 = k_reg_381;
    end
end

always @ (*) begin
    if (((icmp_ln101_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            cov_V_address1 = cov_V_addr_reg_1171_pp2_iter3_reg;
        end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            cov_V_address1 = cov_V_addr_2_reg_1176_pp2_iter3_reg;
        end else begin
            cov_V_address1 = 'bx;
        end
    end else begin
        cov_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cov_V_ce0 = 1'b1;
    end else begin
        cov_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)))) begin
        cov_V_ce1 = 1'b1;
    end else begin
        cov_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_1_reg_1152_pp2_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_1_reg_1152_pp2_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2)))) begin
        cov_V_we1 = 1'b1;
    end else begin
        cov_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        data_V_address0 = zext_ln215_1_fu_831_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        data_V_address0 = zext_ln692_1_fu_655_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_address0 = zext_ln691_1_fu_553_p1;
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        data_V_address1 = zext_ln215_fu_820_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        data_V_address1 = data_V_addr_2_reg_1060_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_address1 = data_V_addr_reg_966;
    end else begin
        data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
        data_V_ce1 = 1'b1;
    end else begin
        data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        data_V_d1 = sub_ln692_reg_1076;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_d1 = xout_load_reg_979;
    end else begin
        data_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln87_reg_1035_pp1_iter3_reg == 1'd0)))) begin
        data_V_we1 = 1'b1;
    end else begin
        data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mean_V_ce0 = 1'b1;
    end else begin
        mean_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        mean_V_ce1 = 1'b1;
    end else begin
        mean_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln82_1_reg_1015_pp0_iter3_reg == 1'd1))) begin
        mean_V_we1 = 1'b1;
    end else begin
        mean_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        xin_ce0 = 1'b1;
    end else begin
        xin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        xin_we0 = 1'b1;
    end else begin
        xin_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xout_ce0 = 1'b1;
    end else begin
        xout_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_448_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln74_fu_475_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln79_fu_487_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln79_fu_487_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln87_fu_591_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln87_fu_591_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((~((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_condition_pp2_exit_iter2_state26) & (1'b1 == ap_CS_fsm_pp2_stage3)) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_condition_pp2_exit_iter2_state26) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln101_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln102_fu_941_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_897_p2 = (i_4_reg_403 + 7'd1);

assign add_ln102_fu_921_p2 = (j_4_reg_414 + 7'd1);

assign add_ln208_fu_931_p2 = (tmp_9_cast_reg_1202 + zext_ln208_fu_927_p1);

assign add_ln215_1_fu_825_p2 = (tmp_8_cast_fu_807_p3 + zext_ln98_fu_785_p1);

assign add_ln215_fu_814_p2 = (tmp_8_cast_fu_807_p3 + zext_ln94_fu_775_p1);

assign add_ln691_1_fu_873_p2 = (mul_ln691_reg_1166 + select_ln92_1_fu_858_p3);

assign add_ln691_2_fu_547_p2 = (tmp_3_cast_fu_540_p3 + zext_ln691_fu_537_p1);

assign add_ln691_fu_565_p2 = ($signed(reg_425) + $signed(select_ln79_1_fu_558_p3));

assign add_ln692_fu_649_p2 = (tmp_4_cast_fu_635_p3 + zext_ln692_fu_646_p1);

assign add_ln73_fu_430_p2 = (i_reg_236 + 7'd1);

assign add_ln74_fu_454_p2 = (j_1_reg_247 + 7'd1);

assign add_ln75_fu_464_p2 = (tmp_cast_reg_952 + zext_ln75_fu_460_p1);

assign add_ln79_1_fu_481_p2 = (indvar_flatten_reg_258 + 13'd1);

assign add_ln79_fu_493_p2 = (ap_phi_mux_j_phi_fu_273_p4 + 7'd1);

assign add_ln82_fu_525_p2 = (select_ln79_fu_505_p3 + 7'd1);

assign add_ln87_1_fu_585_p2 = (indvar_flatten8_reg_303 + 13'd1);

assign add_ln87_fu_597_p2 = (ap_phi_mux_i_1_phi_fu_318_p4 + 7'd1);

assign add_ln88_fu_629_p2 = (select_ln87_fu_609_p3 + 7'd1);

assign add_ln91_1_fu_847_p2 = (indvar_flatten36_reg_336 + 19'd1);

assign add_ln91_fu_675_p2 = (ap_phi_mux_i_3_phi_fu_352_p4 + 7'd1);

assign add_ln92_1_fu_761_p2 = (ap_phi_mux_indvar_flatten21_phi_fu_363_p4 + 14'd1);

assign add_ln92_fu_725_p2 = (select_ln91_fu_687_p3 + 7'd1);

assign add_ln94_fu_801_p2 = (tmp_5_cast_fu_778_p3 + zext_ln98_fu_785_p1);

assign add_ln95_fu_836_p2 = (select_ln92_reg_1101 + 7'd1);

assign add_ln98_fu_795_p2 = (tmp_7_cast_fu_788_p3 + zext_ln94_fu_775_p1);

assign and_ln91_fu_719_p2 = (xor_ln91_fu_707_p2 & icmp_ln95_fu_713_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign cov_V_address0 = zext_ln208_1_fu_936_p1;

assign grp_fu_881_p0 = grp_fu_881_p00;

assign grp_fu_881_p00 = add_ln691_1_reg_1181;

assign grp_fu_881_p1 = 257'd340614998755660788452097358758680985857;

assign icmp_ln101_fu_915_p2 = ((i_4_reg_403 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_941_p2 = ((j_4_reg_414 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_448_p2 = ((i_reg_236 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_475_p2 = ((j_1_reg_247 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_487_p2 = ((indvar_flatten_reg_258 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln82_1_fu_531_p2 = ((add_ln82_fu_525_p2 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_499_p2 = ((ap_phi_mux_i_2_phi_fu_284_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_591_p2 = ((indvar_flatten8_reg_303 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_603_p2 = ((j_2_reg_325 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_669_p2 = ((ap_phi_mux_indvar_flatten36_phi_fu_340_p4 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_681_p2 = ((ap_phi_mux_indvar_flatten21_phi_fu_363_p4 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln95_1_fu_841_p2 = ((add_ln95_fu_836_p2 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_713_p2 = ((ap_phi_mux_k_phi_fu_385_p4 == 7'd64) ? 1'b1 : 1'b0);

assign mean_V_address0 = zext_ln88_fu_642_p1;

assign mean_V_address1 = zext_ln79_fu_571_p1;

assign mean_V_d1 = {{add_ln691_reg_1024[127:10]}};

assign mean_V_load_cast_fu_660_p1 = mean_V_load_reg_1071;

assign or_ln92_fu_731_p2 = (icmp_ln92_fu_681_p2 | and_ln91_fu_719_p2);

assign select_ln79_1_fu_558_p3 = ((icmp_ln82_reg_993_pp0_iter2_reg[0:0] == 1'b1) ? 128'd0 : ap_phi_mux_add_i3113_phi_fu_295_p4);

assign select_ln79_2_fu_513_p3 = ((icmp_ln82_fu_499_p2[0:0] == 1'b1) ? add_ln79_fu_493_p2 : ap_phi_mux_j_phi_fu_273_p4);

assign select_ln79_fu_505_p3 = ((icmp_ln82_fu_499_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_i_2_phi_fu_284_p4);

assign select_ln87_1_fu_617_p3 = ((icmp_ln88_fu_603_p2[0:0] == 1'b1) ? add_ln87_fu_597_p2 : ap_phi_mux_i_1_phi_fu_318_p4);

assign select_ln87_fu_609_p3 = ((icmp_ln88_fu_603_p2[0:0] == 1'b1) ? 7'd0 : j_2_reg_325);

assign select_ln91_1_fu_695_p3 = ((icmp_ln92_fu_681_p2[0:0] == 1'b1) ? add_ln91_fu_675_p2 : ap_phi_mux_i_3_phi_fu_352_p4);

assign select_ln91_fu_687_p3 = ((icmp_ln92_fu_681_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_j_3_phi_fu_374_p4);

assign select_ln92_1_fu_858_p3 = ((or_ln92_reg_1096_pp2_iter1_reg[0:0] == 1'b1) ? 128'd0 : ap_phi_mux_conv3_i2112_phi_fu_396_p4);

assign select_ln92_2_fu_745_p3 = ((and_ln91_fu_719_p2[0:0] == 1'b1) ? add_ln92_fu_725_p2 : select_ln91_fu_687_p3);

assign select_ln92_3_fu_767_p3 = ((icmp_ln92_fu_681_p2[0:0] == 1'b1) ? 14'd1 : add_ln92_1_fu_761_p2);

assign select_ln92_fu_737_p3 = ((or_ln92_fu_731_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_k_phi_fu_385_p4);

assign sub_ln692_fu_663_p2 = ($signed(reg_425) - $signed(mean_V_load_cast_fu_660_p1));

assign tmp_3_cast_fu_540_p3 = {{trunc_ln691_reg_1005}, {6'd0}};

assign tmp_4_cast_fu_635_p3 = {{trunc_ln692_reg_1050}, {6'd0}};

assign tmp_5_cast_fu_778_p3 = {{trunc_ln94_reg_1091}, {6'd0}};

assign tmp_7_cast_fu_788_p3 = {{trunc_ln98_reg_1112}, {6'd0}};

assign tmp_8_cast_fu_807_p3 = {{trunc_ln215_reg_1117}, {6'd0}};

assign tmp_9_cast_fu_907_p3 = {{trunc_ln208_fu_903_p1}, {6'd0}};

assign tmp_cast_fu_440_p3 = {{trunc_ln75_fu_436_p1}, {6'd0}};

assign trunc_ln208_fu_903_p1 = i_4_reg_403[5:0];

assign trunc_ln215_fu_757_p1 = select_ln92_fu_737_p3[5:0];

assign trunc_ln691_fu_521_p1 = select_ln79_fu_505_p3[5:0];

assign trunc_ln692_fu_625_p1 = select_ln87_1_fu_617_p3[5:0];

assign trunc_ln75_fu_436_p1 = i_reg_236[5:0];

assign trunc_ln94_fu_703_p1 = select_ln91_1_fu_695_p3[5:0];

assign trunc_ln98_fu_753_p1 = select_ln92_2_fu_745_p3[5:0];

assign xin_address0 = zext_ln208_1_reg_1215;

assign xin_d0 = cov_V_load_reg_1228;

assign xor_ln91_fu_707_p2 = (icmp_ln92_fu_681_p2 ^ 1'd1);

assign xout_address0 = zext_ln75_1_fu_469_p1;

assign zext_ln208_1_fu_936_p1 = add_ln208_fu_931_p2;

assign zext_ln208_fu_927_p1 = j_4_reg_414;

assign zext_ln215_1_fu_831_p1 = add_ln215_1_fu_825_p2;

assign zext_ln215_fu_820_p1 = add_ln215_fu_814_p2;

assign zext_ln691_1_fu_553_p1 = add_ln691_2_fu_547_p2;

assign zext_ln691_fu_537_p1 = select_ln79_2_reg_998;

assign zext_ln692_1_fu_655_p1 = add_ln692_fu_649_p2;

assign zext_ln692_fu_646_p1 = select_ln87_reg_1039;

assign zext_ln75_1_fu_469_p1 = add_ln75_fu_464_p2;

assign zext_ln75_fu_460_p1 = j_1_reg_247;

assign zext_ln79_fu_571_p1 = select_ln79_2_reg_998_pp0_iter3_reg;

assign zext_ln88_fu_642_p1 = select_ln87_reg_1039;

assign zext_ln94_1_fu_869_p1 = add_ln94_reg_1132_pp2_iter1_reg;

assign zext_ln94_fu_775_p1 = select_ln91_1_reg_1085;

assign zext_ln98_1_fu_865_p1 = add_ln98_reg_1127_pp2_iter1_reg;

assign zext_ln98_fu_785_p1 = select_ln92_2_reg_1106;

always @ (posedge ap_clk) begin
    tmp_cast_reg_952[5:0] <= 6'b000000;
    tmp_9_cast_reg_1202[5:0] <= 6'b000000;
    zext_ln208_1_reg_1215[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //top_nondf_kernel_cov_x1
