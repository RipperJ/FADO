// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_IO_L2_in_boundary_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_C_IO_L2_in_7_x024_dout,
        fifo_C_C_IO_L2_in_7_x024_empty_n,
        fifo_C_C_IO_L2_in_7_x024_read,
        fifo_C_PE_0_7_x0136_din,
        fifo_C_PE_0_7_x0136_full_n,
        fifo_C_PE_0_7_x0136_write
);

parameter    ap_ST_fsm_state1 = 67'd1;
parameter    ap_ST_fsm_state2 = 67'd2;
parameter    ap_ST_fsm_state3 = 67'd4;
parameter    ap_ST_fsm_state4 = 67'd8;
parameter    ap_ST_fsm_state5 = 67'd16;
parameter    ap_ST_fsm_state6 = 67'd32;
parameter    ap_ST_fsm_state7 = 67'd64;
parameter    ap_ST_fsm_state8 = 67'd128;
parameter    ap_ST_fsm_state9 = 67'd256;
parameter    ap_ST_fsm_state10 = 67'd512;
parameter    ap_ST_fsm_state11 = 67'd1024;
parameter    ap_ST_fsm_state12 = 67'd2048;
parameter    ap_ST_fsm_state13 = 67'd4096;
parameter    ap_ST_fsm_state14 = 67'd8192;
parameter    ap_ST_fsm_state15 = 67'd16384;
parameter    ap_ST_fsm_state16 = 67'd32768;
parameter    ap_ST_fsm_state17 = 67'd65536;
parameter    ap_ST_fsm_state18 = 67'd131072;
parameter    ap_ST_fsm_state19 = 67'd262144;
parameter    ap_ST_fsm_state20 = 67'd524288;
parameter    ap_ST_fsm_state21 = 67'd1048576;
parameter    ap_ST_fsm_state22 = 67'd2097152;
parameter    ap_ST_fsm_state23 = 67'd4194304;
parameter    ap_ST_fsm_state24 = 67'd8388608;
parameter    ap_ST_fsm_state25 = 67'd16777216;
parameter    ap_ST_fsm_state26 = 67'd33554432;
parameter    ap_ST_fsm_state27 = 67'd67108864;
parameter    ap_ST_fsm_state28 = 67'd134217728;
parameter    ap_ST_fsm_state29 = 67'd268435456;
parameter    ap_ST_fsm_state30 = 67'd536870912;
parameter    ap_ST_fsm_state31 = 67'd1073741824;
parameter    ap_ST_fsm_state32 = 67'd2147483648;
parameter    ap_ST_fsm_state33 = 67'd4294967296;
parameter    ap_ST_fsm_state34 = 67'd8589934592;
parameter    ap_ST_fsm_state35 = 67'd17179869184;
parameter    ap_ST_fsm_state36 = 67'd34359738368;
parameter    ap_ST_fsm_state37 = 67'd68719476736;
parameter    ap_ST_fsm_state38 = 67'd137438953472;
parameter    ap_ST_fsm_state39 = 67'd274877906944;
parameter    ap_ST_fsm_state40 = 67'd549755813888;
parameter    ap_ST_fsm_state41 = 67'd1099511627776;
parameter    ap_ST_fsm_state42 = 67'd2199023255552;
parameter    ap_ST_fsm_state43 = 67'd4398046511104;
parameter    ap_ST_fsm_state44 = 67'd8796093022208;
parameter    ap_ST_fsm_state45 = 67'd17592186044416;
parameter    ap_ST_fsm_state46 = 67'd35184372088832;
parameter    ap_ST_fsm_state47 = 67'd70368744177664;
parameter    ap_ST_fsm_state48 = 67'd140737488355328;
parameter    ap_ST_fsm_state49 = 67'd281474976710656;
parameter    ap_ST_fsm_state50 = 67'd562949953421312;
parameter    ap_ST_fsm_state51 = 67'd1125899906842624;
parameter    ap_ST_fsm_state52 = 67'd2251799813685248;
parameter    ap_ST_fsm_state53 = 67'd4503599627370496;
parameter    ap_ST_fsm_state54 = 67'd9007199254740992;
parameter    ap_ST_fsm_state55 = 67'd18014398509481984;
parameter    ap_ST_fsm_state56 = 67'd36028797018963968;
parameter    ap_ST_fsm_state57 = 67'd72057594037927936;
parameter    ap_ST_fsm_state58 = 67'd144115188075855872;
parameter    ap_ST_fsm_state59 = 67'd288230376151711744;
parameter    ap_ST_fsm_state60 = 67'd576460752303423488;
parameter    ap_ST_fsm_state61 = 67'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 67'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 67'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 67'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 67'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 67'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 67'd73786976294838206464;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_C_C_IO_L2_in_7_x024_dout;
input   fifo_C_C_IO_L2_in_7_x024_empty_n;
output   fifo_C_C_IO_L2_in_7_x024_read;
output  [255:0] fifo_C_PE_0_7_x0136_din;
input   fifo_C_PE_0_7_x0136_full_n;
output   fifo_C_PE_0_7_x0136_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_C_IO_L2_in_7_x024_read;
reg[255:0] fifo_C_PE_0_7_x0136_din;
reg fifo_C_PE_0_7_x0136_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [66:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_C_IO_L2_in_7_x024_blk_n;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state28;
reg    fifo_C_PE_0_7_x0136_blk_n;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire   [4:0] add_ln890_207_fu_482_p2;
reg   [4:0] add_ln890_207_reg_1385;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_488_p2;
wire   [0:0] icmp_ln890233_fu_494_p2;
reg   [0:0] icmp_ln890233_reg_1394;
wire   [2:0] select_ln4831_fu_500_p3;
reg   [2:0] select_ln4831_reg_1399;
wire   [0:0] or_ln4831_fu_508_p2;
reg   [0:0] or_ln4831_reg_1404;
wire   [0:0] and_ln4831_fu_520_p2;
wire   [0:0] icmp_ln886_fu_540_p2;
reg   [0:0] icmp_ln886_reg_1412;
wire   [3:0] add_ln691_1147_fu_546_p2;
reg   [3:0] add_ln691_1147_reg_1416;
wire    ap_CS_fsm_state3;
wire   [6:0] tmp_407_cast_fu_556_p3;
reg   [6:0] tmp_407_cast_reg_1421;
wire   [0:0] icmp_ln890_1180_fu_564_p2;
wire   [4:0] add_ln691_1148_fu_570_p2;
reg   [4:0] add_ln691_1148_reg_1430;
wire    ap_CS_fsm_state4;
reg   [6:0] local_C_pong_V_addr_reg_1435;
wire   [16:0] add_ln4865_fu_596_p2;
reg   [16:0] add_ln4865_reg_1443;
wire    ap_CS_fsm_state6;
wire   [3:0] select_ln4872_fu_710_p3;
reg   [3:0] select_ln4872_reg_1451;
wire   [0:0] icmp_ln4865_fu_606_p2;
wire   [0:0] select_ln4872_1_fu_722_p3;
reg   [0:0] select_ln4872_1_reg_1457;
wire   [5:0] select_ln890_398_fu_730_p3;
reg   [5:0] select_ln890_398_reg_1462;
wire   [3:0] select_ln4872_2_fu_766_p3;
reg   [3:0] select_ln4872_2_reg_1467;
wire   [9:0] select_ln890_399_fu_780_p3;
reg   [9:0] select_ln890_399_reg_1472;
wire   [10:0] select_ln890_400_fu_794_p3;
reg   [10:0] select_ln890_400_reg_1477;
wire    ap_CS_fsm_state7;
wire   [255:0] select_ln4888_fu_825_p3;
reg   [255:0] select_ln4888_reg_1487;
wire    ap_CS_fsm_state8;
wire   [3:0] add_ln691_1152_fu_832_p2;
wire   [0:0] arb_fu_843_p2;
wire    ap_CS_fsm_state25;
wire   [2:0] add_ln691_1153_fu_848_p2;
wire   [3:0] add_ln691_1145_fu_853_p2;
reg   [3:0] add_ln691_1145_reg_1507;
wire    ap_CS_fsm_state26;
wire   [6:0] tmp_406_cast_fu_863_p3;
reg   [6:0] tmp_406_cast_reg_1512;
wire   [0:0] icmp_ln890_1179_fu_871_p2;
wire   [4:0] add_ln691_1146_fu_877_p2;
reg   [4:0] add_ln691_1146_reg_1521;
wire    ap_CS_fsm_state27;
reg   [6:0] local_C_ping_V_addr_3_reg_1526;
wire   [16:0] add_ln4925_fu_903_p2;
reg   [16:0] add_ln4925_reg_1534;
wire    ap_CS_fsm_state29;
wire   [3:0] select_ln4932_fu_1017_p3;
reg   [3:0] select_ln4932_reg_1542;
wire   [0:0] icmp_ln4925_fu_913_p2;
wire   [0:0] select_ln4932_1_fu_1029_p3;
reg   [0:0] select_ln4932_1_reg_1548;
wire   [5:0] select_ln890_395_fu_1037_p3;
reg   [5:0] select_ln890_395_reg_1553;
wire   [3:0] select_ln4932_2_fu_1073_p3;
reg   [3:0] select_ln4932_2_reg_1558;
wire   [9:0] select_ln890_396_fu_1087_p3;
reg   [9:0] select_ln890_396_reg_1563;
wire   [10:0] select_ln890_397_fu_1101_p3;
reg   [10:0] select_ln890_397_reg_1568;
wire    ap_CS_fsm_state30;
wire   [255:0] select_ln4948_fu_1132_p3;
reg   [255:0] select_ln4948_reg_1578;
wire    ap_CS_fsm_state31;
wire   [3:0] add_ln691_1150_fu_1139_p2;
wire   [16:0] add_ln4969_fu_1144_p2;
reg   [16:0] add_ln4969_reg_1588;
wire    ap_CS_fsm_state48;
wire   [3:0] select_ln4976_fu_1258_p3;
reg   [3:0] select_ln4976_reg_1596;
wire   [0:0] icmp_ln4969_fu_1154_p2;
wire   [0:0] select_ln4976_1_fu_1270_p3;
reg   [0:0] select_ln4976_1_reg_1602;
wire   [5:0] select_ln890_fu_1278_p3;
reg   [5:0] select_ln890_reg_1607;
wire   [3:0] select_ln4976_2_fu_1314_p3;
reg   [3:0] select_ln4976_2_reg_1612;
wire   [9:0] select_ln890_393_fu_1328_p3;
reg   [9:0] select_ln890_393_reg_1617;
wire   [10:0] select_ln890_394_fu_1342_p3;
reg   [10:0] select_ln890_394_reg_1622;
wire    ap_CS_fsm_state49;
wire   [3:0] add_ln691_1144_fu_1359_p2;
reg   [3:0] add_ln691_1144_reg_1632;
wire   [255:0] select_ln4992_fu_1378_p3;
reg   [255:0] select_ln4992_reg_1637;
wire    ap_CS_fsm_state50;
reg   [6:0] local_C_ping_V_address0;
reg    local_C_ping_V_ce0;
wire   [511:0] local_C_ping_V_q0;
reg    local_C_ping_V_ce1;
reg    local_C_ping_V_we1;
wire   [6:0] local_C_pong_V_address0;
reg    local_C_pong_V_ce0;
wire   [511:0] local_C_pong_V_q0;
reg    local_C_pong_V_ce1;
reg    local_C_pong_V_we1;
reg   [4:0] indvar_flatten111_reg_226;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_237;
reg   [0:0] intra_trans_en_reg_248;
reg   [0:0] arb_2_reg_261;
reg   [3:0] c4_V_16_reg_273;
wire   [0:0] icmp_ln890_1182_fu_590_p2;
reg   [4:0] c5_V_64_reg_284;
reg   [16:0] indvar_flatten47_reg_295;
reg   [10:0] indvar_flatten19_reg_306;
reg   [9:0] indvar_flatten_reg_317;
reg   [5:0] c6_V_130_reg_328;
reg   [3:0] c7_V_68_reg_339;
reg   [3:0] c4_V_reg_350;
wire   [0:0] icmp_ln890_1181_fu_897_p2;
reg   [4:0] c5_V_reg_361;
reg   [16:0] indvar_flatten103_reg_372;
reg   [10:0] indvar_flatten75_reg_383;
reg   [9:0] indvar_flatten55_reg_394;
reg   [5:0] c6_V_129_reg_405;
reg   [3:0] c7_V_67_reg_416;
reg   [16:0] indvar_flatten167_reg_427;
reg   [10:0] indvar_flatten139_reg_438;
reg   [9:0] indvar_flatten119_reg_449;
reg   [5:0] c6_V_reg_460;
reg   [3:0] c7_V_reg_471;
wire   [63:0] zext_ln4853_1_fu_585_p1;
wire   [63:0] tmp_10_fu_802_p4;
wire   [63:0] zext_ln4913_1_fu_892_p1;
wire   [63:0] tmp_9_fu_1109_p4;
wire   [63:0] tmp_s_fu_1350_p4;
wire   [0:0] xor_ln4831_fu_514_p2;
wire   [5:0] p_shl_fu_526_p3;
wire   [5:0] add_i_i720_cast_fu_534_p2;
wire   [2:0] trunc_ln4853_fu_552_p1;
wire   [6:0] zext_ln4853_fu_576_p1;
wire   [6:0] add_ln4853_fu_580_p2;
wire   [0:0] icmp_ln890_1186_fu_612_p2;
wire   [0:0] empty_fu_602_p1;
wire   [0:0] xor_ln4865_fu_618_p2;
wire   [0:0] icmp_ln890_1187_fu_630_p2;
wire   [0:0] icmp_ln890_1188_fu_642_p2;
wire   [0:0] and_ln4865_2_fu_648_p2;
wire   [0:0] or_ln4871_fu_654_p2;
wire   [0:0] xor_ln4871_fu_668_p2;
wire   [0:0] and_ln4865_fu_624_p2;
wire   [0:0] or_ln4871_1_fu_674_p2;
wire   [0:0] and_ln4865_1_fu_636_p2;
wire   [5:0] select_ln4871_fu_660_p3;
wire   [0:0] and_ln4871_1_fu_686_p2;
wire   [0:0] or_ln4872_fu_698_p2;
wire   [0:0] or_ln4872_1_fu_704_p2;
wire   [5:0] add_ln691_1151_fu_692_p2;
wire   [0:0] empty_2442_fu_718_p1;
wire   [0:0] and_ln4871_fu_680_p2;
wire   [3:0] tmp_355_fu_748_p4;
wire   [3:0] tmp_354_fu_738_p4;
wire   [3:0] select_ln4871_1_fu_758_p3;
wire   [9:0] add_ln890_205_fu_774_p2;
wire   [10:0] add_ln890_206_fu_788_p2;
wire   [255:0] data_split_V_1_21_fu_815_p4;
wire   [255:0] data_split_V_0_68_fu_811_p1;
wire   [0:0] xor_ln4958_fu_837_p2;
wire   [2:0] trunc_ln4913_fu_859_p1;
wire   [6:0] zext_ln4913_fu_883_p1;
wire   [6:0] add_ln4913_fu_887_p2;
wire   [0:0] icmp_ln890_1183_fu_919_p2;
wire   [0:0] empty_2443_fu_909_p1;
wire   [0:0] xor_ln4925_fu_925_p2;
wire   [0:0] icmp_ln890_1184_fu_937_p2;
wire   [0:0] icmp_ln890_1185_fu_949_p2;
wire   [0:0] and_ln4925_2_fu_955_p2;
wire   [0:0] or_ln4931_fu_961_p2;
wire   [0:0] xor_ln4931_fu_975_p2;
wire   [0:0] and_ln4925_fu_931_p2;
wire   [0:0] or_ln4931_1_fu_981_p2;
wire   [0:0] and_ln4925_1_fu_943_p2;
wire   [5:0] select_ln4931_fu_967_p3;
wire   [0:0] and_ln4931_1_fu_993_p2;
wire   [0:0] or_ln4932_fu_1005_p2;
wire   [0:0] or_ln4932_1_fu_1011_p2;
wire   [5:0] add_ln691_1149_fu_999_p2;
wire   [0:0] empty_2444_fu_1025_p1;
wire   [0:0] and_ln4931_fu_987_p2;
wire   [3:0] tmp_353_fu_1055_p4;
wire   [3:0] tmp_352_fu_1045_p4;
wire   [3:0] select_ln4931_1_fu_1065_p3;
wire   [9:0] add_ln890_203_fu_1081_p2;
wire   [10:0] add_ln890_204_fu_1095_p2;
wire   [255:0] data_split_V_1_9_fu_1122_p4;
wire   [255:0] data_split_V_0_67_fu_1118_p1;
wire   [0:0] icmp_ln890_1176_fu_1160_p2;
wire   [0:0] empty_2445_fu_1150_p1;
wire   [0:0] xor_ln4969_fu_1166_p2;
wire   [0:0] icmp_ln890_1177_fu_1178_p2;
wire   [0:0] icmp_ln890_1178_fu_1190_p2;
wire   [0:0] and_ln4969_2_fu_1196_p2;
wire   [0:0] or_ln4975_fu_1202_p2;
wire   [0:0] xor_ln4975_fu_1216_p2;
wire   [0:0] and_ln4969_fu_1172_p2;
wire   [0:0] or_ln4975_1_fu_1222_p2;
wire   [0:0] and_ln4969_1_fu_1184_p2;
wire   [5:0] select_ln4975_fu_1208_p3;
wire   [0:0] and_ln4975_1_fu_1234_p2;
wire   [0:0] or_ln4976_fu_1246_p2;
wire   [0:0] or_ln4976_1_fu_1252_p2;
wire   [5:0] add_ln691_fu_1240_p2;
wire   [0:0] empty_2446_fu_1266_p1;
wire   [0:0] and_ln4975_fu_1228_p2;
wire   [3:0] tmp_349_fu_1296_p4;
wire   [3:0] tmp_fu_1286_p4;
wire   [3:0] select_ln4975_1_fu_1306_p3;
wire   [9:0] add_ln890_fu_1322_p2;
wire   [10:0] add_ln890_202_fu_1336_p2;
wire   [255:0] data_split_V_1_fu_1368_p4;
wire   [255:0] data_split_V_0_fu_1364_p1;
wire    ap_CS_fsm_state67;
reg   [66:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 67'd1;
end

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_V_address0),
    .ce0(local_C_ping_V_ce0),
    .q0(local_C_ping_V_q0),
    .address1(local_C_ping_V_addr_3_reg_1526),
    .ce1(local_C_ping_V_ce1),
    .we1(local_C_ping_V_we1),
    .d1(fifo_C_C_IO_L2_in_7_x024_dout)
);

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_V_address0),
    .ce0(local_C_pong_V_ce0),
    .q0(local_C_pong_V_q0),
    .address1(local_C_pong_V_addr_reg_1435),
    .ce1(local_C_pong_V_ce1),
    .we1(local_C_pong_V_we1),
    .d1(fifo_C_C_IO_L2_in_7_x024_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        arb_2_reg_261 <= arb_fu_843_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_2_reg_261 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c1_V_reg_237 <= add_ln691_1153_fu_848_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_237 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_540_p2 == 1'd0) & (1'd0 == and_ln4831_fu_520_p2) & (icmp_ln890_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c4_V_16_reg_273 <= 4'd0;
    end else if (((icmp_ln890_1182_fu_590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_16_reg_273 <= add_ln691_1147_reg_1416;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln4831_fu_520_p2) & (icmp_ln886_fu_540_p2 == 1'd0) & (icmp_ln890_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c4_V_reg_350 <= 4'd0;
    end else if (((icmp_ln890_1181_fu_897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        c4_V_reg_350 <= add_ln691_1145_reg_1507;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1180_fu_564_p2 == 1'd0) & (icmp_ln886_reg_1412 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c5_V_64_reg_284 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        c5_V_64_reg_284 <= add_ln691_1148_reg_1430;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1179_fu_871_p2 == 1'd0) & (icmp_ln886_reg_1412 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        c5_V_reg_361 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        c5_V_reg_361 <= add_ln691_1146_reg_1521;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        c6_V_129_reg_405 <= 6'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        c6_V_129_reg_405 <= select_ln890_395_reg_1553;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        c6_V_130_reg_328 <= 6'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        c6_V_130_reg_328 <= select_ln890_398_reg_1462;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c6_V_reg_460 <= 6'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        c6_V_reg_460 <= select_ln890_reg_1607;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        c7_V_67_reg_416 <= 4'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        c7_V_67_reg_416 <= add_ln691_1150_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        c7_V_68_reg_339 <= 4'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        c7_V_68_reg_339 <= add_ln691_1152_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c7_V_reg_471 <= 4'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        c7_V_reg_471 <= add_ln691_1144_reg_1632;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        indvar_flatten103_reg_372 <= 17'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        indvar_flatten103_reg_372 <= add_ln4925_reg_1534;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten111_reg_226 <= add_ln890_207_reg_1385;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten111_reg_226 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten119_reg_449 <= 10'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        indvar_flatten119_reg_449 <= select_ln890_393_reg_1617;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten139_reg_438 <= 11'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        indvar_flatten139_reg_438 <= select_ln890_394_reg_1622;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten167_reg_427 <= 17'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        indvar_flatten167_reg_427 <= add_ln4969_reg_1588;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        indvar_flatten19_reg_306 <= 11'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        indvar_flatten19_reg_306 <= select_ln890_400_reg_1477;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        indvar_flatten47_reg_295 <= 17'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        indvar_flatten47_reg_295 <= add_ln4865_reg_1443;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        indvar_flatten55_reg_394 <= 10'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        indvar_flatten55_reg_394 <= select_ln890_396_reg_1563;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        indvar_flatten75_reg_383 <= 11'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        indvar_flatten75_reg_383 <= select_ln890_397_reg_1568;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
        indvar_flatten_reg_317 <= 10'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        indvar_flatten_reg_317 <= select_ln890_399_reg_1472;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        intra_trans_en_reg_248 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_248 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln4865_reg_1443 <= add_ln4865_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln4925_reg_1534 <= add_ln4925_fu_903_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add_ln4969_reg_1588 <= add_ln4969_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln691_1144_reg_1632 <= add_ln691_1144_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_reg_1412 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        add_ln691_1145_reg_1507 <= add_ln691_1145_fu_853_p2;
        tmp_406_cast_reg_1512[6 : 4] <= tmp_406_cast_fu_863_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln691_1146_reg_1521 <= add_ln691_1146_fu_877_p2;
        local_C_ping_V_addr_3_reg_1526 <= zext_ln4913_1_fu_892_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_reg_1412 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln691_1147_reg_1416 <= add_ln691_1147_fu_546_p2;
        tmp_407_cast_reg_1421[6 : 4] <= tmp_407_cast_fu_556_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln691_1148_reg_1430 <= add_ln691_1148_fu_570_p2;
        local_C_pong_V_addr_reg_1435 <= zext_ln4853_1_fu_585_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_207_reg_1385 <= add_ln890_207_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln886_reg_1412 <= icmp_ln886_fu_540_p2;
        icmp_ln890233_reg_1394 <= icmp_ln890233_fu_494_p2;
        or_ln4831_reg_1404 <= or_ln4831_fu_508_p2;
        select_ln4831_reg_1399 <= select_ln4831_fu_500_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4865_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        select_ln4872_1_reg_1457 <= select_ln4872_1_fu_722_p3;
        select_ln4872_2_reg_1467 <= select_ln4872_2_fu_766_p3;
        select_ln4872_reg_1451 <= select_ln4872_fu_710_p3;
        select_ln890_398_reg_1462 <= select_ln890_398_fu_730_p3;
        select_ln890_399_reg_1472 <= select_ln890_399_fu_780_p3;
        select_ln890_400_reg_1477 <= select_ln890_400_fu_794_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        select_ln4888_reg_1487 <= select_ln4888_fu_825_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4925_fu_913_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        select_ln4932_1_reg_1548 <= select_ln4932_1_fu_1029_p3;
        select_ln4932_2_reg_1558 <= select_ln4932_2_fu_1073_p3;
        select_ln4932_reg_1542 <= select_ln4932_fu_1017_p3;
        select_ln890_395_reg_1553 <= select_ln890_395_fu_1037_p3;
        select_ln890_396_reg_1563 <= select_ln890_396_fu_1087_p3;
        select_ln890_397_reg_1568 <= select_ln890_397_fu_1101_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        select_ln4948_reg_1578 <= select_ln4948_fu_1132_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4969_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        select_ln4976_1_reg_1602 <= select_ln4976_1_fu_1270_p3;
        select_ln4976_2_reg_1612 <= select_ln4976_2_fu_1314_p3;
        select_ln4976_reg_1596 <= select_ln4976_fu_1258_p3;
        select_ln890_393_reg_1617 <= select_ln890_393_fu_1328_p3;
        select_ln890_394_reg_1622 <= select_ln890_394_fu_1342_p3;
        select_ln890_reg_1607 <= select_ln890_fu_1278_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        select_ln4992_reg_1637 <= select_ln4992_fu_1378_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state5))) begin
        fifo_C_C_IO_L2_in_7_x024_blk_n = fifo_C_C_IO_L2_in_7_x024_empty_n;
    end else begin
        fifo_C_C_IO_L2_in_7_x024_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        fifo_C_C_IO_L2_in_7_x024_read = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_7_x024_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        fifo_C_PE_0_7_x0136_blk_n = fifo_C_PE_0_7_x0136_full_n;
    end else begin
        fifo_C_PE_0_7_x0136_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state64)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state62)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state59)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state58)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        fifo_C_PE_0_7_x0136_din = select_ln4992_reg_1637;
    end else if ((((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state39)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)))) begin
        fifo_C_PE_0_7_x0136_din = select_ln4948_reg_1578;
    end else if ((((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        fifo_C_PE_0_7_x0136_din = select_ln4888_reg_1487;
    end else begin
        fifo_C_PE_0_7_x0136_din = 'bx;
    end
end

always @ (*) begin
    if ((((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state64)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state62)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state59)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state58)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state39)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        fifo_C_PE_0_7_x0136_write = 1'b1;
    end else begin
        fifo_C_PE_0_7_x0136_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        local_C_ping_V_address0 = tmp_s_fu_1350_p4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        local_C_ping_V_address0 = tmp_10_fu_802_p4;
    end else begin
        local_C_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state7))) begin
        local_C_ping_V_ce0 = 1'b1;
    end else begin
        local_C_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        local_C_ping_V_ce1 = 1'b1;
    end else begin
        local_C_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        local_C_ping_V_we1 = 1'b1;
    end else begin
        local_C_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        local_C_pong_V_ce0 = 1'b1;
    end else begin
        local_C_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        local_C_pong_V_ce1 = 1'b1;
    end else begin
        local_C_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        local_C_pong_V_we1 = 1'b1;
    end else begin
        local_C_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else if (((1'd1 == and_ln4831_fu_520_p2) & (icmp_ln890_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd0)) | ((icmp_ln890_1180_fu_564_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln890_1182_fu_590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln4865_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd1)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((1'b1 == ap_CS_fsm_state26) & (((icmp_ln890_1179_fu_871_p2 == 1'd1) & (or_ln4831_reg_1404 == 1'd0)) | ((icmp_ln886_reg_1412 == 1'd1) & (or_ln4831_reg_1404 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln890_1181_fu_897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln4925_fu_913_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln4969_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i720_cast_fu_534_p2 = ($signed(6'd41) - $signed(p_shl_fu_526_p3));

assign add_ln4853_fu_580_p2 = (tmp_407_cast_reg_1421 + zext_ln4853_fu_576_p1);

assign add_ln4865_fu_596_p2 = (indvar_flatten47_reg_295 + 17'd1);

assign add_ln4913_fu_887_p2 = (tmp_406_cast_reg_1512 + zext_ln4913_fu_883_p1);

assign add_ln4925_fu_903_p2 = (indvar_flatten103_reg_372 + 17'd1);

assign add_ln4969_fu_1144_p2 = (indvar_flatten167_reg_427 + 17'd1);

assign add_ln691_1144_fu_1359_p2 = (select_ln4976_reg_1596 + 4'd1);

assign add_ln691_1145_fu_853_p2 = (c4_V_reg_350 + 4'd1);

assign add_ln691_1146_fu_877_p2 = (c5_V_reg_361 + 5'd1);

assign add_ln691_1147_fu_546_p2 = (c4_V_16_reg_273 + 4'd1);

assign add_ln691_1148_fu_570_p2 = (c5_V_64_reg_284 + 5'd1);

assign add_ln691_1149_fu_999_p2 = (select_ln4931_fu_967_p3 + 6'd1);

assign add_ln691_1150_fu_1139_p2 = (select_ln4932_reg_1542 + 4'd1);

assign add_ln691_1151_fu_692_p2 = (select_ln4871_fu_660_p3 + 6'd1);

assign add_ln691_1152_fu_832_p2 = (select_ln4872_reg_1451 + 4'd1);

assign add_ln691_1153_fu_848_p2 = (select_ln4831_reg_1399 + 3'd1);

assign add_ln691_fu_1240_p2 = (select_ln4975_fu_1208_p3 + 6'd1);

assign add_ln890_202_fu_1336_p2 = (indvar_flatten139_reg_438 + 11'd1);

assign add_ln890_203_fu_1081_p2 = (indvar_flatten55_reg_394 + 10'd1);

assign add_ln890_204_fu_1095_p2 = (indvar_flatten75_reg_383 + 11'd1);

assign add_ln890_205_fu_774_p2 = (indvar_flatten_reg_317 + 10'd1);

assign add_ln890_206_fu_788_p2 = (indvar_flatten19_reg_306 + 11'd1);

assign add_ln890_207_fu_482_p2 = (indvar_flatten111_reg_226 + 5'd1);

assign add_ln890_fu_1322_p2 = (indvar_flatten119_reg_449 + 10'd1);

assign and_ln4831_fu_520_p2 = (xor_ln4831_fu_514_p2 & arb_2_reg_261);

assign and_ln4865_1_fu_636_p2 = (xor_ln4865_fu_618_p2 & icmp_ln890_1187_fu_630_p2);

assign and_ln4865_2_fu_648_p2 = (xor_ln4865_fu_618_p2 & icmp_ln890_1188_fu_642_p2);

assign and_ln4865_fu_624_p2 = (xor_ln4865_fu_618_p2 & empty_fu_602_p1);

assign and_ln4871_1_fu_686_p2 = (or_ln4871_1_fu_674_p2 & and_ln4865_1_fu_636_p2);

assign and_ln4871_fu_680_p2 = (or_ln4871_1_fu_674_p2 & and_ln4865_fu_624_p2);

assign and_ln4925_1_fu_943_p2 = (xor_ln4925_fu_925_p2 & icmp_ln890_1184_fu_937_p2);

assign and_ln4925_2_fu_955_p2 = (xor_ln4925_fu_925_p2 & icmp_ln890_1185_fu_949_p2);

assign and_ln4925_fu_931_p2 = (xor_ln4925_fu_925_p2 & empty_2443_fu_909_p1);

assign and_ln4931_1_fu_993_p2 = (or_ln4931_1_fu_981_p2 & and_ln4925_1_fu_943_p2);

assign and_ln4931_fu_987_p2 = (or_ln4931_1_fu_981_p2 & and_ln4925_fu_931_p2);

assign and_ln4969_1_fu_1184_p2 = (xor_ln4969_fu_1166_p2 & icmp_ln890_1177_fu_1178_p2);

assign and_ln4969_2_fu_1196_p2 = (xor_ln4969_fu_1166_p2 & icmp_ln890_1178_fu_1190_p2);

assign and_ln4969_fu_1172_p2 = (xor_ln4969_fu_1166_p2 & empty_2445_fu_1150_p1);

assign and_ln4975_1_fu_1234_p2 = (or_ln4975_1_fu_1222_p2 & and_ln4969_1_fu_1184_p2);

assign and_ln4975_fu_1228_p2 = (or_ln4975_1_fu_1222_p2 & and_ln4969_fu_1172_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign arb_fu_843_p2 = (xor_ln4958_fu_837_p2 | icmp_ln890233_reg_1394);

assign data_split_V_0_67_fu_1118_p1 = local_C_pong_V_q0[255:0];

assign data_split_V_0_68_fu_811_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_0_fu_1364_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_1_21_fu_815_p4 = {{local_C_ping_V_q0[511:256]}};

assign data_split_V_1_9_fu_1122_p4 = {{local_C_pong_V_q0[511:256]}};

assign data_split_V_1_fu_1368_p4 = {{local_C_ping_V_q0[511:256]}};

assign empty_2442_fu_718_p1 = add_ln691_1151_fu_692_p2[0:0];

assign empty_2443_fu_909_p1 = c6_V_129_reg_405[0:0];

assign empty_2444_fu_1025_p1 = add_ln691_1149_fu_999_p2[0:0];

assign empty_2445_fu_1150_p1 = c6_V_reg_460[0:0];

assign empty_2446_fu_1266_p1 = add_ln691_fu_1240_p2[0:0];

assign empty_fu_602_p1 = c6_V_130_reg_328[0:0];

assign icmp_ln4865_fu_606_p2 = ((indvar_flatten47_reg_295 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln4925_fu_913_p2 = ((indvar_flatten103_reg_372 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln4969_fu_1154_p2 = ((indvar_flatten167_reg_427 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_540_p2 = ((add_i_i720_cast_fu_534_p2 < 6'd7) ? 1'b1 : 1'b0);

assign icmp_ln890233_fu_494_p2 = ((c1_V_reg_237 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1176_fu_1160_p2 = ((indvar_flatten139_reg_438 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1177_fu_1178_p2 = ((c7_V_reg_471 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1178_fu_1190_p2 = ((indvar_flatten119_reg_449 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1179_fu_871_p2 = ((c4_V_reg_350 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1180_fu_564_p2 = ((c4_V_16_reg_273 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1181_fu_897_p2 = ((c5_V_reg_361 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1182_fu_590_p2 = ((c5_V_64_reg_284 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1183_fu_919_p2 = ((indvar_flatten75_reg_383 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1184_fu_937_p2 = ((c7_V_67_reg_416 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1185_fu_949_p2 = ((indvar_flatten55_reg_394 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1186_fu_612_p2 = ((indvar_flatten19_reg_306 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1187_fu_630_p2 = ((c7_V_68_reg_339 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1188_fu_642_p2 = ((indvar_flatten_reg_317 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_488_p2 = ((indvar_flatten111_reg_226 == 5'd24) ? 1'b1 : 1'b0);

assign local_C_pong_V_address0 = tmp_9_fu_1109_p4;

assign or_ln4831_fu_508_p2 = (intra_trans_en_reg_248 | icmp_ln890233_fu_494_p2);

assign or_ln4871_1_fu_674_p2 = (xor_ln4871_fu_668_p2 | icmp_ln890_1186_fu_612_p2);

assign or_ln4871_fu_654_p2 = (icmp_ln890_1186_fu_612_p2 | and_ln4865_2_fu_648_p2);

assign or_ln4872_1_fu_704_p2 = (or_ln4872_fu_698_p2 | icmp_ln890_1186_fu_612_p2);

assign or_ln4872_fu_698_p2 = (and_ln4871_1_fu_686_p2 | and_ln4865_2_fu_648_p2);

assign or_ln4931_1_fu_981_p2 = (xor_ln4931_fu_975_p2 | icmp_ln890_1183_fu_919_p2);

assign or_ln4931_fu_961_p2 = (icmp_ln890_1183_fu_919_p2 | and_ln4925_2_fu_955_p2);

assign or_ln4932_1_fu_1011_p2 = (or_ln4932_fu_1005_p2 | icmp_ln890_1183_fu_919_p2);

assign or_ln4932_fu_1005_p2 = (and_ln4931_1_fu_993_p2 | and_ln4925_2_fu_955_p2);

assign or_ln4975_1_fu_1222_p2 = (xor_ln4975_fu_1216_p2 | icmp_ln890_1176_fu_1160_p2);

assign or_ln4975_fu_1202_p2 = (icmp_ln890_1176_fu_1160_p2 | and_ln4969_2_fu_1196_p2);

assign or_ln4976_1_fu_1252_p2 = (or_ln4976_fu_1246_p2 | icmp_ln890_1176_fu_1160_p2);

assign or_ln4976_fu_1246_p2 = (and_ln4975_1_fu_1234_p2 | and_ln4969_2_fu_1196_p2);

assign p_shl_fu_526_p3 = {{select_ln4831_fu_500_p3}, {3'd0}};

assign select_ln4831_fu_500_p3 = ((icmp_ln890233_fu_494_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_237);

assign select_ln4871_1_fu_758_p3 = ((or_ln4871_fu_654_p2[0:0] == 1'b1) ? 4'd0 : tmp_355_fu_748_p4);

assign select_ln4871_fu_660_p3 = ((or_ln4871_fu_654_p2[0:0] == 1'b1) ? 6'd0 : c6_V_130_reg_328);

assign select_ln4872_1_fu_722_p3 = ((and_ln4871_1_fu_686_p2[0:0] == 1'b1) ? empty_2442_fu_718_p1 : and_ln4871_fu_680_p2);

assign select_ln4872_2_fu_766_p3 = ((and_ln4871_1_fu_686_p2[0:0] == 1'b1) ? tmp_354_fu_738_p4 : select_ln4871_1_fu_758_p3);

assign select_ln4872_fu_710_p3 = ((or_ln4872_1_fu_704_p2[0:0] == 1'b1) ? 4'd0 : c7_V_68_reg_339);

assign select_ln4888_fu_825_p3 = ((select_ln4872_1_reg_1457[0:0] == 1'b1) ? data_split_V_1_21_fu_815_p4 : data_split_V_0_68_fu_811_p1);

assign select_ln4931_1_fu_1065_p3 = ((or_ln4931_fu_961_p2[0:0] == 1'b1) ? 4'd0 : tmp_353_fu_1055_p4);

assign select_ln4931_fu_967_p3 = ((or_ln4931_fu_961_p2[0:0] == 1'b1) ? 6'd0 : c6_V_129_reg_405);

assign select_ln4932_1_fu_1029_p3 = ((and_ln4931_1_fu_993_p2[0:0] == 1'b1) ? empty_2444_fu_1025_p1 : and_ln4931_fu_987_p2);

assign select_ln4932_2_fu_1073_p3 = ((and_ln4931_1_fu_993_p2[0:0] == 1'b1) ? tmp_352_fu_1045_p4 : select_ln4931_1_fu_1065_p3);

assign select_ln4932_fu_1017_p3 = ((or_ln4932_1_fu_1011_p2[0:0] == 1'b1) ? 4'd0 : c7_V_67_reg_416);

assign select_ln4948_fu_1132_p3 = ((select_ln4932_1_reg_1548[0:0] == 1'b1) ? data_split_V_1_9_fu_1122_p4 : data_split_V_0_67_fu_1118_p1);

assign select_ln4975_1_fu_1306_p3 = ((or_ln4975_fu_1202_p2[0:0] == 1'b1) ? 4'd0 : tmp_349_fu_1296_p4);

assign select_ln4975_fu_1208_p3 = ((or_ln4975_fu_1202_p2[0:0] == 1'b1) ? 6'd0 : c6_V_reg_460);

assign select_ln4976_1_fu_1270_p3 = ((and_ln4975_1_fu_1234_p2[0:0] == 1'b1) ? empty_2446_fu_1266_p1 : and_ln4975_fu_1228_p2);

assign select_ln4976_2_fu_1314_p3 = ((and_ln4975_1_fu_1234_p2[0:0] == 1'b1) ? tmp_fu_1286_p4 : select_ln4975_1_fu_1306_p3);

assign select_ln4976_fu_1258_p3 = ((or_ln4976_1_fu_1252_p2[0:0] == 1'b1) ? 4'd0 : c7_V_reg_471);

assign select_ln4992_fu_1378_p3 = ((select_ln4976_1_reg_1602[0:0] == 1'b1) ? data_split_V_1_fu_1368_p4 : data_split_V_0_fu_1364_p1);

assign select_ln890_393_fu_1328_p3 = ((or_ln4975_fu_1202_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_fu_1322_p2);

assign select_ln890_394_fu_1342_p3 = ((icmp_ln890_1176_fu_1160_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_202_fu_1336_p2);

assign select_ln890_395_fu_1037_p3 = ((and_ln4931_1_fu_993_p2[0:0] == 1'b1) ? add_ln691_1149_fu_999_p2 : select_ln4931_fu_967_p3);

assign select_ln890_396_fu_1087_p3 = ((or_ln4931_fu_961_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_203_fu_1081_p2);

assign select_ln890_397_fu_1101_p3 = ((icmp_ln890_1183_fu_919_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_204_fu_1095_p2);

assign select_ln890_398_fu_730_p3 = ((and_ln4871_1_fu_686_p2[0:0] == 1'b1) ? add_ln691_1151_fu_692_p2 : select_ln4871_fu_660_p3);

assign select_ln890_399_fu_780_p3 = ((or_ln4871_fu_654_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_205_fu_774_p2);

assign select_ln890_400_fu_794_p3 = ((icmp_ln890_1186_fu_612_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_206_fu_788_p2);

assign select_ln890_fu_1278_p3 = ((and_ln4975_1_fu_1234_p2[0:0] == 1'b1) ? add_ln691_fu_1240_p2 : select_ln4975_fu_1208_p3);

assign tmp_10_fu_802_p4 = {{{{56'd0}, {select_ln4872_reg_1451}}}, {select_ln4872_2_reg_1467}};

assign tmp_349_fu_1296_p4 = {{c6_V_reg_460[4:1]}};

assign tmp_352_fu_1045_p4 = {{add_ln691_1149_fu_999_p2[4:1]}};

assign tmp_353_fu_1055_p4 = {{c6_V_129_reg_405[4:1]}};

assign tmp_354_fu_738_p4 = {{add_ln691_1151_fu_692_p2[4:1]}};

assign tmp_355_fu_748_p4 = {{c6_V_130_reg_328[4:1]}};

assign tmp_406_cast_fu_863_p3 = {{trunc_ln4913_fu_859_p1}, {4'd0}};

assign tmp_407_cast_fu_556_p3 = {{trunc_ln4853_fu_552_p1}, {4'd0}};

assign tmp_9_fu_1109_p4 = {{{{56'd0}, {select_ln4932_reg_1542}}}, {select_ln4932_2_reg_1558}};

assign tmp_fu_1286_p4 = {{add_ln691_fu_1240_p2[4:1]}};

assign tmp_s_fu_1350_p4 = {{{{56'd0}, {select_ln4976_reg_1596}}}, {select_ln4976_2_reg_1612}};

assign trunc_ln4853_fu_552_p1 = c4_V_16_reg_273[2:0];

assign trunc_ln4913_fu_859_p1 = c4_V_reg_350[2:0];

assign xor_ln4831_fu_514_p2 = (icmp_ln890233_fu_494_p2 ^ 1'd1);

assign xor_ln4865_fu_618_p2 = (icmp_ln890_1186_fu_612_p2 ^ 1'd1);

assign xor_ln4871_fu_668_p2 = (icmp_ln890_1188_fu_642_p2 ^ 1'd1);

assign xor_ln4925_fu_925_p2 = (icmp_ln890_1183_fu_919_p2 ^ 1'd1);

assign xor_ln4931_fu_975_p2 = (icmp_ln890_1185_fu_949_p2 ^ 1'd1);

assign xor_ln4958_fu_837_p2 = (arb_2_reg_261 ^ 1'd1);

assign xor_ln4969_fu_1166_p2 = (icmp_ln890_1176_fu_1160_p2 ^ 1'd1);

assign xor_ln4975_fu_1216_p2 = (icmp_ln890_1178_fu_1190_p2 ^ 1'd1);

assign zext_ln4853_1_fu_585_p1 = add_ln4853_fu_580_p2;

assign zext_ln4853_fu_576_p1 = c5_V_64_reg_284;

assign zext_ln4913_1_fu_892_p1 = add_ln4913_fu_887_p2;

assign zext_ln4913_fu_883_p1 = c5_V_reg_361;

always @ (posedge ap_clk) begin
    tmp_407_cast_reg_1421[3:0] <= 4'b0000;
    tmp_406_cast_reg_1512[3:0] <= 4'b0000;
end

endmodule //top_C_IO_L2_in_boundary_x0
