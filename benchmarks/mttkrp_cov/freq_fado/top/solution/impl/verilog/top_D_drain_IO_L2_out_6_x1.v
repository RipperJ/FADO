// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_D_drain_IO_L2_out_6_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_dout,
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n,
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_read,
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_din,
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n,
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_write,
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_dout,
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n,
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_read
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] fifo_D_drain_D_drain_IO_L2_out_7_x1212_dout;
input   fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n;
output   fifo_D_drain_D_drain_IO_L2_out_7_x1212_read;
output  [127:0] fifo_D_drain_D_drain_IO_L2_out_6_x1211_din;
input   fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n;
output   fifo_D_drain_D_drain_IO_L2_out_6_x1211_write;
input  [127:0] fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_dout;
input   fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n;
output   fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_D_drain_D_drain_IO_L2_out_7_x1212_read;
reg[127:0] fifo_D_drain_D_drain_IO_L2_out_6_x1211_din;
reg fifo_D_drain_D_drain_IO_L2_out_6_x1211_write;
reg fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n;
wire    ap_CS_fsm_state8;
reg    fifo_D_drain_D_drain_IO_L2_out_6_x1211_blk_n;
wire    ap_CS_fsm_state11;
reg    fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_blk_n;
wire   [2:0] add_ln691_fu_213_p2;
reg   [2:0] add_ln691_reg_352;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln691_403_fu_225_p2;
reg   [2:0] add_ln691_403_reg_360;
wire    ap_CS_fsm_state3;
wire   [5:0] add_i_i100_cast_fu_245_p2;
reg   [5:0] add_i_i100_cast_reg_368;
wire   [0:0] icmp_ln890_452_fu_231_p2;
wire   [0:0] icmp_ln25836_fu_268_p2;
reg   [0:0] icmp_ln25836_reg_379;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_fu_251_p3;
wire   [0:0] icmp_ln886_fu_263_p2;
wire   [2:0] add_ln691_405_fu_274_p2;
reg   [2:0] add_ln691_405_reg_383;
wire    ap_CS_fsm_state5;
wire   [2:0] add_ln691_404_fu_286_p2;
reg   [2:0] add_ln691_404_reg_391;
wire   [3:0] c3_3_fu_298_p2;
wire   [0:0] icmp_ln890_453_fu_292_p2;
wire   [0:0] icmp_ln890_454_fu_280_p2;
wire   [4:0] add_ln691_408_fu_304_p2;
reg   [4:0] add_ln691_408_reg_404;
wire    ap_CS_fsm_state6;
wire   [1:0] add_ln691_409_fu_316_p2;
reg   [1:0] add_ln691_409_reg_412;
wire    ap_CS_fsm_state7;
wire   [4:0] add_ln691_406_fu_328_p2;
reg   [4:0] add_ln691_406_reg_420;
wire    ap_CS_fsm_state9;
wire   [1:0] add_ln691_407_fu_340_p2;
reg   [1:0] add_ln691_407_reg_428;
wire    ap_CS_fsm_state10;
reg   [2:0] c0_V_reg_113;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_124;
wire   [0:0] icmp_ln890_fu_219_p2;
reg   [3:0] c3_reg_135;
reg   [2:0] c4_V_1_reg_147;
wire   [0:0] icmp_ln890_456_fu_310_p2;
reg   [2:0] c4_V_reg_158;
wire   [0:0] icmp_ln890_455_fu_334_p2;
reg   [4:0] c5_V_1_reg_169;
wire   [0:0] icmp_ln890_458_fu_322_p2;
reg   [1:0] c6_V_65_reg_180;
reg    ap_block_state8;
reg   [4:0] c5_V_reg_191;
wire   [0:0] icmp_ln890_457_fu_346_p2;
reg   [1:0] c6_V_reg_202;
reg    ap_block_state11;
wire   [5:0] p_shl_fu_237_p3;
wire   [5:0] zext_ln886_fu_259_p1;
reg   [10:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_219_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_113 <= 3'd0;
    end else if (((icmp_ln890_452_fu_231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c0_V_reg_113 <= add_ln691_reg_352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_219_p2 == 1'd0))) begin
        c1_V_reg_124 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln886_fu_263_p2 == 1'd1) | (tmp_fu_251_p3 == 1'd1)))) begin
        c1_V_reg_124 <= add_ln691_403_reg_360;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln25836_reg_379 == 1'd0) & (icmp_ln890_454_fu_280_p2 == 1'd1)) | ((icmp_ln25836_reg_379 == 1'd1) & (icmp_ln890_453_fu_292_p2 == 1'd1))))) begin
        c3_reg_135 <= c3_3_fu_298_p2;
    end else if (((icmp_ln890_452_fu_231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c3_reg_135 <= 4'd6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_263_p2 == 1'd0) & (tmp_fu_251_p3 == 1'd0) & (icmp_ln25836_fu_268_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_1_reg_147 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_456_fu_310_p2 == 1'd1))) begin
        c4_V_1_reg_147 <= add_ln691_405_reg_383;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_263_p2 == 1'd0) & (tmp_fu_251_p3 == 1'd0) & (icmp_ln25836_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_reg_158 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_455_fu_334_p2 == 1'd1))) begin
        c4_V_reg_158 <= add_ln691_404_reg_391;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25836_reg_379 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln890_454_fu_280_p2 == 1'd0))) begin
        c5_V_1_reg_169 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln890_458_fu_322_p2 == 1'd1))) begin
        c5_V_1_reg_169 <= add_ln691_408_reg_404;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25836_reg_379 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln890_453_fu_292_p2 == 1'd0))) begin
        c5_V_reg_191 <= 5'd0;
    end else if (((icmp_ln890_457_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        c5_V_reg_191 <= add_ln691_406_reg_420;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_456_fu_310_p2 == 1'd0))) begin
        c6_V_65_reg_180 <= 2'd0;
    end else if ((~((fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        c6_V_65_reg_180 <= add_ln691_409_reg_412;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_455_fu_334_p2 == 1'd0))) begin
        c6_V_reg_202 <= 2'd0;
    end else if ((~((fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        c6_V_reg_202 <= add_ln691_407_reg_428;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_452_fu_231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_i_i100_cast_reg_368[5 : 3] <= add_i_i100_cast_fu_245_p2[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_403_reg_360 <= add_ln691_403_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25836_reg_379 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln691_404_reg_391 <= add_ln691_404_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25836_reg_379 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln691_405_reg_383 <= add_ln691_405_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln691_406_reg_420 <= add_ln691_406_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln691_407_reg_428 <= add_ln691_407_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln691_408_reg_404 <= add_ln691_408_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln691_409_reg_412 <= add_ln691_409_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_352 <= add_ln691_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_263_p2 == 1'd0) & (tmp_fu_251_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        icmp_ln25836_reg_379 <= icmp_ln25836_fu_268_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_219_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_219_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_blk_n = fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_read = 1'b1;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8))) begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_blk_n = fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n;
    end else begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_din = fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_dout;
    end else if ((~((fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_din = fifo_D_drain_D_drain_IO_L2_out_7_x1212_dout;
    end else begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_din = 'bx;
    end
end

always @ (*) begin
    if (((~((fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_write = 1'b1;
    end else begin
        fifo_D_drain_D_drain_IO_L2_out_6_x1211_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n = fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n;
    end else begin
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_read = 1'b1;
    end else begin
        fifo_D_drain_D_drain_IO_L2_out_7_x1212_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_219_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln890_452_fu_231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln886_fu_263_p2 == 1'd1) | (tmp_fu_251_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln25836_reg_379 == 1'd0) & (icmp_ln890_454_fu_280_p2 == 1'd1)) | ((icmp_ln25836_reg_379 == 1'd1) & (icmp_ln890_453_fu_292_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln25836_reg_379 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln890_453_fu_292_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_456_fu_310_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln890_458_fu_322_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_455_fu_334_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln890_457_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i100_cast_fu_245_p2 = ($signed(6'd41) - $signed(p_shl_fu_237_p3));

assign add_ln691_403_fu_225_p2 = (c1_V_reg_124 + 3'd1);

assign add_ln691_404_fu_286_p2 = (c4_V_reg_158 + 3'd1);

assign add_ln691_405_fu_274_p2 = (c4_V_1_reg_147 + 3'd1);

assign add_ln691_406_fu_328_p2 = (c5_V_reg_191 + 5'd1);

assign add_ln691_407_fu_340_p2 = (c6_V_reg_202 + 2'd1);

assign add_ln691_408_fu_304_p2 = (c5_V_1_reg_169 + 5'd1);

assign add_ln691_409_fu_316_p2 = (c6_V_65_reg_180 + 2'd1);

assign add_ln691_fu_213_p2 = (c0_V_reg_113 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((fifo_D_drain_D_drain_IO_L1_out_6_0_x1197_empty_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((fifo_D_drain_D_drain_IO_L2_out_6_x1211_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L2_out_7_x1212_empty_n == 1'b0));
end

assign c3_3_fu_298_p2 = (c3_reg_135 + 4'd1);

assign icmp_ln25836_fu_268_p2 = ((c3_reg_135 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_263_p2 = ((zext_ln886_fu_259_p1 > add_i_i100_cast_reg_368) ? 1'b1 : 1'b0);

assign icmp_ln890_452_fu_231_p2 = ((c1_V_reg_124 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_453_fu_292_p2 = ((c4_V_reg_158 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln890_454_fu_280_p2 = ((c4_V_1_reg_147 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln890_455_fu_334_p2 = ((c5_V_reg_191 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_456_fu_310_p2 = ((c5_V_1_reg_169 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_457_fu_346_p2 = ((c6_V_reg_202 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_458_fu_322_p2 = ((c6_V_65_reg_180 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_219_p2 = ((c0_V_reg_113 == 3'd4) ? 1'b1 : 1'b0);

assign p_shl_fu_237_p3 = {{c1_V_reg_124}, {3'd0}};

assign tmp_fu_251_p3 = c3_reg_135[32'd3];

assign zext_ln886_fu_259_p1 = c3_reg_135;

always @ (posedge ap_clk) begin
    add_i_i100_cast_reg_368[2:0] <= 3'b001;
end

endmodule //top_D_drain_IO_L2_out_6_x1
