// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_IO_L2_in_1_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_C_IO_L2_in_1_x018_dout,
        fifo_C_C_IO_L2_in_1_x018_empty_n,
        fifo_C_C_IO_L2_in_1_x018_read,
        fifo_C_C_IO_L2_in_2_x019_din,
        fifo_C_C_IO_L2_in_2_x019_full_n,
        fifo_C_C_IO_L2_in_2_x019_write,
        fifo_C_PE_0_1_x0106_din,
        fifo_C_PE_0_1_x0106_full_n,
        fifo_C_PE_0_1_x0106_write
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_C_C_IO_L2_in_1_x018_dout;
input   fifo_C_C_IO_L2_in_1_x018_empty_n;
output   fifo_C_C_IO_L2_in_1_x018_read;
output  [511:0] fifo_C_C_IO_L2_in_2_x019_din;
input   fifo_C_C_IO_L2_in_2_x019_full_n;
output   fifo_C_C_IO_L2_in_2_x019_write;
output  [255:0] fifo_C_PE_0_1_x0106_din;
input   fifo_C_PE_0_1_x0106_full_n;
output   fifo_C_PE_0_1_x0106_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_C_IO_L2_in_1_x018_read;
reg fifo_C_C_IO_L2_in_2_x019_write;
reg[255:0] fifo_C_PE_0_1_x0106_din;
reg fifo_C_PE_0_1_x0106_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_C_IO_L2_in_1_x018_blk_n;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state32;
reg    fifo_C_C_IO_L2_in_2_x019_blk_n;
reg    fifo_C_PE_0_1_x0106_blk_n;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire   [4:0] add_ln890_297_fu_578_p2;
reg   [4:0] add_ln890_297_reg_1581;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_584_p2;
wire   [0:0] icmp_ln890237_fu_590_p2;
reg   [0:0] icmp_ln890237_reg_1590;
wire   [2:0] select_ln3307_fu_596_p3;
reg   [2:0] select_ln3307_reg_1595;
wire   [0:0] or_ln3307_fu_604_p2;
reg   [0:0] or_ln3307_reg_1600;
wire   [0:0] and_ln3307_fu_616_p2;
wire   [5:0] add_i_i780_cast_fu_630_p2;
reg   [5:0] add_i_i780_cast_reg_1608;
wire   [0:0] tmp_525_fu_636_p3;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln886_12_fu_648_p2;
wire   [0:0] icmp_ln3319_fu_653_p2;
reg   [0:0] icmp_ln3319_reg_1622;
wire   [3:0] add_ln691_1338_fu_659_p2;
reg   [3:0] add_ln691_1338_reg_1626;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln691_1336_fu_671_p2;
reg   [3:0] add_ln691_1336_reg_1634;
wire   [6:0] tmp_613_cast_fu_681_p3;
reg   [6:0] tmp_613_cast_reg_1639;
wire   [3:0] c3_54_fu_695_p2;
wire   [0:0] icmp_ln890_1399_fu_689_p2;
wire   [0:0] icmp_ln890_1400_fu_665_p2;
wire   [4:0] add_ln691_1339_fu_701_p2;
reg   [4:0] add_ln691_1339_reg_1652;
wire    ap_CS_fsm_state5;
wire   [4:0] add_ln691_1337_fu_713_p2;
reg   [4:0] add_ln691_1337_reg_1660;
wire    ap_CS_fsm_state7;
reg   [6:0] local_C_pong_V_addr_reg_1665;
wire   [16:0] add_ln3355_fu_739_p2;
reg   [16:0] add_ln3355_reg_1673;
wire    ap_CS_fsm_state9;
wire   [3:0] select_ln3362_fu_853_p3;
reg   [3:0] select_ln3362_reg_1681;
wire   [0:0] icmp_ln3355_fu_749_p2;
wire   [0:0] select_ln3362_1_fu_865_p3;
reg   [0:0] select_ln3362_1_reg_1687;
wire   [5:0] select_ln890_494_fu_873_p3;
reg   [5:0] select_ln890_494_reg_1692;
wire   [3:0] select_ln3362_2_fu_909_p3;
reg   [3:0] select_ln3362_2_reg_1697;
wire   [9:0] select_ln890_495_fu_923_p3;
reg   [9:0] select_ln890_495_reg_1702;
wire   [10:0] select_ln890_496_fu_937_p3;
reg   [10:0] select_ln890_496_reg_1707;
wire    ap_CS_fsm_state10;
wire   [255:0] select_ln3378_fu_968_p3;
reg   [255:0] select_ln3378_reg_1717;
wire    ap_CS_fsm_state11;
wire   [3:0] add_ln691_1330_fu_975_p2;
wire   [0:0] arb_fu_986_p2;
wire    ap_CS_fsm_state28;
wire   [2:0] add_ln691_1331_fu_991_p2;
wire   [0:0] tmp_524_fu_996_p3;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln886_fu_1008_p2;
wire   [0:0] icmp_ln3393_fu_1013_p2;
reg   [0:0] icmp_ln3393_reg_1745;
wire   [3:0] add_ln691_1334_fu_1019_p2;
reg   [3:0] add_ln691_1334_reg_1749;
wire    ap_CS_fsm_state30;
wire   [3:0] add_ln691_1332_fu_1031_p2;
reg   [3:0] add_ln691_1332_reg_1757;
wire   [6:0] tmp_608_cast_fu_1041_p3;
reg   [6:0] tmp_608_cast_reg_1762;
wire   [3:0] c3_53_fu_1055_p2;
wire   [0:0] icmp_ln890_1397_fu_1049_p2;
wire   [0:0] icmp_ln890_1398_fu_1025_p2;
wire   [4:0] add_ln691_1335_fu_1061_p2;
reg   [4:0] add_ln691_1335_reg_1775;
wire    ap_CS_fsm_state31;
wire   [4:0] add_ln691_1333_fu_1073_p2;
reg   [4:0] add_ln691_1333_reg_1783;
wire    ap_CS_fsm_state33;
reg   [6:0] local_C_ping_V_addr_27_reg_1788;
wire   [16:0] add_ln3429_fu_1099_p2;
reg   [16:0] add_ln3429_reg_1796;
wire    ap_CS_fsm_state35;
wire   [3:0] select_ln3436_fu_1213_p3;
reg   [3:0] select_ln3436_reg_1804;
wire   [0:0] icmp_ln3429_fu_1109_p2;
wire   [0:0] select_ln3436_1_fu_1225_p3;
reg   [0:0] select_ln3436_1_reg_1810;
wire   [5:0] select_ln890_491_fu_1233_p3;
reg   [5:0] select_ln890_491_reg_1815;
wire   [3:0] select_ln3436_2_fu_1269_p3;
reg   [3:0] select_ln3436_2_reg_1820;
wire   [9:0] select_ln890_492_fu_1283_p3;
reg   [9:0] select_ln890_492_reg_1825;
wire   [10:0] select_ln890_493_fu_1297_p3;
reg   [10:0] select_ln890_493_reg_1830;
wire    ap_CS_fsm_state36;
wire   [255:0] select_ln3452_fu_1328_p3;
reg   [255:0] select_ln3452_reg_1840;
wire    ap_CS_fsm_state37;
wire   [3:0] add_ln691_1328_fu_1335_p2;
wire   [16:0] add_ln3473_fu_1340_p2;
reg   [16:0] add_ln3473_reg_1850;
wire    ap_CS_fsm_state54;
wire   [3:0] select_ln3480_fu_1454_p3;
reg   [3:0] select_ln3480_reg_1858;
wire   [0:0] icmp_ln3473_fu_1350_p2;
wire   [0:0] select_ln3480_1_fu_1466_p3;
reg   [0:0] select_ln3480_1_reg_1864;
wire   [5:0] select_ln890_fu_1474_p3;
reg   [5:0] select_ln890_reg_1869;
wire   [3:0] select_ln3480_2_fu_1510_p3;
reg   [3:0] select_ln3480_2_reg_1874;
wire   [9:0] select_ln890_489_fu_1524_p3;
reg   [9:0] select_ln890_489_reg_1879;
wire   [10:0] select_ln890_490_fu_1538_p3;
reg   [10:0] select_ln890_490_reg_1884;
wire    ap_CS_fsm_state55;
wire   [255:0] select_ln3496_fu_1569_p3;
reg   [255:0] select_ln3496_reg_1894;
wire    ap_CS_fsm_state56;
wire   [3:0] add_ln691_1326_fu_1576_p2;
reg   [6:0] local_C_ping_V_address0;
reg    local_C_ping_V_ce0;
wire   [511:0] local_C_ping_V_q0;
reg    local_C_ping_V_ce1;
reg    local_C_ping_V_we1;
wire   [6:0] local_C_pong_V_address0;
reg    local_C_pong_V_ce0;
wire   [511:0] local_C_pong_V_q0;
reg    local_C_pong_V_ce1;
reg    local_C_pong_V_we1;
reg   [4:0] indvar_flatten111_reg_254;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_265;
reg   [0:0] intra_trans_en_reg_276;
reg   [0:0] arb_14_reg_289;
reg   [3:0] c3_52_reg_301;
reg   [3:0] c4_V_52_reg_313;
wire   [0:0] icmp_ln890_1410_fu_707_p2;
reg   [3:0] c4_V_51_reg_324;
wire   [0:0] icmp_ln890_1409_fu_733_p2;
reg   [4:0] c5_V_100_reg_335;
reg    ap_block_state6;
reg   [4:0] c5_V_99_reg_346;
reg   [16:0] indvar_flatten47_reg_357;
reg   [10:0] indvar_flatten19_reg_368;
reg   [9:0] indvar_flatten_reg_379;
reg   [5:0] c6_V_154_reg_390;
reg   [3:0] c7_V_92_reg_401;
reg   [3:0] c3_reg_412;
reg   [3:0] c4_V_50_reg_424;
wire   [0:0] icmp_ln890_1408_fu_1067_p2;
reg   [3:0] c4_V_reg_435;
wire   [0:0] icmp_ln890_1407_fu_1093_p2;
reg   [4:0] c5_V_98_reg_446;
reg    ap_block_state32;
reg   [4:0] c5_V_reg_457;
reg   [16:0] indvar_flatten103_reg_468;
reg   [10:0] indvar_flatten75_reg_479;
reg   [9:0] indvar_flatten55_reg_490;
reg   [5:0] c6_V_153_reg_501;
reg   [3:0] c7_V_91_reg_512;
reg   [16:0] indvar_flatten167_reg_523;
reg   [10:0] indvar_flatten139_reg_534;
reg   [9:0] indvar_flatten119_reg_545;
reg   [5:0] c6_V_reg_556;
reg   [3:0] c7_V_reg_567;
wire   [63:0] zext_ln3329_1_fu_728_p1;
wire   [63:0] tmp_34_fu_945_p4;
wire   [63:0] zext_ln3403_1_fu_1088_p1;
wire   [63:0] tmp_33_fu_1305_p4;
wire   [63:0] tmp_s_fu_1546_p4;
wire   [0:0] xor_ln3307_fu_610_p2;
wire   [5:0] p_shl_fu_622_p3;
wire   [5:0] zext_ln886_12_fu_644_p1;
wire   [2:0] trunc_ln3329_fu_677_p1;
wire   [6:0] zext_ln3329_fu_719_p1;
wire   [6:0] add_ln3329_fu_723_p2;
wire   [0:0] icmp_ln890_1404_fu_755_p2;
wire   [0:0] empty_fu_745_p1;
wire   [0:0] xor_ln3355_fu_761_p2;
wire   [0:0] icmp_ln890_1405_fu_773_p2;
wire   [0:0] icmp_ln890_1406_fu_785_p2;
wire   [0:0] and_ln3355_2_fu_791_p2;
wire   [0:0] or_ln3361_fu_797_p2;
wire   [0:0] xor_ln3361_fu_811_p2;
wire   [0:0] and_ln3355_fu_767_p2;
wire   [0:0] or_ln3361_1_fu_817_p2;
wire   [0:0] and_ln3355_1_fu_779_p2;
wire   [5:0] select_ln3361_fu_803_p3;
wire   [0:0] and_ln3361_1_fu_829_p2;
wire   [0:0] or_ln3362_fu_841_p2;
wire   [0:0] or_ln3362_1_fu_847_p2;
wire   [5:0] add_ln691_1329_fu_835_p2;
wire   [0:0] empty_2502_fu_861_p1;
wire   [0:0] and_ln3361_fu_823_p2;
wire   [3:0] tmp_529_fu_891_p4;
wire   [3:0] tmp_528_fu_881_p4;
wire   [3:0] select_ln3361_1_fu_901_p3;
wire   [9:0] add_ln890_295_fu_917_p2;
wire   [10:0] add_ln890_296_fu_931_p2;
wire   [255:0] data_split_V_1_117_fu_958_p4;
wire   [255:0] data_split_V_0_92_fu_954_p1;
wire   [0:0] xor_ln3462_fu_980_p2;
wire   [5:0] zext_ln886_fu_1004_p1;
wire   [2:0] trunc_ln3403_fu_1037_p1;
wire   [6:0] zext_ln3403_fu_1079_p1;
wire   [6:0] add_ln3403_fu_1083_p2;
wire   [0:0] icmp_ln890_1401_fu_1115_p2;
wire   [0:0] empty_2503_fu_1105_p1;
wire   [0:0] xor_ln3429_fu_1121_p2;
wire   [0:0] icmp_ln890_1402_fu_1133_p2;
wire   [0:0] icmp_ln890_1403_fu_1145_p2;
wire   [0:0] and_ln3429_2_fu_1151_p2;
wire   [0:0] or_ln3435_fu_1157_p2;
wire   [0:0] xor_ln3435_fu_1171_p2;
wire   [0:0] and_ln3429_fu_1127_p2;
wire   [0:0] or_ln3435_1_fu_1177_p2;
wire   [0:0] and_ln3429_1_fu_1139_p2;
wire   [5:0] select_ln3435_fu_1163_p3;
wire   [0:0] and_ln3435_1_fu_1189_p2;
wire   [0:0] or_ln3436_fu_1201_p2;
wire   [0:0] or_ln3436_1_fu_1207_p2;
wire   [5:0] add_ln691_1327_fu_1195_p2;
wire   [0:0] empty_2504_fu_1221_p1;
wire   [0:0] and_ln3435_fu_1183_p2;
wire   [3:0] tmp_527_fu_1251_p4;
wire   [3:0] tmp_526_fu_1241_p4;
wire   [3:0] select_ln3435_1_fu_1261_p3;
wire   [9:0] add_ln890_293_fu_1277_p2;
wire   [10:0] add_ln890_294_fu_1291_p2;
wire   [255:0] data_split_V_1_116_fu_1318_p4;
wire   [255:0] data_split_V_0_91_fu_1314_p1;
wire   [0:0] icmp_ln890_1394_fu_1356_p2;
wire   [0:0] empty_2505_fu_1346_p1;
wire   [0:0] xor_ln3473_fu_1362_p2;
wire   [0:0] icmp_ln890_1395_fu_1374_p2;
wire   [0:0] icmp_ln890_1396_fu_1386_p2;
wire   [0:0] and_ln3473_2_fu_1392_p2;
wire   [0:0] or_ln3479_fu_1398_p2;
wire   [0:0] xor_ln3479_fu_1412_p2;
wire   [0:0] and_ln3473_fu_1368_p2;
wire   [0:0] or_ln3479_1_fu_1418_p2;
wire   [0:0] and_ln3473_1_fu_1380_p2;
wire   [5:0] select_ln3479_fu_1404_p3;
wire   [0:0] and_ln3479_1_fu_1430_p2;
wire   [0:0] or_ln3480_fu_1442_p2;
wire   [0:0] or_ln3480_1_fu_1448_p2;
wire   [5:0] add_ln691_fu_1436_p2;
wire   [0:0] empty_2506_fu_1462_p1;
wire   [0:0] and_ln3479_fu_1424_p2;
wire   [3:0] tmp_523_fu_1492_p4;
wire   [3:0] tmp_fu_1482_p4;
wire   [3:0] select_ln3479_1_fu_1502_p3;
wire   [9:0] add_ln890_fu_1518_p2;
wire   [10:0] add_ln890_292_fu_1532_p2;
wire   [255:0] data_split_V_1_fu_1559_p4;
wire   [255:0] data_split_V_0_fu_1555_p1;
wire    ap_CS_fsm_state73;
reg   [72:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 73'd1;
end

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_V_address0),
    .ce0(local_C_ping_V_ce0),
    .q0(local_C_ping_V_q0),
    .address1(local_C_ping_V_addr_27_reg_1788),
    .ce1(local_C_ping_V_ce1),
    .we1(local_C_ping_V_we1),
    .d1(fifo_C_C_IO_L2_in_1_x018_dout)
);

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_V_address0),
    .ce0(local_C_pong_V_ce0),
    .q0(local_C_pong_V_q0),
    .address1(local_C_pong_V_addr_reg_1665),
    .ce1(local_C_pong_V_ce1),
    .we1(local_C_pong_V_we1),
    .d1(fifo_C_C_IO_L2_in_1_x018_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        arb_14_reg_289 <= arb_fu_986_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_14_reg_289 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c1_V_reg_265 <= add_ln691_1331_fu_991_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_265 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln3307_fu_616_p2) & (icmp_ln890_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_52_reg_301 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1400_fu_665_p2 == 1'd1) & (icmp_ln3319_reg_1622 == 1'd0)) | ((icmp_ln890_1399_fu_689_p2 == 1'd1) & (icmp_ln3319_reg_1622 == 1'd1))))) begin
        c3_52_reg_301 <= c3_54_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln3307_fu_616_p2) & (icmp_ln890_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c3_reg_412 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((icmp_ln890_1398_fu_1025_p2 == 1'd1) & (icmp_ln3393_reg_1745 == 1'd0)) | ((icmp_ln890_1397_fu_1049_p2 == 1'd1) & (icmp_ln3393_reg_1745 == 1'd1))))) begin
        c3_reg_412 <= c3_53_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3393_fu_1013_p2 == 1'd0) & (icmp_ln886_fu_1008_p2 == 1'd0) & (tmp_524_fu_996_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        c4_V_50_reg_424 <= 4'd0;
    end else if (((icmp_ln890_1408_fu_1067_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        c4_V_50_reg_424 <= add_ln691_1334_reg_1749;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3319_fu_653_p2 == 1'd1) & (icmp_ln886_12_fu_648_p2 == 1'd0) & (tmp_525_fu_636_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c4_V_51_reg_324 <= 4'd0;
    end else if (((icmp_ln890_1409_fu_733_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        c4_V_51_reg_324 <= add_ln691_1336_reg_1634;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3319_fu_653_p2 == 1'd0) & (icmp_ln886_12_fu_648_p2 == 1'd0) & (tmp_525_fu_636_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c4_V_52_reg_313 <= 4'd0;
    end else if (((icmp_ln890_1410_fu_707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c4_V_52_reg_313 <= add_ln691_1338_reg_1626;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3393_fu_1013_p2 == 1'd1) & (icmp_ln886_fu_1008_p2 == 1'd0) & (tmp_524_fu_996_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        c4_V_reg_435 <= 4'd0;
    end else if (((icmp_ln890_1407_fu_1093_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        c4_V_reg_435 <= add_ln691_1332_reg_1757;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1400_fu_665_p2 == 1'd0) & (icmp_ln3319_reg_1622 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_100_reg_335 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        c5_V_100_reg_335 <= add_ln691_1339_reg_1652;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1398_fu_1025_p2 == 1'd0) & (icmp_ln3393_reg_1745 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        c5_V_98_reg_446 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
        c5_V_98_reg_446 <= add_ln691_1335_reg_1775;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1399_fu_689_p2 == 1'd0) & (icmp_ln3319_reg_1622 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_99_reg_346 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        c5_V_99_reg_346 <= add_ln691_1337_reg_1660;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1397_fu_1049_p2 == 1'd0) & (icmp_ln3393_reg_1745 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        c5_V_reg_457 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        c5_V_reg_457 <= add_ln691_1333_reg_1783;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        c6_V_153_reg_501 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        c6_V_153_reg_501 <= select_ln890_491_reg_1815;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        c6_V_154_reg_390 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        c6_V_154_reg_390 <= select_ln890_494_reg_1692;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c6_V_reg_556 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        c6_V_reg_556 <= select_ln890_reg_1869;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        c7_V_91_reg_512 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        c7_V_91_reg_512 <= add_ln691_1328_fu_1335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        c7_V_92_reg_401 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        c7_V_92_reg_401 <= add_ln691_1330_fu_975_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c7_V_reg_567 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        c7_V_reg_567 <= add_ln691_1326_fu_1576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        indvar_flatten103_reg_468 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten103_reg_468 <= add_ln3429_reg_1796;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        indvar_flatten111_reg_254 <= add_ln890_297_reg_1581;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten111_reg_254 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten119_reg_545 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten119_reg_545 <= select_ln890_489_reg_1879;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten139_reg_534 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten139_reg_534 <= select_ln890_490_reg_1884;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten167_reg_523 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten167_reg_523 <= add_ln3473_reg_1850;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        indvar_flatten19_reg_368 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten19_reg_368 <= select_ln890_496_reg_1707;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        indvar_flatten47_reg_357 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten47_reg_357 <= add_ln3355_reg_1673;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        indvar_flatten55_reg_490 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten55_reg_490 <= select_ln890_492_reg_1825;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        indvar_flatten75_reg_479 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten75_reg_479 <= select_ln890_493_reg_1830;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
        indvar_flatten_reg_379 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
        indvar_flatten_reg_379 <= select_ln890_495_reg_1702;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        intra_trans_en_reg_276 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_276 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_i_i780_cast_reg_1608[5 : 3] <= add_i_i780_cast_fu_630_p2[5 : 3];
        icmp_ln890237_reg_1590 <= icmp_ln890237_fu_590_p2;
        or_ln3307_reg_1600 <= or_ln3307_fu_604_p2;
        select_ln3307_reg_1595 <= select_ln3307_fu_596_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln3355_reg_1673 <= add_ln3355_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln3429_reg_1796 <= add_ln3429_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln3473_reg_1850 <= add_ln3473_fu_1340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3393_reg_1745 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        add_ln691_1332_reg_1757 <= add_ln691_1332_fu_1031_p2;
        tmp_608_cast_reg_1762[6 : 4] <= tmp_608_cast_fu_1041_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln691_1333_reg_1783 <= add_ln691_1333_fu_1073_p2;
        local_C_ping_V_addr_27_reg_1788 <= zext_ln3403_1_fu_1088_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3393_reg_1745 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        add_ln691_1334_reg_1749 <= add_ln691_1334_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln691_1335_reg_1775 <= add_ln691_1335_fu_1061_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3319_reg_1622 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln691_1336_reg_1634 <= add_ln691_1336_fu_671_p2;
        tmp_613_cast_reg_1639[6 : 4] <= tmp_613_cast_fu_681_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln691_1337_reg_1660 <= add_ln691_1337_fu_713_p2;
        local_C_pong_V_addr_reg_1665 <= zext_ln3329_1_fu_728_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3319_reg_1622 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln691_1338_reg_1626 <= add_ln691_1338_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1339_reg_1652 <= add_ln691_1339_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_297_reg_1581 <= add_ln890_297_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_12_fu_648_p2 == 1'd0) & (tmp_525_fu_636_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln3319_reg_1622 <= icmp_ln3319_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_1008_p2 == 1'd0) & (tmp_524_fu_996_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        icmp_ln3393_reg_1745 <= icmp_ln3393_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3355_fu_749_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        select_ln3362_1_reg_1687 <= select_ln3362_1_fu_865_p3;
        select_ln3362_2_reg_1697 <= select_ln3362_2_fu_909_p3;
        select_ln3362_reg_1681 <= select_ln3362_fu_853_p3;
        select_ln890_494_reg_1692 <= select_ln890_494_fu_873_p3;
        select_ln890_495_reg_1702 <= select_ln890_495_fu_923_p3;
        select_ln890_496_reg_1707 <= select_ln890_496_fu_937_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        select_ln3378_reg_1717 <= select_ln3378_fu_968_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3429_fu_1109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        select_ln3436_1_reg_1810 <= select_ln3436_1_fu_1225_p3;
        select_ln3436_2_reg_1820 <= select_ln3436_2_fu_1269_p3;
        select_ln3436_reg_1804 <= select_ln3436_fu_1213_p3;
        select_ln890_491_reg_1815 <= select_ln890_491_fu_1233_p3;
        select_ln890_492_reg_1825 <= select_ln890_492_fu_1283_p3;
        select_ln890_493_reg_1830 <= select_ln890_493_fu_1297_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        select_ln3452_reg_1840 <= select_ln3452_fu_1328_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3473_fu_1350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        select_ln3480_1_reg_1864 <= select_ln3480_1_fu_1466_p3;
        select_ln3480_2_reg_1874 <= select_ln3480_2_fu_1510_p3;
        select_ln3480_reg_1858 <= select_ln3480_fu_1454_p3;
        select_ln890_489_reg_1879 <= select_ln890_489_fu_1524_p3;
        select_ln890_490_reg_1884 <= select_ln890_490_fu_1538_p3;
        select_ln890_reg_1869 <= select_ln890_fu_1474_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        select_ln3496_reg_1894 <= select_ln3496_fu_1569_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        fifo_C_C_IO_L2_in_1_x018_blk_n = fifo_C_C_IO_L2_in_1_x018_empty_n;
    end else begin
        fifo_C_C_IO_L2_in_1_x018_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | (~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_1_x018_read = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_1_x018_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        fifo_C_C_IO_L2_in_2_x019_blk_n = fifo_C_C_IO_L2_in_2_x019_full_n;
    end else begin
        fifo_C_C_IO_L2_in_2_x019_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_2_x019_write = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_2_x019_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        fifo_C_PE_0_1_x0106_blk_n = fifo_C_PE_0_1_x0106_full_n;
    end else begin
        fifo_C_PE_0_1_x0106_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)))) begin
        fifo_C_PE_0_1_x0106_din = select_ln3496_reg_1894;
    end else if ((((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)))) begin
        fifo_C_PE_0_1_x0106_din = select_ln3452_reg_1840;
    end else if ((((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)))) begin
        fifo_C_PE_0_1_x0106_din = select_ln3378_reg_1717;
    end else begin
        fifo_C_PE_0_1_x0106_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_1_x0106_full_n == 1'b1)))) begin
        fifo_C_PE_0_1_x0106_write = 1'b1;
    end else begin
        fifo_C_PE_0_1_x0106_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        local_C_ping_V_address0 = tmp_s_fu_1546_p4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_C_ping_V_address0 = tmp_34_fu_945_p4;
    end else begin
        local_C_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state10))) begin
        local_C_ping_V_ce0 = 1'b1;
    end else begin
        local_C_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        local_C_ping_V_ce1 = 1'b1;
    end else begin
        local_C_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        local_C_ping_V_we1 = 1'b1;
    end else begin
        local_C_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        local_C_pong_V_ce0 = 1'b1;
    end else begin
        local_C_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_C_pong_V_ce1 = 1'b1;
    end else begin
        local_C_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_C_pong_V_we1 = 1'b1;
    end else begin
        local_C_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else if (((1'd1 == and_ln3307_fu_616_p2) & (icmp_ln890_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((tmp_525_fu_636_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd0)) | ((icmp_ln886_12_fu_648_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1400_fu_665_p2 == 1'd1) & (icmp_ln3319_reg_1622 == 1'd0)) | ((icmp_ln890_1399_fu_689_p2 == 1'd1) & (icmp_ln3319_reg_1622 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln890_1399_fu_689_p2 == 1'd0) & (icmp_ln3319_reg_1622 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1410_fu_707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln890_1409_fu_733_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln3355_fu_749_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd1)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((1'b1 == ap_CS_fsm_state29) & (((tmp_524_fu_996_p3 == 1'd1) & (or_ln3307_reg_1600 == 1'd0)) | ((icmp_ln886_fu_1008_p2 == 1'd1) & (or_ln3307_reg_1600 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (((icmp_ln890_1398_fu_1025_p2 == 1'd1) & (icmp_ln3393_reg_1745 == 1'd0)) | ((icmp_ln890_1397_fu_1049_p2 == 1'd1) & (icmp_ln3393_reg_1745 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((icmp_ln890_1397_fu_1049_p2 == 1'd0) & (icmp_ln3393_reg_1745 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln890_1408_fu_1067_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln890_1407_fu_1093_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln3429_fu_1109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln3473_fu_1350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((1'b1 == ap_CS_fsm_state63) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (fifo_C_PE_0_1_x0106_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i780_cast_fu_630_p2 = ($signed(6'd41) - $signed(p_shl_fu_622_p3));

assign add_ln3329_fu_723_p2 = (tmp_613_cast_reg_1639 + zext_ln3329_fu_719_p1);

assign add_ln3355_fu_739_p2 = (indvar_flatten47_reg_357 + 17'd1);

assign add_ln3403_fu_1083_p2 = (tmp_608_cast_reg_1762 + zext_ln3403_fu_1079_p1);

assign add_ln3429_fu_1099_p2 = (indvar_flatten103_reg_468 + 17'd1);

assign add_ln3473_fu_1340_p2 = (indvar_flatten167_reg_523 + 17'd1);

assign add_ln691_1326_fu_1576_p2 = (select_ln3480_reg_1858 + 4'd1);

assign add_ln691_1327_fu_1195_p2 = (select_ln3435_fu_1163_p3 + 6'd1);

assign add_ln691_1328_fu_1335_p2 = (select_ln3436_reg_1804 + 4'd1);

assign add_ln691_1329_fu_835_p2 = (select_ln3361_fu_803_p3 + 6'd1);

assign add_ln691_1330_fu_975_p2 = (select_ln3362_reg_1681 + 4'd1);

assign add_ln691_1331_fu_991_p2 = (select_ln3307_reg_1595 + 3'd1);

assign add_ln691_1332_fu_1031_p2 = (c4_V_reg_435 + 4'd1);

assign add_ln691_1333_fu_1073_p2 = (c5_V_reg_457 + 5'd1);

assign add_ln691_1334_fu_1019_p2 = (c4_V_50_reg_424 + 4'd1);

assign add_ln691_1335_fu_1061_p2 = (c5_V_98_reg_446 + 5'd1);

assign add_ln691_1336_fu_671_p2 = (c4_V_51_reg_324 + 4'd1);

assign add_ln691_1337_fu_713_p2 = (c5_V_99_reg_346 + 5'd1);

assign add_ln691_1338_fu_659_p2 = (c4_V_52_reg_313 + 4'd1);

assign add_ln691_1339_fu_701_p2 = (c5_V_100_reg_335 + 5'd1);

assign add_ln691_fu_1436_p2 = (select_ln3479_fu_1404_p3 + 6'd1);

assign add_ln890_292_fu_1532_p2 = (indvar_flatten139_reg_534 + 11'd1);

assign add_ln890_293_fu_1277_p2 = (indvar_flatten55_reg_490 + 10'd1);

assign add_ln890_294_fu_1291_p2 = (indvar_flatten75_reg_479 + 11'd1);

assign add_ln890_295_fu_917_p2 = (indvar_flatten_reg_379 + 10'd1);

assign add_ln890_296_fu_931_p2 = (indvar_flatten19_reg_368 + 11'd1);

assign add_ln890_297_fu_578_p2 = (indvar_flatten111_reg_254 + 5'd1);

assign add_ln890_fu_1518_p2 = (indvar_flatten119_reg_545 + 10'd1);

assign and_ln3307_fu_616_p2 = (xor_ln3307_fu_610_p2 & arb_14_reg_289);

assign and_ln3355_1_fu_779_p2 = (xor_ln3355_fu_761_p2 & icmp_ln890_1405_fu_773_p2);

assign and_ln3355_2_fu_791_p2 = (xor_ln3355_fu_761_p2 & icmp_ln890_1406_fu_785_p2);

assign and_ln3355_fu_767_p2 = (xor_ln3355_fu_761_p2 & empty_fu_745_p1);

assign and_ln3361_1_fu_829_p2 = (or_ln3361_1_fu_817_p2 & and_ln3355_1_fu_779_p2);

assign and_ln3361_fu_823_p2 = (or_ln3361_1_fu_817_p2 & and_ln3355_fu_767_p2);

assign and_ln3429_1_fu_1139_p2 = (xor_ln3429_fu_1121_p2 & icmp_ln890_1402_fu_1133_p2);

assign and_ln3429_2_fu_1151_p2 = (xor_ln3429_fu_1121_p2 & icmp_ln890_1403_fu_1145_p2);

assign and_ln3429_fu_1127_p2 = (xor_ln3429_fu_1121_p2 & empty_2503_fu_1105_p1);

assign and_ln3435_1_fu_1189_p2 = (or_ln3435_1_fu_1177_p2 & and_ln3429_1_fu_1139_p2);

assign and_ln3435_fu_1183_p2 = (or_ln3435_1_fu_1177_p2 & and_ln3429_fu_1127_p2);

assign and_ln3473_1_fu_1380_p2 = (xor_ln3473_fu_1362_p2 & icmp_ln890_1395_fu_1374_p2);

assign and_ln3473_2_fu_1392_p2 = (xor_ln3473_fu_1362_p2 & icmp_ln890_1396_fu_1386_p2);

assign and_ln3473_fu_1368_p2 = (xor_ln3473_fu_1362_p2 & empty_2505_fu_1346_p1);

assign and_ln3479_1_fu_1430_p2 = (or_ln3479_1_fu_1418_p2 & and_ln3473_1_fu_1380_p2);

assign and_ln3479_fu_1424_p2 = (or_ln3479_1_fu_1418_p2 & and_ln3473_fu_1368_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state32 = ((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((fifo_C_C_IO_L2_in_1_x018_empty_n == 1'b0) | (fifo_C_C_IO_L2_in_2_x019_full_n == 1'b0));
end

assign arb_fu_986_p2 = (xor_ln3462_fu_980_p2 | icmp_ln890237_reg_1590);

assign c3_53_fu_1055_p2 = (c3_reg_412 + 4'd1);

assign c3_54_fu_695_p2 = (c3_52_reg_301 + 4'd1);

assign data_split_V_0_91_fu_1314_p1 = local_C_pong_V_q0[255:0];

assign data_split_V_0_92_fu_954_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_0_fu_1555_p1 = local_C_ping_V_q0[255:0];

assign data_split_V_1_116_fu_1318_p4 = {{local_C_pong_V_q0[511:256]}};

assign data_split_V_1_117_fu_958_p4 = {{local_C_ping_V_q0[511:256]}};

assign data_split_V_1_fu_1559_p4 = {{local_C_ping_V_q0[511:256]}};

assign empty_2502_fu_861_p1 = add_ln691_1329_fu_835_p2[0:0];

assign empty_2503_fu_1105_p1 = c6_V_153_reg_501[0:0];

assign empty_2504_fu_1221_p1 = add_ln691_1327_fu_1195_p2[0:0];

assign empty_2505_fu_1346_p1 = c6_V_reg_556[0:0];

assign empty_2506_fu_1462_p1 = add_ln691_fu_1436_p2[0:0];

assign empty_fu_745_p1 = c6_V_154_reg_390[0:0];

assign fifo_C_C_IO_L2_in_2_x019_din = fifo_C_C_IO_L2_in_1_x018_dout;

assign icmp_ln3319_fu_653_p2 = ((c3_52_reg_301 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln3355_fu_749_p2 = ((indvar_flatten47_reg_357 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln3393_fu_1013_p2 = ((c3_reg_412 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln3429_fu_1109_p2 = ((indvar_flatten103_reg_468 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln3473_fu_1350_p2 = ((indvar_flatten167_reg_523 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln886_12_fu_648_p2 = ((zext_ln886_12_fu_644_p1 > add_i_i780_cast_reg_1608) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1008_p2 = ((zext_ln886_fu_1004_p1 > add_i_i780_cast_reg_1608) ? 1'b1 : 1'b0);

assign icmp_ln890237_fu_590_p2 = ((c1_V_reg_265 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1394_fu_1356_p2 = ((indvar_flatten139_reg_534 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1395_fu_1374_p2 = ((c7_V_reg_567 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1396_fu_1386_p2 = ((indvar_flatten119_reg_545 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1397_fu_1049_p2 = ((c4_V_reg_435 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1398_fu_1025_p2 = ((c4_V_50_reg_424 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1399_fu_689_p2 = ((c4_V_51_reg_324 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1400_fu_665_p2 = ((c4_V_52_reg_313 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1401_fu_1115_p2 = ((indvar_flatten75_reg_479 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1402_fu_1133_p2 = ((c7_V_91_reg_512 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1403_fu_1145_p2 = ((indvar_flatten55_reg_490 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1404_fu_755_p2 = ((indvar_flatten19_reg_368 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1405_fu_773_p2 = ((c7_V_92_reg_401 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1406_fu_785_p2 = ((indvar_flatten_reg_379 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1407_fu_1093_p2 = ((c5_V_reg_457 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1408_fu_1067_p2 = ((c5_V_98_reg_446 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1409_fu_733_p2 = ((c5_V_99_reg_346 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1410_fu_707_p2 = ((c5_V_100_reg_335 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_584_p2 = ((indvar_flatten111_reg_254 == 5'd24) ? 1'b1 : 1'b0);

assign local_C_pong_V_address0 = tmp_33_fu_1305_p4;

assign or_ln3307_fu_604_p2 = (intra_trans_en_reg_276 | icmp_ln890237_fu_590_p2);

assign or_ln3361_1_fu_817_p2 = (xor_ln3361_fu_811_p2 | icmp_ln890_1404_fu_755_p2);

assign or_ln3361_fu_797_p2 = (icmp_ln890_1404_fu_755_p2 | and_ln3355_2_fu_791_p2);

assign or_ln3362_1_fu_847_p2 = (or_ln3362_fu_841_p2 | icmp_ln890_1404_fu_755_p2);

assign or_ln3362_fu_841_p2 = (and_ln3361_1_fu_829_p2 | and_ln3355_2_fu_791_p2);

assign or_ln3435_1_fu_1177_p2 = (xor_ln3435_fu_1171_p2 | icmp_ln890_1401_fu_1115_p2);

assign or_ln3435_fu_1157_p2 = (icmp_ln890_1401_fu_1115_p2 | and_ln3429_2_fu_1151_p2);

assign or_ln3436_1_fu_1207_p2 = (or_ln3436_fu_1201_p2 | icmp_ln890_1401_fu_1115_p2);

assign or_ln3436_fu_1201_p2 = (and_ln3435_1_fu_1189_p2 | and_ln3429_2_fu_1151_p2);

assign or_ln3479_1_fu_1418_p2 = (xor_ln3479_fu_1412_p2 | icmp_ln890_1394_fu_1356_p2);

assign or_ln3479_fu_1398_p2 = (icmp_ln890_1394_fu_1356_p2 | and_ln3473_2_fu_1392_p2);

assign or_ln3480_1_fu_1448_p2 = (or_ln3480_fu_1442_p2 | icmp_ln890_1394_fu_1356_p2);

assign or_ln3480_fu_1442_p2 = (and_ln3479_1_fu_1430_p2 | and_ln3473_2_fu_1392_p2);

assign p_shl_fu_622_p3 = {{select_ln3307_fu_596_p3}, {3'd0}};

assign select_ln3307_fu_596_p3 = ((icmp_ln890237_fu_590_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_265);

assign select_ln3361_1_fu_901_p3 = ((or_ln3361_fu_797_p2[0:0] == 1'b1) ? 4'd0 : tmp_529_fu_891_p4);

assign select_ln3361_fu_803_p3 = ((or_ln3361_fu_797_p2[0:0] == 1'b1) ? 6'd0 : c6_V_154_reg_390);

assign select_ln3362_1_fu_865_p3 = ((and_ln3361_1_fu_829_p2[0:0] == 1'b1) ? empty_2502_fu_861_p1 : and_ln3361_fu_823_p2);

assign select_ln3362_2_fu_909_p3 = ((and_ln3361_1_fu_829_p2[0:0] == 1'b1) ? tmp_528_fu_881_p4 : select_ln3361_1_fu_901_p3);

assign select_ln3362_fu_853_p3 = ((or_ln3362_1_fu_847_p2[0:0] == 1'b1) ? 4'd0 : c7_V_92_reg_401);

assign select_ln3378_fu_968_p3 = ((select_ln3362_1_reg_1687[0:0] == 1'b1) ? data_split_V_1_117_fu_958_p4 : data_split_V_0_92_fu_954_p1);

assign select_ln3435_1_fu_1261_p3 = ((or_ln3435_fu_1157_p2[0:0] == 1'b1) ? 4'd0 : tmp_527_fu_1251_p4);

assign select_ln3435_fu_1163_p3 = ((or_ln3435_fu_1157_p2[0:0] == 1'b1) ? 6'd0 : c6_V_153_reg_501);

assign select_ln3436_1_fu_1225_p3 = ((and_ln3435_1_fu_1189_p2[0:0] == 1'b1) ? empty_2504_fu_1221_p1 : and_ln3435_fu_1183_p2);

assign select_ln3436_2_fu_1269_p3 = ((and_ln3435_1_fu_1189_p2[0:0] == 1'b1) ? tmp_526_fu_1241_p4 : select_ln3435_1_fu_1261_p3);

assign select_ln3436_fu_1213_p3 = ((or_ln3436_1_fu_1207_p2[0:0] == 1'b1) ? 4'd0 : c7_V_91_reg_512);

assign select_ln3452_fu_1328_p3 = ((select_ln3436_1_reg_1810[0:0] == 1'b1) ? data_split_V_1_116_fu_1318_p4 : data_split_V_0_91_fu_1314_p1);

assign select_ln3479_1_fu_1502_p3 = ((or_ln3479_fu_1398_p2[0:0] == 1'b1) ? 4'd0 : tmp_523_fu_1492_p4);

assign select_ln3479_fu_1404_p3 = ((or_ln3479_fu_1398_p2[0:0] == 1'b1) ? 6'd0 : c6_V_reg_556);

assign select_ln3480_1_fu_1466_p3 = ((and_ln3479_1_fu_1430_p2[0:0] == 1'b1) ? empty_2506_fu_1462_p1 : and_ln3479_fu_1424_p2);

assign select_ln3480_2_fu_1510_p3 = ((and_ln3479_1_fu_1430_p2[0:0] == 1'b1) ? tmp_fu_1482_p4 : select_ln3479_1_fu_1502_p3);

assign select_ln3480_fu_1454_p3 = ((or_ln3480_1_fu_1448_p2[0:0] == 1'b1) ? 4'd0 : c7_V_reg_567);

assign select_ln3496_fu_1569_p3 = ((select_ln3480_1_reg_1864[0:0] == 1'b1) ? data_split_V_1_fu_1559_p4 : data_split_V_0_fu_1555_p1);

assign select_ln890_489_fu_1524_p3 = ((or_ln3479_fu_1398_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_fu_1518_p2);

assign select_ln890_490_fu_1538_p3 = ((icmp_ln890_1394_fu_1356_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_292_fu_1532_p2);

assign select_ln890_491_fu_1233_p3 = ((and_ln3435_1_fu_1189_p2[0:0] == 1'b1) ? add_ln691_1327_fu_1195_p2 : select_ln3435_fu_1163_p3);

assign select_ln890_492_fu_1283_p3 = ((or_ln3435_fu_1157_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_293_fu_1277_p2);

assign select_ln890_493_fu_1297_p3 = ((icmp_ln890_1401_fu_1115_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_294_fu_1291_p2);

assign select_ln890_494_fu_873_p3 = ((and_ln3361_1_fu_829_p2[0:0] == 1'b1) ? add_ln691_1329_fu_835_p2 : select_ln3361_fu_803_p3);

assign select_ln890_495_fu_923_p3 = ((or_ln3361_fu_797_p2[0:0] == 1'b1) ? 10'd1 : add_ln890_295_fu_917_p2);

assign select_ln890_496_fu_937_p3 = ((icmp_ln890_1404_fu_755_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_296_fu_931_p2);

assign select_ln890_fu_1474_p3 = ((and_ln3479_1_fu_1430_p2[0:0] == 1'b1) ? add_ln691_fu_1436_p2 : select_ln3479_fu_1404_p3);

assign tmp_33_fu_1305_p4 = {{{{56'd0}, {select_ln3436_reg_1804}}}, {select_ln3436_2_reg_1820}};

assign tmp_34_fu_945_p4 = {{{{56'd0}, {select_ln3362_reg_1681}}}, {select_ln3362_2_reg_1697}};

assign tmp_523_fu_1492_p4 = {{c6_V_reg_556[4:1]}};

assign tmp_524_fu_996_p3 = c3_reg_412[32'd3];

assign tmp_525_fu_636_p3 = c3_52_reg_301[32'd3];

assign tmp_526_fu_1241_p4 = {{add_ln691_1327_fu_1195_p2[4:1]}};

assign tmp_527_fu_1251_p4 = {{c6_V_153_reg_501[4:1]}};

assign tmp_528_fu_881_p4 = {{add_ln691_1329_fu_835_p2[4:1]}};

assign tmp_529_fu_891_p4 = {{c6_V_154_reg_390[4:1]}};

assign tmp_608_cast_fu_1041_p3 = {{trunc_ln3403_fu_1037_p1}, {4'd0}};

assign tmp_613_cast_fu_681_p3 = {{trunc_ln3329_fu_677_p1}, {4'd0}};

assign tmp_fu_1482_p4 = {{add_ln691_fu_1436_p2[4:1]}};

assign tmp_s_fu_1546_p4 = {{{{56'd0}, {select_ln3480_reg_1858}}}, {select_ln3480_2_reg_1874}};

assign trunc_ln3329_fu_677_p1 = c4_V_51_reg_324[2:0];

assign trunc_ln3403_fu_1037_p1 = c4_V_reg_435[2:0];

assign xor_ln3307_fu_610_p2 = (icmp_ln890237_fu_590_p2 ^ 1'd1);

assign xor_ln3355_fu_761_p2 = (icmp_ln890_1404_fu_755_p2 ^ 1'd1);

assign xor_ln3361_fu_811_p2 = (icmp_ln890_1406_fu_785_p2 ^ 1'd1);

assign xor_ln3429_fu_1121_p2 = (icmp_ln890_1401_fu_1115_p2 ^ 1'd1);

assign xor_ln3435_fu_1171_p2 = (icmp_ln890_1403_fu_1145_p2 ^ 1'd1);

assign xor_ln3462_fu_980_p2 = (arb_14_reg_289 ^ 1'd1);

assign xor_ln3473_fu_1362_p2 = (icmp_ln890_1394_fu_1356_p2 ^ 1'd1);

assign xor_ln3479_fu_1412_p2 = (icmp_ln890_1396_fu_1386_p2 ^ 1'd1);

assign zext_ln3329_1_fu_728_p1 = add_ln3329_fu_723_p2;

assign zext_ln3329_fu_719_p1 = c5_V_99_reg_346;

assign zext_ln3403_1_fu_1088_p1 = add_ln3403_fu_1083_p2;

assign zext_ln3403_fu_1079_p1 = c5_V_reg_457;

assign zext_ln886_12_fu_644_p1 = c3_52_reg_301;

assign zext_ln886_fu_1004_p1 = c3_reg_412;

always @ (posedge ap_clk) begin
    add_i_i780_cast_reg_1608[2:0] <= 3'b001;
    tmp_613_cast_reg_1639[3:0] <= 4'b0000;
    tmp_608_cast_reg_1762[3:0] <= 4'b0000;
end

endmodule //top_C_IO_L2_in_1_x0
