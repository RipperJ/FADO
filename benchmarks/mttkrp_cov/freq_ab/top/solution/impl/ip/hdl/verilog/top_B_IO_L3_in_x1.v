// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_B_IO_L3_in_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_B_in_dout,
        fifo_B_in_empty_n,
        fifo_B_in_read,
        fifo_B_local_out_din,
        fifo_B_local_out_full_n,
        fifo_B_local_out_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_B_in_dout;
input   fifo_B_in_empty_n;
output   fifo_B_in_read;
output  [255:0] fifo_B_local_out_din;
input   fifo_B_local_out_full_n;
output   fifo_B_local_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_B_in_read;
reg fifo_B_local_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_B_in_blk_n;
wire    ap_CS_fsm_state7;
reg    fifo_B_local_out_blk_n;
wire   [2:0] add_ln691_fu_149_p2;
reg   [2:0] add_ln691_reg_232;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln691_1651_fu_161_p2;
reg   [2:0] add_ln691_1651_reg_240;
wire    ap_CS_fsm_state3;
wire   [5:0] add_i_i35_cast_fu_181_p2;
reg   [5:0] add_i_i35_cast_reg_248;
wire   [0:0] icmp_ln890_1580_fu_167_p2;
wire   [7:0] c2_V_178_fu_187_p2;
reg   [7:0] c2_V_178_reg_253;
wire    ap_CS_fsm_state4;
wire   [3:0] c3_61_fu_205_p2;
reg   [3:0] c3_61_reg_264;
wire    ap_CS_fsm_state5;
wire   [1:0] add_ln691_1653_fu_220_p2;
reg   [1:0] add_ln691_1653_reg_272;
wire    ap_CS_fsm_state6;
reg   [2:0] c0_V_reg_94;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_105;
wire   [0:0] icmp_ln15092_fu_193_p2;
wire   [0:0] icmp_ln890_fu_155_p2;
reg   [7:0] c2_V_reg_116;
wire   [0:0] icmp_ln886_fu_215_p2;
wire   [0:0] icmp_ln15095_fu_199_p2;
reg   [3:0] c3_reg_127;
wire   [0:0] icmp_ln890_1581_fu_226_p2;
reg   [1:0] c4_V_reg_138;
reg    ap_block_state7;
wire   [5:0] p_shl_fu_173_p3;
wire   [5:0] zext_ln886_fu_211_p1;
reg   [6:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_155_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_94 <= 3'd0;
    end else if (((icmp_ln890_1580_fu_167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c0_V_reg_94 <= add_ln691_reg_232;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_155_p2 == 1'd0))) begin
        c1_V_reg_105 <= 3'd0;
    end else if (((icmp_ln15092_fu_193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_V_reg_105 <= add_ln691_1651_reg_240;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln15095_fu_199_p2 == 1'd1) | (icmp_ln886_fu_215_p2 == 1'd1)))) begin
        c2_V_reg_116 <= c2_V_178_reg_253;
    end else if (((icmp_ln890_1580_fu_167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c2_V_reg_116 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_1581_fu_226_p2 == 1'd1))) begin
        c3_reg_127 <= c3_61_reg_264;
    end else if (((icmp_ln15092_fu_193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c3_reg_127 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln15095_fu_199_p2 == 1'd0) & (icmp_ln886_fu_215_p2 == 1'd0))) begin
        c4_V_reg_138 <= 2'd0;
    end else if ((~((fifo_B_local_out_full_n == 1'b0) | (fifo_B_in_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        c4_V_reg_138 <= add_ln691_1653_reg_272;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1580_fu_167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_i_i35_cast_reg_248[5 : 3] <= add_i_i35_cast_fu_181_p2[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_1651_reg_240 <= add_ln691_1651_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln691_1653_reg_272 <= add_ln691_1653_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_232 <= add_ln691_fu_149_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c2_V_178_reg_253 <= c2_V_178_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c3_61_reg_264 <= c3_61_fu_205_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_155_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_155_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fifo_B_in_blk_n = fifo_B_in_empty_n;
    end else begin
        fifo_B_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_B_local_out_full_n == 1'b0) | (fifo_B_in_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        fifo_B_in_read = 1'b1;
    end else begin
        fifo_B_in_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fifo_B_local_out_blk_n = fifo_B_local_out_full_n;
    end else begin
        fifo_B_local_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_B_local_out_full_n == 1'b0) | (fifo_B_in_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        fifo_B_local_out_write = 1'b1;
    end else begin
        fifo_B_local_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_155_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln890_1580_fu_167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln15092_fu_193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln15095_fu_199_p2 == 1'd1) | (icmp_ln886_fu_215_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_1581_fu_226_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((fifo_B_local_out_full_n == 1'b0) | (fifo_B_in_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i35_cast_fu_181_p2 = ($signed(6'd41) - $signed(p_shl_fu_173_p3));

assign add_ln691_1651_fu_161_p2 = (c1_V_reg_105 + 3'd1);

assign add_ln691_1653_fu_220_p2 = (c4_V_reg_138 + 2'd1);

assign add_ln691_fu_149_p2 = (c0_V_reg_94 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((fifo_B_local_out_full_n == 1'b0) | (fifo_B_in_empty_n == 1'b0));
end

assign c2_V_178_fu_187_p2 = (c2_V_reg_116 + 8'd1);

assign c3_61_fu_205_p2 = (c3_reg_127 + 4'd1);

assign fifo_B_local_out_din = fifo_B_in_dout;

assign icmp_ln15092_fu_193_p2 = ((c2_V_reg_116 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln15095_fu_199_p2 = ((c3_reg_127 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_215_p2 = ((zext_ln886_fu_211_p1 > add_i_i35_cast_reg_248) ? 1'b1 : 1'b0);

assign icmp_ln890_1580_fu_167_p2 = ((c1_V_reg_105 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1581_fu_226_p2 = ((c4_V_reg_138 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_155_p2 = ((c0_V_reg_94 == 3'd4) ? 1'b1 : 1'b0);

assign p_shl_fu_173_p3 = {{c1_V_reg_105}, {3'd0}};

assign zext_ln886_fu_211_p1 = c3_reg_127;

always @ (posedge ap_clk) begin
    add_i_i35_cast_reg_248[2:0] <= 3'b001;
end

endmodule //top_B_IO_L3_in_x1
