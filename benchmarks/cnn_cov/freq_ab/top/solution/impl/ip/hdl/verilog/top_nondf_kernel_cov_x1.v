// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_nondf_kernel_cov_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xout_address0,
        xout_ce0,
        xout_q0,
        xin_address0,
        xin_ce0,
        xin_we0,
        xin_d0,
        grp_fu_159_p_din0,
        grp_fu_159_p_din1,
        grp_fu_159_p_dout0,
        grp_fu_159_p_ce,
        grp_fu_163_p_din0,
        grp_fu_163_p_din1,
        grp_fu_163_p_dout0,
        grp_fu_163_p_ce
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_pp0_stage0 = 16'd32;
parameter    ap_ST_fsm_state11 = 16'd64;
parameter    ap_ST_fsm_pp1_stage0 = 16'd128;
parameter    ap_ST_fsm_state18 = 16'd256;
parameter    ap_ST_fsm_pp2_stage0 = 16'd512;
parameter    ap_ST_fsm_pp2_stage1 = 16'd1024;
parameter    ap_ST_fsm_state37 = 16'd2048;
parameter    ap_ST_fsm_state38 = 16'd4096;
parameter    ap_ST_fsm_state39 = 16'd8192;
parameter    ap_ST_fsm_state40 = 16'd16384;
parameter    ap_ST_fsm_state41 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] xout_address0;
output   xout_ce0;
input  [511:0] xout_q0;
output  [11:0] xin_address0;
output   xin_ce0;
output   xin_we0;
output  [502:0] xin_d0;
output  [511:0] grp_fu_159_p_din0;
output  [511:0] grp_fu_159_p_din1;
input  [511:0] grp_fu_159_p_dout0;
output   grp_fu_159_p_ce;
output  [511:0] grp_fu_163_p_din0;
output  [513:0] grp_fu_163_p_din1;
input  [1024:0] grp_fu_163_p_dout0;
output   grp_fu_163_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg xout_ce0;
reg xin_ce0;
reg xin_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten_reg_242;
reg   [6:0] j_reg_253;
reg   [6:0] i_2_reg_264;
reg   [511:0] add_i2614_reg_275;
reg   [12:0] indvar_flatten8_reg_287;
reg   [6:0] i_1_reg_298;
reg   [6:0] j_2_reg_309;
reg   [18:0] indvar_flatten36_reg_320;
reg   [6:0] i_3_reg_332;
reg   [13:0] indvar_flatten21_reg_343;
reg   [6:0] j_3_reg_354;
reg   [6:0] k_reg_365;
reg   [511:0] conv3_i1613_reg_376;
wire   [511:0] data_V_q0;
reg   [511:0] reg_409;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln73_reg_972;
reg   [0:0] icmp_ln73_reg_972_pp0_iter1_reg;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_state15_pp1_stage0_iter3;
wire    ap_block_state16_pp1_stage0_iter4;
wire    ap_block_state17_pp1_stage0_iter5;
wire    ap_block_pp1_stage0_11001;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state21_pp2_stage0_iter1;
wire    ap_block_state23_pp2_stage0_iter2;
wire    ap_block_state25_pp2_stage0_iter3;
wire    ap_block_state27_pp2_stage0_iter4;
wire    ap_block_state29_pp2_stage0_iter5;
wire    ap_block_state31_pp2_stage0_iter6;
wire    ap_block_state33_pp2_stage0_iter7;
wire    ap_block_state35_pp2_stage0_iter8;
wire    ap_block_pp2_stage0_11001;
wire   [511:0] data_V_q1;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln81_reg_1022;
reg   [0:0] icmp_ln81_reg_1022_pp1_iter1_reg;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] icmp_ln85_reg_1068;
wire   [6:0] add_ln67_fu_414_p2;
reg   [6:0] add_ln67_reg_930;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_cast_fu_424_p3;
reg   [11:0] tmp_cast_reg_935;
wire   [0:0] icmp_ln67_fu_432_p2;
wire   [6:0] add_ln68_fu_438_p2;
reg   [6:0] add_ln68_reg_944;
wire    ap_CS_fsm_state3;
reg   [11:0] data_V_addr_reg_949;
wire   [0:0] icmp_ln68_fu_459_p2;
reg   [511:0] xout_load_reg_962;
wire    ap_CS_fsm_state4;
wire   [12:0] add_ln73_1_fu_465_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln73_fu_471_p2;
reg   [0:0] icmp_ln73_reg_972_pp0_iter2_reg;
reg   [0:0] icmp_ln73_reg_972_pp0_iter3_reg;
wire   [0:0] icmp_ln76_fu_483_p2;
reg   [0:0] icmp_ln76_reg_976;
reg   [0:0] icmp_ln76_reg_976_pp0_iter1_reg;
reg   [0:0] icmp_ln76_reg_976_pp0_iter2_reg;
wire   [6:0] select_ln73_2_fu_497_p3;
reg   [6:0] select_ln73_2_reg_981;
reg   [6:0] select_ln73_2_reg_981_pp0_iter1_reg;
reg   [6:0] select_ln73_2_reg_981_pp0_iter2_reg;
reg   [6:0] select_ln73_2_reg_981_pp0_iter3_reg;
wire   [5:0] trunc_ln691_fu_505_p1;
reg   [5:0] trunc_ln691_reg_988;
wire   [6:0] add_ln76_fu_509_p2;
reg   [6:0] add_ln76_reg_993;
wire   [0:0] icmp_ln76_1_fu_515_p2;
reg   [0:0] icmp_ln76_1_reg_998;
reg   [0:0] icmp_ln76_1_reg_998_pp0_iter1_reg;
reg   [0:0] icmp_ln76_1_reg_998_pp0_iter2_reg;
reg   [0:0] icmp_ln76_1_reg_998_pp0_iter3_reg;
wire   [511:0] grp_fu_549_p2;
reg    ap_enable_reg_pp0_iter4;
wire   [12:0] add_ln81_1_fu_570_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln81_fu_576_p2;
reg   [0:0] icmp_ln81_reg_1022_pp1_iter2_reg;
reg   [0:0] icmp_ln81_reg_1022_pp1_iter3_reg;
reg   [0:0] icmp_ln81_reg_1022_pp1_iter4_reg;
wire   [6:0] select_ln81_fu_594_p3;
reg   [6:0] select_ln81_reg_1026;
reg   [6:0] select_ln81_reg_1026_pp1_iter1_reg;
wire   [6:0] select_ln81_1_fu_602_p3;
reg   [6:0] select_ln81_1_reg_1032;
wire   [5:0] trunc_ln692_fu_610_p1;
reg   [5:0] trunc_ln692_reg_1037;
wire   [6:0] add_ln82_fu_614_p2;
reg   [11:0] data_V_addr_2_reg_1047;
reg   [11:0] data_V_addr_2_reg_1047_pp1_iter2_reg;
reg   [11:0] data_V_addr_2_reg_1047_pp1_iter3_reg;
reg   [11:0] data_V_addr_2_reg_1047_pp1_iter4_reg;
wire   [511:0] grp_fu_649_p2;
reg   [511:0] sub_ln692_reg_1063;
wire   [0:0] icmp_ln85_fu_655_p2;
reg   [0:0] icmp_ln85_reg_1068_pp2_iter1_reg;
reg   [0:0] icmp_ln85_reg_1068_pp2_iter2_reg;
reg   [0:0] icmp_ln85_reg_1068_pp2_iter3_reg;
reg   [0:0] icmp_ln85_reg_1068_pp2_iter4_reg;
reg   [0:0] icmp_ln85_reg_1068_pp2_iter5_reg;
wire   [6:0] select_ln85_fu_673_p3;
reg   [6:0] select_ln85_reg_1072;
wire   [6:0] select_ln85_1_fu_681_p3;
reg   [6:0] select_ln85_1_reg_1078;
reg    ap_enable_reg_pp2_iter0;
wire   [5:0] trunc_ln88_fu_689_p1;
reg   [5:0] trunc_ln88_reg_1084;
wire   [0:0] and_ln85_fu_705_p2;
reg   [0:0] and_ln85_reg_1089;
wire   [0:0] or_ln86_fu_711_p2;
reg   [0:0] or_ln86_reg_1094;
reg   [0:0] or_ln86_reg_1094_pp2_iter1_reg;
reg   [0:0] or_ln86_reg_1094_pp2_iter2_reg;
reg   [0:0] or_ln86_reg_1094_pp2_iter3_reg;
reg   [0:0] or_ln86_reg_1094_pp2_iter4_reg;
wire   [6:0] select_ln86_fu_717_p3;
reg   [6:0] select_ln86_reg_1099;
wire   [5:0] trunc_ln215_fu_725_p1;
reg   [5:0] trunc_ln215_reg_1104;
wire   [13:0] select_ln86_3_fu_735_p3;
reg   [13:0] select_ln86_3_reg_1109;
wire   [18:0] add_ln85_1_fu_743_p2;
reg   [18:0] add_ln85_1_reg_1114;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state20_pp2_stage1_iter0;
wire    ap_block_state22_pp2_stage1_iter1;
wire    ap_block_state24_pp2_stage1_iter2;
wire    ap_block_state26_pp2_stage1_iter3;
wire    ap_block_state28_pp2_stage1_iter4;
wire    ap_block_state30_pp2_stage1_iter5;
wire    ap_block_state32_pp2_stage1_iter6;
wire    ap_block_state34_pp2_stage1_iter7;
wire    ap_block_state36_pp2_stage1_iter8;
wire    ap_block_pp2_stage1_11001;
wire   [6:0] select_ln86_2_fu_757_p3;
reg   [6:0] select_ln86_2_reg_1119;
wire   [11:0] add_ln92_fu_775_p2;
reg   [11:0] add_ln92_reg_1125;
reg   [11:0] add_ln92_reg_1125_pp2_iter1_reg;
reg   [11:0] add_ln92_reg_1125_pp2_iter2_reg;
reg   [11:0] add_ln92_reg_1125_pp2_iter3_reg;
reg   [11:0] add_ln92_reg_1125_pp2_iter4_reg;
wire   [11:0] tmp_8_cast_fu_781_p3;
reg   [11:0] tmp_8_cast_reg_1130;
wire   [6:0] add_ln89_fu_799_p2;
reg   [6:0] add_ln89_reg_1140;
wire   [0:0] icmp_ln89_1_fu_804_p2;
reg   [0:0] icmp_ln89_1_reg_1145;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter1_reg;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter2_reg;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter3_reg;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter4_reg;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter5_reg;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter6_reg;
reg   [0:0] icmp_ln89_1_reg_1145_pp2_iter7_reg;
wire   [11:0] add_ln88_fu_820_p2;
reg   [11:0] add_ln88_reg_1149;
reg   [11:0] add_ln88_reg_1149_pp2_iter2_reg;
reg   [11:0] add_ln88_reg_1149_pp2_iter3_reg;
reg   [11:0] add_ln88_reg_1149_pp2_iter4_reg;
reg  signed [511:0] data_V_load_3_reg_1159;
wire   [511:0] grp_fu_836_p2;
reg   [511:0] mul_ln691_reg_1164;
reg   [11:0] cov_V_addr_reg_1174;
reg   [11:0] cov_V_addr_reg_1174_pp2_iter6_reg;
reg   [11:0] cov_V_addr_reg_1174_pp2_iter7_reg;
reg   [11:0] cov_V_addr_reg_1174_pp2_iter8_reg;
reg   [11:0] cov_V_addr_2_reg_1179;
reg   [11:0] cov_V_addr_2_reg_1179_pp2_iter6_reg;
reg   [11:0] cov_V_addr_2_reg_1179_pp2_iter7_reg;
wire   [511:0] grp_fu_848_p2;
reg   [511:0] add_ln691_1_reg_1184;
reg    ap_enable_reg_pp2_iter5;
wire   [1024:0] zext_ln693_fu_861_p1;
reg   [502:0] trunc_ln693_1_reg_1195;
wire   [6:0] add_ln95_fu_880_p2;
reg   [6:0] add_ln95_reg_1200;
wire    ap_CS_fsm_state38;
wire   [11:0] tmp_9_cast_fu_890_p3;
reg   [11:0] tmp_9_cast_reg_1205;
wire   [6:0] add_ln96_fu_904_p2;
reg   [6:0] add_ln96_reg_1213;
wire    ap_CS_fsm_state39;
wire   [63:0] zext_ln97_1_fu_919_p1;
reg   [63:0] zext_ln97_1_reg_1218;
wire   [502:0] cov_V_q0;
reg   [502:0] cov_V_load_reg_1231;
wire    ap_CS_fsm_state40;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state11;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
wire    ap_CS_fsm_state18;
wire    ap_block_pp2_stage1_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_condition_pp2_exit_iter4_state28;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg   [5:0] mean_V_address0;
reg    mean_V_ce0;
reg    mean_V_we0;
wire   [501:0] mean_V_d0;
wire   [501:0] mean_V_q0;
reg   [11:0] data_V_address0;
reg    data_V_ce0;
reg    data_V_we0;
reg   [511:0] data_V_d0;
wire   [11:0] data_V_address1;
reg    data_V_ce1;
reg   [11:0] cov_V_address0;
reg    cov_V_ce0;
reg    cov_V_we0;
reg   [6:0] i_reg_220;
reg   [6:0] j_1_reg_231;
wire    ap_CS_fsm_state5;
reg   [6:0] ap_phi_mux_j_phi_fu_257_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_i_2_phi_fu_268_p4;
reg   [511:0] ap_phi_mux_add_i2614_phi_fu_279_p4;
reg   [6:0] ap_phi_mux_i_1_phi_fu_302_p4;
wire    ap_block_pp1_stage0;
reg   [18:0] ap_phi_mux_indvar_flatten36_phi_fu_324_p4;
wire    ap_block_pp2_stage0;
reg   [6:0] ap_phi_mux_i_3_phi_fu_336_p4;
reg   [13:0] ap_phi_mux_indvar_flatten21_phi_fu_347_p4;
reg   [6:0] ap_phi_mux_j_3_phi_fu_358_p4;
reg   [6:0] ap_phi_mux_k_phi_fu_369_p4;
reg   [511:0] ap_phi_mux_conv3_i1613_phi_fu_380_p4;
wire    ap_block_pp2_stage1;
reg   [6:0] i_4_reg_387;
wire   [0:0] icmp_ln96_fu_924_p2;
wire    ap_CS_fsm_state37;
reg   [6:0] j_4_reg_398;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln95_fu_898_p2;
wire   [63:0] zext_ln69_1_fu_453_p1;
wire   [63:0] zext_ln691_1_fu_537_p1;
wire   [63:0] zext_ln73_fu_555_p1;
wire   [63:0] zext_ln692_1_fu_636_p1;
wire   [63:0] zext_ln82_fu_641_p1;
wire   [63:0] zext_ln215_fu_794_p1;
wire   [63:0] zext_ln215_1_fu_831_p1;
wire   [63:0] zext_ln92_1_fu_853_p1;
wire   [63:0] zext_ln88_1_fu_857_p1;
wire   [5:0] trunc_ln69_fu_420_p1;
wire   [11:0] zext_ln69_fu_444_p1;
wire   [11:0] add_ln69_fu_448_p2;
wire   [6:0] add_ln73_fu_477_p2;
wire   [6:0] select_ln73_fu_489_p3;
wire   [11:0] tmp_3_cast_fu_524_p3;
wire   [11:0] zext_ln691_fu_521_p1;
wire   [11:0] add_ln691_2_fu_531_p2;
wire   [511:0] grp_fu_549_p1;
wire   [0:0] icmp_ln82_fu_588_p2;
wire   [6:0] add_ln81_fu_582_p2;
wire   [11:0] tmp_4_cast_fu_620_p3;
wire   [11:0] zext_ln692_fu_627_p1;
wire   [11:0] add_ln692_fu_630_p2;
wire   [511:0] grp_fu_649_p1;
wire   [0:0] icmp_ln86_fu_667_p2;
wire   [6:0] add_ln85_fu_661_p2;
wire   [0:0] icmp_ln89_fu_699_p2;
wire   [0:0] xor_ln85_fu_693_p2;
wire   [13:0] add_ln86_1_fu_729_p2;
wire   [6:0] add_ln86_fu_752_p2;
wire   [5:0] trunc_ln92_fu_763_p1;
wire   [11:0] tmp_7_cast_fu_767_p3;
wire   [11:0] zext_ln88_fu_749_p1;
wire   [11:0] add_ln215_fu_788_p2;
wire   [11:0] tmp_5_cast_fu_810_p3;
wire   [11:0] zext_ln92_fu_817_p1;
wire   [11:0] add_ln215_1_fu_826_p2;
wire  signed [511:0] grp_fu_836_p0;
wire  signed [511:0] grp_fu_836_p1;
wire   [511:0] grp_fu_848_p1;
wire   [511:0] grp_fu_864_p0;
wire   [513:0] grp_fu_864_p1;
wire   [1024:0] grp_fu_864_p2;
wire   [5:0] trunc_ln97_fu_886_p1;
wire   [11:0] zext_ln97_fu_910_p1;
wire   [11:0] add_ln97_fu_914_p2;
wire    grp_fu_836_ce;
wire    grp_fu_864_ce;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp2_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
end

top_nondf_kernel_cov_x0_mean_V #(
    .DataWidth( 502 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mean_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_V_address0),
    .ce0(mean_V_ce0),
    .we0(mean_V_we0),
    .d0(mean_V_d0),
    .q0(mean_V_q0)
);

top_nondf_kernel_cov_x0_data_V #(
    .DataWidth( 512 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_V_address0),
    .ce0(data_V_ce0),
    .we0(data_V_we0),
    .d0(data_V_d0),
    .q0(data_V_q0),
    .address1(data_V_address1),
    .ce1(data_V_ce1),
    .q1(data_V_q1)
);

top_nondf_kernel_cov_x0_cov_V #(
    .DataWidth( 503 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
cov_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cov_V_address0),
    .ce0(cov_V_ce0),
    .we0(cov_V_we0),
    .d0(trunc_ln693_1_reg_1195),
    .q0(cov_V_q0)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U1694(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_409),
    .din1(grp_fu_549_p1),
    .ce(1'b1),
    .dout(grp_fu_549_p2)
);

top_sub_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
sub_512ns_512ns_512_2_1_U1695(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_409),
    .din1(grp_fu_649_p1),
    .ce(1'b1),
    .dout(grp_fu_649_p2)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U1697(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln691_reg_1164),
    .din1(grp_fu_848_p1),
    .ce(1'b1),
    .dout(grp_fu_848_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state6)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            if ((1'b1 == ap_condition_pp2_exit_iter4_state28)) begin
                ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
        add_i2614_reg_275 <= 512'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln73_reg_972_pp0_iter3_reg == 1'd0))) begin
        add_i2614_reg_275 <= grp_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        conv3_i1613_reg_376 <= 512'd0;
    end else if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter5 == 1'b1) & (icmp_ln85_reg_1068_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        conv3_i1613_reg_376 <= add_ln691_1_reg_1184;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_1_reg_298 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln81_reg_1022 == 1'd0))) begin
        i_1_reg_298 <= select_ln81_1_reg_1032;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
        i_2_reg_264 <= 7'd0;
    end else if (((icmp_ln73_reg_972 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_264 <= add_ln76_reg_993;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_3_reg_332 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        i_3_reg_332 <= select_ln85_1_reg_1078;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_4_reg_387 <= 7'd0;
    end else if (((icmp_ln96_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        i_4_reg_387 <= add_ln95_reg_1200;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_220 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln68_fu_459_p2 == 1'd1))) begin
        i_reg_220 <= add_ln67_reg_930;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten21_reg_343 <= 14'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        indvar_flatten21_reg_343 <= select_ln86_3_reg_1109;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten36_reg_320 <= 19'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        indvar_flatten36_reg_320 <= add_ln85_1_reg_1114;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten8_reg_287 <= 13'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln81_fu_576_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten8_reg_287 <= add_ln81_1_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
        indvar_flatten_reg_242 <= 13'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln73_fu_471_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_242 <= add_ln73_1_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd0))) begin
        j_1_reg_231 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_1_reg_231 <= add_ln68_reg_944;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_2_reg_309 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln81_fu_576_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_2_reg_309 <= add_ln82_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_3_reg_354 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        j_3_reg_354 <= select_ln86_2_reg_1119;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_898_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        j_4_reg_398 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        j_4_reg_398 <= add_ln96_reg_1213;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
        j_reg_253 <= 7'd0;
    end else if (((icmp_ln73_reg_972 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_253 <= select_ln73_2_reg_981;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        k_reg_365 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        k_reg_365 <= add_ln89_reg_1140;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln81_reg_1022_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        reg_409 <= data_V_q1;
    end else if ((((icmp_ln73_reg_972_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        reg_409 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln67_reg_930 <= add_ln67_fu_414_p2;
        tmp_cast_reg_935[11 : 6] <= tmp_cast_fu_424_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln68_reg_944 <= add_ln68_fu_438_p2;
        data_V_addr_reg_949 <= zext_ln69_1_fu_453_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1) & (icmp_ln85_reg_1068_pp2_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln691_1_reg_1184 <= grp_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln73_fu_471_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln76_reg_993 <= add_ln76_fu_509_p2;
        select_ln73_2_reg_981 <= select_ln73_2_fu_497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln85_1_reg_1114 <= add_ln85_1_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0))) begin
        add_ln88_reg_1149 <= add_ln88_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln88_reg_1149_pp2_iter2_reg <= add_ln88_reg_1149;
        add_ln88_reg_1149_pp2_iter3_reg <= add_ln88_reg_1149_pp2_iter2_reg;
        add_ln88_reg_1149_pp2_iter4_reg <= add_ln88_reg_1149_pp2_iter3_reg;
        cov_V_addr_2_reg_1179_pp2_iter6_reg <= cov_V_addr_2_reg_1179;
        cov_V_addr_2_reg_1179_pp2_iter7_reg <= cov_V_addr_2_reg_1179_pp2_iter6_reg;
        cov_V_addr_reg_1174_pp2_iter6_reg <= cov_V_addr_reg_1174;
        cov_V_addr_reg_1174_pp2_iter7_reg <= cov_V_addr_reg_1174_pp2_iter6_reg;
        cov_V_addr_reg_1174_pp2_iter8_reg <= cov_V_addr_reg_1174_pp2_iter7_reg;
        icmp_ln85_reg_1068 <= icmp_ln85_fu_655_p2;
        icmp_ln85_reg_1068_pp2_iter1_reg <= icmp_ln85_reg_1068;
        icmp_ln85_reg_1068_pp2_iter2_reg <= icmp_ln85_reg_1068_pp2_iter1_reg;
        icmp_ln85_reg_1068_pp2_iter3_reg <= icmp_ln85_reg_1068_pp2_iter2_reg;
        icmp_ln85_reg_1068_pp2_iter4_reg <= icmp_ln85_reg_1068_pp2_iter3_reg;
        icmp_ln85_reg_1068_pp2_iter5_reg <= icmp_ln85_reg_1068_pp2_iter4_reg;
        or_ln86_reg_1094_pp2_iter1_reg <= or_ln86_reg_1094;
        or_ln86_reg_1094_pp2_iter2_reg <= or_ln86_reg_1094_pp2_iter1_reg;
        or_ln86_reg_1094_pp2_iter3_reg <= or_ln86_reg_1094_pp2_iter2_reg;
        or_ln86_reg_1094_pp2_iter4_reg <= or_ln86_reg_1094_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln85_reg_1068 == 1'd0))) begin
        add_ln89_reg_1140 <= add_ln89_fu_799_p2;
        select_ln86_2_reg_1119 <= select_ln86_2_fu_757_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln85_reg_1068 == 1'd0))) begin
        add_ln92_reg_1125 <= add_ln92_fu_775_p2;
        icmp_ln89_1_reg_1145 <= icmp_ln89_1_fu_804_p2;
        tmp_8_cast_reg_1130[11 : 6] <= tmp_8_cast_fu_781_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln92_reg_1125_pp2_iter1_reg <= add_ln92_reg_1125;
        add_ln92_reg_1125_pp2_iter2_reg <= add_ln92_reg_1125_pp2_iter1_reg;
        add_ln92_reg_1125_pp2_iter3_reg <= add_ln92_reg_1125_pp2_iter2_reg;
        add_ln92_reg_1125_pp2_iter4_reg <= add_ln92_reg_1125_pp2_iter3_reg;
        icmp_ln89_1_reg_1145_pp2_iter1_reg <= icmp_ln89_1_reg_1145;
        icmp_ln89_1_reg_1145_pp2_iter2_reg <= icmp_ln89_1_reg_1145_pp2_iter1_reg;
        icmp_ln89_1_reg_1145_pp2_iter3_reg <= icmp_ln89_1_reg_1145_pp2_iter2_reg;
        icmp_ln89_1_reg_1145_pp2_iter4_reg <= icmp_ln89_1_reg_1145_pp2_iter3_reg;
        icmp_ln89_1_reg_1145_pp2_iter5_reg <= icmp_ln89_1_reg_1145_pp2_iter4_reg;
        icmp_ln89_1_reg_1145_pp2_iter6_reg <= icmp_ln89_1_reg_1145_pp2_iter5_reg;
        icmp_ln89_1_reg_1145_pp2_iter7_reg <= icmp_ln89_1_reg_1145_pp2_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add_ln95_reg_1200 <= add_ln95_fu_880_p2;
        tmp_9_cast_reg_1205[11 : 6] <= tmp_9_cast_fu_890_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln96_reg_1213 <= add_ln96_fu_904_p2;
        zext_ln97_1_reg_1218[11 : 0] <= zext_ln97_1_fu_919_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln85_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        and_ln85_reg_1089 <= and_ln85_fu_705_p2;
        or_ln86_reg_1094 <= or_ln86_fu_711_p2;
        select_ln85_reg_1072 <= select_ln85_fu_673_p3;
        select_ln86_reg_1099 <= select_ln86_fu_717_p3;
        trunc_ln215_reg_1104 <= trunc_ln215_fu_725_p1;
        trunc_ln88_reg_1084 <= trunc_ln88_fu_689_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln85_reg_1068_pp2_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        cov_V_addr_2_reg_1179 <= zext_ln88_1_fu_857_p1;
        cov_V_addr_reg_1174 <= zext_ln92_1_fu_853_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        cov_V_load_reg_1231 <= cov_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln81_reg_1022 == 1'd0))) begin
        data_V_addr_2_reg_1047 <= zext_ln692_1_fu_636_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        data_V_addr_2_reg_1047_pp1_iter2_reg <= data_V_addr_2_reg_1047;
        data_V_addr_2_reg_1047_pp1_iter3_reg <= data_V_addr_2_reg_1047_pp1_iter2_reg;
        data_V_addr_2_reg_1047_pp1_iter4_reg <= data_V_addr_2_reg_1047_pp1_iter3_reg;
        icmp_ln81_reg_1022_pp1_iter2_reg <= icmp_ln81_reg_1022_pp1_iter1_reg;
        icmp_ln81_reg_1022_pp1_iter3_reg <= icmp_ln81_reg_1022_pp1_iter2_reg;
        icmp_ln81_reg_1022_pp1_iter4_reg <= icmp_ln81_reg_1022_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln85_reg_1068_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        data_V_load_3_reg_1159 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln73_reg_972 <= icmp_ln73_fu_471_p2;
        icmp_ln73_reg_972_pp0_iter1_reg <= icmp_ln73_reg_972;
        icmp_ln76_1_reg_998_pp0_iter1_reg <= icmp_ln76_1_reg_998;
        icmp_ln76_reg_976_pp0_iter1_reg <= icmp_ln76_reg_976;
        select_ln73_2_reg_981_pp0_iter1_reg <= select_ln73_2_reg_981;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln73_reg_972_pp0_iter2_reg <= icmp_ln73_reg_972_pp0_iter1_reg;
        icmp_ln73_reg_972_pp0_iter3_reg <= icmp_ln73_reg_972_pp0_iter2_reg;
        icmp_ln76_1_reg_998_pp0_iter2_reg <= icmp_ln76_1_reg_998_pp0_iter1_reg;
        icmp_ln76_1_reg_998_pp0_iter3_reg <= icmp_ln76_1_reg_998_pp0_iter2_reg;
        icmp_ln76_reg_976_pp0_iter2_reg <= icmp_ln76_reg_976_pp0_iter1_reg;
        select_ln73_2_reg_981_pp0_iter2_reg <= select_ln73_2_reg_981_pp0_iter1_reg;
        select_ln73_2_reg_981_pp0_iter3_reg <= select_ln73_2_reg_981_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln73_fu_471_p2 == 1'd0))) begin
        icmp_ln76_1_reg_998 <= icmp_ln76_1_fu_515_p2;
        icmp_ln76_reg_976 <= icmp_ln76_fu_483_p2;
        trunc_ln691_reg_988 <= trunc_ln691_fu_505_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln81_reg_1022 <= icmp_ln81_fu_576_p2;
        icmp_ln81_reg_1022_pp1_iter1_reg <= icmp_ln81_reg_1022;
        select_ln81_reg_1026_pp1_iter1_reg <= select_ln81_reg_1026;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln85_reg_1068_pp2_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        mul_ln691_reg_1164 <= grp_fu_159_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln81_fu_576_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln81_1_reg_1032 <= select_ln81_1_fu_602_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln81_fu_576_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln81_reg_1026 <= select_ln81_fu_594_p3;
        trunc_ln692_reg_1037 <= trunc_ln692_fu_610_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln85_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln85_1_reg_1078 <= select_ln85_1_fu_681_p3;
        select_ln86_3_reg_1109 <= select_ln86_3_fu_735_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln81_reg_1022_pp1_iter3_reg == 1'd0))) begin
        sub_ln692_reg_1063 <= grp_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln89_1_reg_1145_pp2_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        trunc_ln693_1_reg_1195 <= {{grp_fu_163_p_dout0[1024:522]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        xout_load_reg_962 <= xout_q0;
    end
end

always @ (*) begin
    if ((icmp_ln73_fu_471_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln81_fu_576_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0))) begin
        ap_condition_pp2_exit_iter4_state28 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter4_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln85_reg_1068 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln95_fu_898_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln73_reg_972_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_add_i2614_phi_fu_279_p4 = grp_fu_549_p2;
    end else begin
        ap_phi_mux_add_i2614_phi_fu_279_p4 = add_i2614_reg_275;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter5 == 1'b1) & (icmp_ln85_reg_1068_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        ap_phi_mux_conv3_i1613_phi_fu_380_p4 = add_ln691_1_reg_1184;
    end else begin
        ap_phi_mux_conv3_i1613_phi_fu_380_p4 = conv3_i1613_reg_376;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln81_reg_1022 == 1'd0))) begin
        ap_phi_mux_i_1_phi_fu_302_p4 = select_ln81_1_reg_1032;
    end else begin
        ap_phi_mux_i_1_phi_fu_302_p4 = i_1_reg_298;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_972 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_2_phi_fu_268_p4 = add_ln76_reg_993;
    end else begin
        ap_phi_mux_i_2_phi_fu_268_p4 = i_2_reg_264;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_i_3_phi_fu_336_p4 = select_ln85_1_reg_1078;
    end else begin
        ap_phi_mux_i_3_phi_fu_336_p4 = i_3_reg_332;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten21_phi_fu_347_p4 = select_ln86_3_reg_1109;
    end else begin
        ap_phi_mux_indvar_flatten21_phi_fu_347_p4 = indvar_flatten21_reg_343;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten36_phi_fu_324_p4 = add_ln85_1_reg_1114;
    end else begin
        ap_phi_mux_indvar_flatten36_phi_fu_324_p4 = indvar_flatten36_reg_320;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_j_3_phi_fu_358_p4 = select_ln86_2_reg_1119;
    end else begin
        ap_phi_mux_j_3_phi_fu_358_p4 = j_3_reg_354;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_972 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_257_p4 = select_ln73_2_reg_981;
    end else begin
        ap_phi_mux_j_phi_fu_257_p4 = j_reg_253;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln85_reg_1068 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_k_phi_fu_369_p4 = add_ln89_reg_1140;
    end else begin
        ap_phi_mux_k_phi_fu_369_p4 = k_reg_365;
    end
end

always @ (*) begin
    if (((icmp_ln95_fu_898_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        cov_V_address0 = zext_ln97_1_fu_919_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        cov_V_address0 = cov_V_addr_reg_1174_pp2_iter8_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        cov_V_address0 = cov_V_addr_2_reg_1179_pp2_iter7_reg;
    end else begin
        cov_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        cov_V_ce0 = 1'b1;
    end else begin
        cov_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter8 == 1'b1) & (icmp_ln89_1_reg_1145_pp2_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1) & (icmp_ln89_1_reg_1145_pp2_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        cov_V_we0 = 1'b1;
    end else begin
        cov_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        data_V_address0 = zext_ln215_1_fu_831_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        data_V_address0 = zext_ln215_fu_794_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        data_V_address0 = data_V_addr_2_reg_1047_pp1_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_address0 = zext_ln691_1_fu_537_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_address0 = data_V_addr_reg_949;
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        data_V_ce1 = 1'b1;
    end else begin
        data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        data_V_d0 = sub_ln692_reg_1063;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_d0 = xout_load_reg_962;
    end else begin
        data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln81_reg_1022_pp1_iter4_reg == 1'd0)))) begin
        data_V_we0 = 1'b1;
    end else begin
        data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        mean_V_address0 = zext_ln82_fu_641_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        mean_V_address0 = zext_ln73_fu_555_p1;
    end else begin
        mean_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        mean_V_ce0 = 1'b1;
    end else begin
        mean_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln76_1_reg_998_pp0_iter3_reg == 1'd1))) begin
        mean_V_we0 = 1'b1;
    end else begin
        mean_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        xin_ce0 = 1'b1;
    end else begin
        xin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        xin_we0 = 1'b1;
    end else begin
        xin_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xout_ce0 = 1'b1;
    end else begin
        xout_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln67_fu_432_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln68_fu_459_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln73_fu_471_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln73_fu_471_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln81_fu_576_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln81_fu_576_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1)) & ~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter8 == 1'b1) & (ap_enable_reg_pp2_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter8 == 1'b1) & (ap_enable_reg_pp2_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((icmp_ln95_fu_898_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln96_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln215_1_fu_826_p2 = (tmp_8_cast_reg_1130 + zext_ln92_fu_817_p1);

assign add_ln215_fu_788_p2 = (tmp_8_cast_fu_781_p3 + zext_ln88_fu_749_p1);

assign add_ln67_fu_414_p2 = (i_reg_220 + 7'd1);

assign add_ln68_fu_438_p2 = (j_1_reg_231 + 7'd1);

assign add_ln691_2_fu_531_p2 = (tmp_3_cast_fu_524_p3 + zext_ln691_fu_521_p1);

assign add_ln692_fu_630_p2 = (tmp_4_cast_fu_620_p3 + zext_ln692_fu_627_p1);

assign add_ln69_fu_448_p2 = (tmp_cast_reg_935 + zext_ln69_fu_444_p1);

assign add_ln73_1_fu_465_p2 = (indvar_flatten_reg_242 + 13'd1);

assign add_ln73_fu_477_p2 = (ap_phi_mux_j_phi_fu_257_p4 + 7'd1);

assign add_ln76_fu_509_p2 = (select_ln73_fu_489_p3 + 7'd1);

assign add_ln81_1_fu_570_p2 = (indvar_flatten8_reg_287 + 13'd1);

assign add_ln81_fu_582_p2 = (ap_phi_mux_i_1_phi_fu_302_p4 + 7'd1);

assign add_ln82_fu_614_p2 = (select_ln81_fu_594_p3 + 7'd1);

assign add_ln85_1_fu_743_p2 = (indvar_flatten36_reg_320 + 19'd1);

assign add_ln85_fu_661_p2 = (ap_phi_mux_i_3_phi_fu_336_p4 + 7'd1);

assign add_ln86_1_fu_729_p2 = (ap_phi_mux_indvar_flatten21_phi_fu_347_p4 + 14'd1);

assign add_ln86_fu_752_p2 = (select_ln85_reg_1072 + 7'd1);

assign add_ln88_fu_820_p2 = (tmp_5_cast_fu_810_p3 + zext_ln92_fu_817_p1);

assign add_ln89_fu_799_p2 = (select_ln86_reg_1099 + 7'd1);

assign add_ln92_fu_775_p2 = (tmp_7_cast_fu_767_p3 + zext_ln88_fu_749_p1);

assign add_ln95_fu_880_p2 = (i_4_reg_387 + 7'd1);

assign add_ln96_fu_904_p2 = (j_4_reg_398 + 7'd1);

assign add_ln97_fu_914_p2 = (tmp_9_cast_reg_1205 + zext_ln97_fu_910_p1);

assign and_ln85_fu_705_p2 = (xor_ln85_fu_693_p2 & icmp_ln89_fu_699_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign data_V_address1 = zext_ln692_1_fu_636_p1;

assign grp_fu_159_p_ce = 1'b1;

assign grp_fu_159_p_din0 = data_V_load_3_reg_1159;

assign grp_fu_159_p_din1 = reg_409;

assign grp_fu_163_p_ce = 1'b1;

assign grp_fu_163_p_din0 = zext_ln693_fu_861_p1;

assign grp_fu_163_p_din1 = 1025'd13420914291555444213063344670735861617340049462645758376137758473481022841442142819398943579005776256065095427940334033308156379276083370112559195095044101;

assign grp_fu_549_p1 = ((icmp_ln76_reg_976_pp0_iter2_reg[0:0] == 1'b1) ? 512'd0 : ap_phi_mux_add_i2614_phi_fu_279_p4);

assign grp_fu_649_p1 = mean_V_q0;

assign grp_fu_836_ce = 1'b1;

assign grp_fu_836_p0 = data_V_load_3_reg_1159;

assign grp_fu_836_p1 = reg_409;

assign grp_fu_836_p2 = grp_fu_159_p_dout0;

assign grp_fu_848_p1 = ((or_ln86_reg_1094_pp2_iter4_reg[0:0] == 1'b1) ? 512'd0 : ap_phi_mux_conv3_i1613_phi_fu_380_p4);

assign grp_fu_864_ce = 1'b1;

assign grp_fu_864_p0 = zext_ln693_fu_861_p1;

assign grp_fu_864_p1 = 1025'd13420914291555444213063344670735861617340049462645758376137758473481022841442142819398943579005776256065095427940334033308156379276083370112559195095044101;

assign grp_fu_864_p2 = grp_fu_163_p_dout0;

assign icmp_ln67_fu_432_p2 = ((i_reg_220 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_459_p2 = ((j_1_reg_231 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_471_p2 = ((indvar_flatten_reg_242 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln76_1_fu_515_p2 = ((add_ln76_fu_509_p2 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_483_p2 = ((ap_phi_mux_i_2_phi_fu_268_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_576_p2 = ((indvar_flatten8_reg_287 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_588_p2 = ((j_2_reg_309 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_655_p2 = ((ap_phi_mux_indvar_flatten36_phi_fu_324_p4 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_667_p2 = ((ap_phi_mux_indvar_flatten21_phi_fu_347_p4 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln89_1_fu_804_p2 = ((add_ln89_fu_799_p2 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_699_p2 = ((ap_phi_mux_k_phi_fu_369_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_898_p2 = ((i_4_reg_387 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_924_p2 = ((j_4_reg_398 == 7'd64) ? 1'b1 : 1'b0);

assign mean_V_d0 = {{grp_fu_549_p2[511:10]}};

assign or_ln86_fu_711_p2 = (icmp_ln86_fu_667_p2 | and_ln85_fu_705_p2);

assign select_ln73_2_fu_497_p3 = ((icmp_ln76_fu_483_p2[0:0] == 1'b1) ? add_ln73_fu_477_p2 : ap_phi_mux_j_phi_fu_257_p4);

assign select_ln73_fu_489_p3 = ((icmp_ln76_fu_483_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_i_2_phi_fu_268_p4);

assign select_ln81_1_fu_602_p3 = ((icmp_ln82_fu_588_p2[0:0] == 1'b1) ? add_ln81_fu_582_p2 : ap_phi_mux_i_1_phi_fu_302_p4);

assign select_ln81_fu_594_p3 = ((icmp_ln82_fu_588_p2[0:0] == 1'b1) ? 7'd0 : j_2_reg_309);

assign select_ln85_1_fu_681_p3 = ((icmp_ln86_fu_667_p2[0:0] == 1'b1) ? add_ln85_fu_661_p2 : ap_phi_mux_i_3_phi_fu_336_p4);

assign select_ln85_fu_673_p3 = ((icmp_ln86_fu_667_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_j_3_phi_fu_358_p4);

assign select_ln86_2_fu_757_p3 = ((and_ln85_reg_1089[0:0] == 1'b1) ? add_ln86_fu_752_p2 : select_ln85_reg_1072);

assign select_ln86_3_fu_735_p3 = ((icmp_ln86_fu_667_p2[0:0] == 1'b1) ? 14'd1 : add_ln86_1_fu_729_p2);

assign select_ln86_fu_717_p3 = ((or_ln86_fu_711_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_k_phi_fu_369_p4);

assign tmp_3_cast_fu_524_p3 = {{trunc_ln691_reg_988}, {6'd0}};

assign tmp_4_cast_fu_620_p3 = {{trunc_ln692_reg_1037}, {6'd0}};

assign tmp_5_cast_fu_810_p3 = {{trunc_ln88_reg_1084}, {6'd0}};

assign tmp_7_cast_fu_767_p3 = {{trunc_ln92_fu_763_p1}, {6'd0}};

assign tmp_8_cast_fu_781_p3 = {{trunc_ln215_reg_1104}, {6'd0}};

assign tmp_9_cast_fu_890_p3 = {{trunc_ln97_fu_886_p1}, {6'd0}};

assign tmp_cast_fu_424_p3 = {{trunc_ln69_fu_420_p1}, {6'd0}};

assign trunc_ln215_fu_725_p1 = select_ln86_fu_717_p3[5:0];

assign trunc_ln691_fu_505_p1 = select_ln73_fu_489_p3[5:0];

assign trunc_ln692_fu_610_p1 = select_ln81_1_fu_602_p3[5:0];

assign trunc_ln69_fu_420_p1 = i_reg_220[5:0];

assign trunc_ln88_fu_689_p1 = select_ln85_1_fu_681_p3[5:0];

assign trunc_ln92_fu_763_p1 = select_ln86_2_fu_757_p3[5:0];

assign trunc_ln97_fu_886_p1 = i_4_reg_387[5:0];

assign xin_address0 = zext_ln97_1_reg_1218;

assign xin_d0 = cov_V_load_reg_1231;

assign xor_ln85_fu_693_p2 = (icmp_ln86_fu_667_p2 ^ 1'd1);

assign xout_address0 = zext_ln69_1_fu_453_p1;

assign zext_ln215_1_fu_831_p1 = add_ln215_1_fu_826_p2;

assign zext_ln215_fu_794_p1 = add_ln215_fu_788_p2;

assign zext_ln691_1_fu_537_p1 = add_ln691_2_fu_531_p2;

assign zext_ln691_fu_521_p1 = select_ln73_2_reg_981;

assign zext_ln692_1_fu_636_p1 = add_ln692_fu_630_p2;

assign zext_ln692_fu_627_p1 = select_ln81_reg_1026;

assign zext_ln693_fu_861_p1 = add_ln691_1_reg_1184;

assign zext_ln69_1_fu_453_p1 = add_ln69_fu_448_p2;

assign zext_ln69_fu_444_p1 = j_1_reg_231;

assign zext_ln73_fu_555_p1 = select_ln73_2_reg_981_pp0_iter3_reg;

assign zext_ln82_fu_641_p1 = select_ln81_reg_1026_pp1_iter1_reg;

assign zext_ln88_1_fu_857_p1 = add_ln88_reg_1149_pp2_iter4_reg;

assign zext_ln88_fu_749_p1 = select_ln85_1_reg_1078;

assign zext_ln92_1_fu_853_p1 = add_ln92_reg_1125_pp2_iter4_reg;

assign zext_ln92_fu_817_p1 = select_ln86_2_reg_1119;

assign zext_ln97_1_fu_919_p1 = add_ln97_fu_914_p2;

assign zext_ln97_fu_910_p1 = j_4_reg_398;

always @ (posedge ap_clk) begin
    tmp_cast_reg_935[5:0] <= 6'b000000;
    tmp_8_cast_reg_1130[5:0] <= 6'b000000;
    tmp_9_cast_reg_1205[5:0] <= 6'b000000;
    zext_ln97_1_reg_1218[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //top_nondf_kernel_cov_x1
