// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_nondf_kernel_cov_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xout_address0,
        xout_ce0,
        xout_q0,
        xin_address0,
        xin_ce0,
        xin_we0,
        xin_d0,
        grp_fu_159_p_din0,
        grp_fu_159_p_din1,
        grp_fu_159_p_dout0,
        grp_fu_159_p_ce,
        grp_fu_163_p_din0,
        grp_fu_163_p_din1,
        grp_fu_163_p_dout0,
        grp_fu_163_p_ce
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] xout_address0;
output   xout_ce0;
input  [511:0] xout_q0;
output  [11:0] xin_address0;
output   xin_ce0;
output   xin_we0;
output  [502:0] xin_d0;
output  [511:0] grp_fu_159_p_din0;
output  [513:0] grp_fu_159_p_din1;
input  [1024:0] grp_fu_159_p_dout0;
output   grp_fu_159_p_ce;
output  [511:0] grp_fu_163_p_din0;
output  [511:0] grp_fu_163_p_din1;
input  [511:0] grp_fu_163_p_dout0;
output   grp_fu_163_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg xout_ce0;
reg xin_ce0;
reg xin_we0;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [511:0] data_V_q0;
reg   [511:0] reg_330;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire   [511:0] data_V_q1;
wire    ap_CS_fsm_state20;
wire   [6:0] add_ln23_fu_335_p2;
reg   [6:0] add_ln23_reg_722;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_cast_fu_345_p3;
reg   [11:0] tmp_cast_reg_727;
wire   [6:0] add_ln24_fu_359_p2;
reg   [6:0] add_ln24_reg_735;
wire    ap_CS_fsm_state3;
reg   [11:0] data_V_addr_reg_740;
wire   [0:0] icmp_ln24_fu_380_p2;
reg   [511:0] xout_load_reg_753;
wire    ap_CS_fsm_state4;
wire   [6:0] add_ln29_fu_386_p2;
reg   [6:0] add_ln29_reg_758;
wire    ap_CS_fsm_state6;
wire   [11:0] zext_ln29_1_fu_397_p1;
reg   [11:0] zext_ln29_1_reg_763;
reg   [5:0] mean_V_addr_reg_771;
wire   [0:0] icmp_ln29_fu_401_p2;
wire   [6:0] add_ln32_fu_407_p2;
reg   [6:0] add_ln32_reg_776;
wire    ap_CS_fsm_state7;
wire   [511:0] grp_fu_452_p2;
wire    ap_CS_fsm_state10;
wire   [6:0] add_ln37_fu_458_p2;
reg   [6:0] add_ln37_reg_794;
wire    ap_CS_fsm_state11;
wire   [11:0] tmp_13_cast_fu_468_p3;
reg   [11:0] tmp_13_cast_reg_799;
wire   [6:0] add_ln38_fu_482_p2;
reg   [6:0] add_ln38_reg_807;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln38_fu_488_p1;
reg   [63:0] zext_ln38_reg_812;
reg   [11:0] data_V_addr_6_reg_817;
wire    ap_CS_fsm_state14;
wire   [511:0] grp_fu_516_p2;
reg   [511:0] sub_ln692_reg_835;
wire    ap_CS_fsm_state15;
wire   [6:0] add_ln41_fu_522_p2;
reg   [6:0] add_ln41_reg_840;
wire    ap_CS_fsm_state17;
wire   [11:0] zext_ln44_fu_528_p1;
reg   [11:0] zext_ln44_reg_845;
wire   [11:0] tmp_15_cast_fu_536_p3;
reg   [11:0] tmp_15_cast_reg_851;
wire   [6:0] add_ln42_fu_550_p2;
reg   [6:0] add_ln42_reg_859;
wire    ap_CS_fsm_state18;
wire   [11:0] zext_ln44_1_fu_556_p1;
reg   [11:0] zext_ln44_1_reg_864;
reg   [11:0] cov_V_addr_reg_869;
reg   [11:0] cov_V_addr_4_reg_874;
wire   [6:0] add_ln45_fu_598_p2;
reg   [6:0] add_ln45_reg_882;
wire    ap_CS_fsm_state19;
wire   [1024:0] zext_ln693_fu_642_p1;
wire   [0:0] icmp_ln45_fu_636_p2;
reg  signed [511:0] data_V_load_6_reg_905;
wire   [511:0] grp_fu_652_p2;
reg   [511:0] mul_ln691_reg_910;
wire    ap_CS_fsm_state25;
wire   [511:0] grp_fu_657_p2;
wire    ap_CS_fsm_state27;
reg   [502:0] trunc_ln693_2_reg_920;
wire    ap_CS_fsm_state31;
wire   [6:0] add_ln51_fu_672_p2;
reg   [6:0] add_ln51_reg_925;
wire    ap_CS_fsm_state34;
wire   [11:0] tmp_16_cast_fu_682_p3;
reg   [11:0] tmp_16_cast_reg_930;
wire   [6:0] add_ln52_fu_696_p2;
reg   [6:0] add_ln52_reg_938;
wire    ap_CS_fsm_state35;
wire   [63:0] zext_ln53_1_fu_711_p1;
reg   [63:0] zext_ln53_1_reg_943;
wire   [502:0] cov_V_q0;
reg   [502:0] cov_V_load_reg_956;
wire    ap_CS_fsm_state36;
reg   [5:0] mean_V_address0;
reg    mean_V_ce0;
reg    mean_V_we0;
wire   [501:0] mean_V_d0;
wire   [501:0] mean_V_q0;
reg   [11:0] data_V_address0;
reg    data_V_ce0;
reg    data_V_we0;
reg   [511:0] data_V_d0;
wire   [11:0] data_V_address1;
reg    data_V_ce1;
reg   [11:0] cov_V_address0;
reg    cov_V_ce0;
reg    cov_V_we0;
reg   [6:0] i_reg_185;
reg   [6:0] j_5_reg_196;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln23_fu_353_p2;
reg   [6:0] j_reg_207;
wire   [0:0] icmp_ln32_fu_435_p2;
reg   [6:0] i_6_reg_218;
reg   [511:0] add_i2614_reg_229;
reg   [6:0] i_5_reg_241;
wire   [0:0] icmp_ln38_fu_506_p2;
reg   [6:0] j_6_reg_252;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln37_fu_476_p2;
reg   [6:0] i_7_reg_263;
wire   [0:0] icmp_ln42_fu_592_p2;
reg   [6:0] j_7_reg_274;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln41_fu_544_p2;
reg   [6:0] k_reg_285;
reg   [511:0] conv3_i1613_reg_296;
reg   [6:0] i_8_reg_308;
wire   [0:0] icmp_ln52_fu_716_p2;
reg   [6:0] j_8_reg_319;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln51_fu_690_p2;
wire   [63:0] zext_ln25_1_fu_374_p1;
wire   [63:0] zext_ln29_fu_392_p1;
wire   [63:0] zext_ln691_fu_430_p1;
wire   [63:0] zext_ln692_2_fu_501_p1;
wire   [63:0] zext_ln44_2_fu_565_p1;
wire   [63:0] zext_ln48_fu_587_p1;
wire   [63:0] zext_ln215_fu_621_p1;
wire   [63:0] zext_ln215_2_fu_631_p1;
wire    ap_CS_fsm_state32;
wire   [5:0] trunc_ln25_fu_341_p1;
wire   [11:0] zext_ln25_fu_365_p1;
wire   [11:0] add_ln25_fu_369_p2;
wire   [5:0] trunc_ln691_fu_413_p1;
wire   [11:0] tmp_14_cast_fu_417_p3;
wire   [11:0] add_ln691_3_fu_425_p2;
wire    ap_CS_fsm_state9;
wire   [5:0] trunc_ln692_fu_464_p1;
wire   [11:0] zext_ln692_fu_492_p1;
wire   [11:0] add_ln692_fu_496_p2;
wire   [511:0] grp_fu_516_p1;
wire   [5:0] trunc_ln44_fu_532_p1;
wire   [11:0] add_ln44_fu_560_p2;
wire   [5:0] trunc_ln48_fu_570_p1;
wire   [11:0] tmp_17_cast_fu_574_p3;
wire   [11:0] add_ln48_fu_582_p2;
wire   [5:0] trunc_ln215_fu_604_p1;
wire   [11:0] tmp_20_cast_fu_608_p3;
wire   [11:0] add_ln215_fu_616_p2;
wire   [11:0] add_ln215_2_fu_626_p2;
wire   [511:0] grp_fu_646_p0;
wire   [513:0] grp_fu_646_p1;
wire  signed [511:0] grp_fu_652_p0;
wire  signed [511:0] grp_fu_652_p1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state26;
wire   [1024:0] grp_fu_646_p2;
wire   [5:0] trunc_ln53_fu_678_p1;
wire   [11:0] zext_ln53_fu_702_p1;
wire   [11:0] add_ln53_fu_706_p2;
wire    grp_fu_646_ce;
wire    grp_fu_652_ce;
reg   [36:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
end

top_nondf_kernel_cov_x0_mean_V #(
    .DataWidth( 502 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mean_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_V_address0),
    .ce0(mean_V_ce0),
    .we0(mean_V_we0),
    .d0(mean_V_d0),
    .q0(mean_V_q0)
);

top_nondf_kernel_cov_x0_data_V #(
    .DataWidth( 512 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_V_address0),
    .ce0(data_V_ce0),
    .we0(data_V_we0),
    .d0(data_V_d0),
    .q0(data_V_q0),
    .address1(data_V_address1),
    .ce1(data_V_ce1),
    .q1(data_V_q1)
);

top_nondf_kernel_cov_x0_cov_V #(
    .DataWidth( 503 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
cov_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cov_V_address0),
    .ce0(cov_V_ce0),
    .we0(cov_V_we0),
    .d0(trunc_ln693_2_reg_920),
    .q0(cov_V_q0)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U486(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_330),
    .din1(add_i2614_reg_229),
    .ce(1'b1),
    .dout(grp_fu_452_p2)
);

top_sub_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
sub_512ns_512ns_512_2_1_U487(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_330),
    .din1(grp_fu_516_p1),
    .ce(1'b1),
    .dout(grp_fu_516_p2)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U490(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln691_reg_910),
    .din1(conv3_i1613_reg_296),
    .ce(1'b1),
    .dout(grp_fu_657_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_401_p2 == 1'd0))) begin
        add_i2614_reg_229 <= 512'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        add_i2614_reg_229 <= grp_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_592_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        conv3_i1613_reg_296 <= 512'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_i1613_reg_296 <= grp_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_401_p2 == 1'd1))) begin
        i_5_reg_241 <= 7'd0;
    end else if (((icmp_ln38_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_5_reg_241 <= add_ln37_reg_794;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_401_p2 == 1'd0))) begin
        i_6_reg_218 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_6_reg_218 <= add_ln32_reg_776;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_7_reg_263 <= 7'd0;
    end else if (((icmp_ln42_fu_592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_7_reg_263 <= add_ln41_reg_840;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_544_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_8_reg_308 <= 7'd0;
    end else if (((icmp_ln52_fu_716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        i_8_reg_308 <= add_ln51_reg_925;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_185 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln24_fu_380_p2 == 1'd1))) begin
        i_reg_185 <= add_ln23_reg_722;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_5_reg_196 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_5_reg_196 <= add_ln24_reg_735;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_476_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        j_6_reg_252 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_6_reg_252 <= add_ln38_reg_807;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        j_7_reg_274 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        j_7_reg_274 <= add_ln42_reg_859;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        j_8_reg_319 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        j_8_reg_319 <= add_ln52_reg_938;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_207 <= 7'd0;
    end else if (((icmp_ln32_fu_435_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        j_reg_207 <= add_ln29_reg_758;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_592_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        k_reg_285 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        k_reg_285 <= add_ln45_reg_882;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_330 <= data_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_330 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln23_reg_722 <= add_ln23_fu_335_p2;
        tmp_cast_reg_727[11 : 6] <= tmp_cast_fu_345_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln24_reg_735 <= add_ln24_fu_359_p2;
        data_V_addr_reg_740 <= zext_ln25_1_fu_374_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln29_reg_758 <= add_ln29_fu_386_p2;
        zext_ln29_1_reg_763[6 : 0] <= zext_ln29_1_fu_397_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln32_reg_776 <= add_ln32_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln37_reg_794 <= add_ln37_fu_458_p2;
        tmp_13_cast_reg_799[11 : 6] <= tmp_13_cast_fu_468_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln38_reg_807 <= add_ln38_fu_482_p2;
        data_V_addr_6_reg_817 <= zext_ln692_2_fu_501_p1;
        zext_ln38_reg_812[6 : 0] <= zext_ln38_fu_488_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln41_reg_840 <= add_ln41_fu_522_p2;
        tmp_15_cast_reg_851[11 : 6] <= tmp_15_cast_fu_536_p3[11 : 6];
        zext_ln44_reg_845[6 : 0] <= zext_ln44_fu_528_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln42_reg_859 <= add_ln42_fu_550_p2;
        cov_V_addr_4_reg_874 <= zext_ln48_fu_587_p1;
        cov_V_addr_reg_869 <= zext_ln44_2_fu_565_p1;
        zext_ln44_1_reg_864[6 : 0] <= zext_ln44_1_fu_556_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln45_reg_882 <= add_ln45_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln51_reg_925 <= add_ln51_fu_672_p2;
        tmp_16_cast_reg_930[11 : 6] <= tmp_16_cast_fu_682_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln52_reg_938 <= add_ln52_fu_696_p2;
        zext_ln53_1_reg_943[11 : 0] <= zext_ln53_1_fu_711_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cov_V_load_reg_956 <= cov_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        data_V_load_6_reg_905 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_401_p2 == 1'd0))) begin
        mean_V_addr_reg_771 <= zext_ln29_fu_392_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        mul_ln691_reg_910 <= grp_fu_163_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sub_ln692_reg_835 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        trunc_ln693_2_reg_920 <= {{grp_fu_159_p_dout0[1024:522]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        xout_load_reg_753 <= xout_q0;
    end
end

always @ (*) begin
    if ((((icmp_ln51_fu_690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_fu_690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        cov_V_address0 = zext_ln53_1_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        cov_V_address0 = cov_V_addr_4_reg_874;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        cov_V_address0 = cov_V_addr_reg_869;
    end else begin
        cov_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        cov_V_ce0 = 1'b1;
    end else begin
        cov_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        cov_V_we0 = 1'b1;
    end else begin
        cov_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        data_V_address0 = zext_ln215_2_fu_631_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        data_V_address0 = data_V_addr_6_reg_817;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        data_V_address0 = zext_ln692_2_fu_501_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_V_address0 = zext_ln691_fu_430_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_address0 = data_V_addr_reg_740;
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        data_V_ce1 = 1'b1;
    end else begin
        data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        data_V_d0 = sub_ln692_reg_835;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_d0 = xout_load_reg_753;
    end else begin
        data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5))) begin
        data_V_we0 = 1'b1;
    end else begin
        data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mean_V_address0 = zext_ln38_reg_812;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        mean_V_address0 = mean_V_addr_reg_771;
    end else begin
        mean_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7))) begin
        mean_V_ce0 = 1'b1;
    end else begin
        mean_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_435_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        mean_V_we0 = 1'b1;
    end else begin
        mean_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        xin_ce0 = 1'b1;
    end else begin
        xin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        xin_we0 = 1'b1;
    end else begin
        xin_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xout_ce0 = 1'b1;
    end else begin
        xout_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln24_fu_380_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln32_fu_435_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln37_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln38_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln41_fu_544_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln42_fu_592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln45_fu_636_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln51_fu_690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln52_fu_716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln215_2_fu_626_p2 = (tmp_20_cast_fu_608_p3 + zext_ln44_1_reg_864);

assign add_ln215_fu_616_p2 = (tmp_20_cast_fu_608_p3 + zext_ln44_reg_845);

assign add_ln23_fu_335_p2 = (i_reg_185 + 7'd1);

assign add_ln24_fu_359_p2 = (j_5_reg_196 + 7'd1);

assign add_ln25_fu_369_p2 = (tmp_cast_reg_727 + zext_ln25_fu_365_p1);

assign add_ln29_fu_386_p2 = (j_reg_207 + 7'd1);

assign add_ln32_fu_407_p2 = (i_6_reg_218 + 7'd1);

assign add_ln37_fu_458_p2 = (i_5_reg_241 + 7'd1);

assign add_ln38_fu_482_p2 = (j_6_reg_252 + 7'd1);

assign add_ln41_fu_522_p2 = (i_7_reg_263 + 7'd1);

assign add_ln42_fu_550_p2 = (j_7_reg_274 + 7'd1);

assign add_ln44_fu_560_p2 = (tmp_15_cast_reg_851 + zext_ln44_1_fu_556_p1);

assign add_ln45_fu_598_p2 = (k_reg_285 + 7'd1);

assign add_ln48_fu_582_p2 = (tmp_17_cast_fu_574_p3 + zext_ln44_reg_845);

assign add_ln51_fu_672_p2 = (i_8_reg_308 + 7'd1);

assign add_ln52_fu_696_p2 = (j_8_reg_319 + 7'd1);

assign add_ln53_fu_706_p2 = (tmp_16_cast_reg_930 + zext_ln53_fu_702_p1);

assign add_ln691_3_fu_425_p2 = (tmp_14_cast_fu_417_p3 + zext_ln29_1_reg_763);

assign add_ln692_fu_496_p2 = (tmp_13_cast_reg_799 + zext_ln692_fu_492_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign data_V_address1 = zext_ln215_fu_621_p1;

assign grp_fu_159_p_ce = 1'b1;

assign grp_fu_159_p_din0 = zext_ln693_fu_642_p1;

assign grp_fu_159_p_din1 = 1025'd13420914291555444213063344670735861617340049462645758376137758473481022841442142819398943579005776256065095427940334033308156379276083370112559195095044101;

assign grp_fu_163_p_ce = 1'b1;

assign grp_fu_163_p_din0 = data_V_load_6_reg_905;

assign grp_fu_163_p_din1 = reg_330;

assign grp_fu_516_p1 = mean_V_q0;

assign grp_fu_646_ce = 1'b1;

assign grp_fu_646_p0 = zext_ln693_fu_642_p1;

assign grp_fu_646_p1 = 1025'd13420914291555444213063344670735861617340049462645758376137758473481022841442142819398943579005776256065095427940334033308156379276083370112559195095044101;

assign grp_fu_646_p2 = grp_fu_159_p_dout0;

assign grp_fu_652_ce = 1'b1;

assign grp_fu_652_p0 = data_V_load_6_reg_905;

assign grp_fu_652_p1 = reg_330;

assign grp_fu_652_p2 = grp_fu_163_p_dout0;

assign icmp_ln23_fu_353_p2 = ((i_reg_185 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_380_p2 = ((j_5_reg_196 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_401_p2 = ((j_reg_207 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_435_p2 = ((i_6_reg_218 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_476_p2 = ((i_5_reg_241 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_506_p2 = ((j_6_reg_252 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_544_p2 = ((i_7_reg_263 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_592_p2 = ((j_7_reg_274 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_636_p2 = ((k_reg_285 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_690_p2 = ((i_8_reg_308 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_716_p2 = ((j_8_reg_319 == 7'd64) ? 1'b1 : 1'b0);

assign mean_V_d0 = {{add_i2614_reg_229[511:10]}};

assign tmp_13_cast_fu_468_p3 = {{trunc_ln692_fu_464_p1}, {6'd0}};

assign tmp_14_cast_fu_417_p3 = {{trunc_ln691_fu_413_p1}, {6'd0}};

assign tmp_15_cast_fu_536_p3 = {{trunc_ln44_fu_532_p1}, {6'd0}};

assign tmp_16_cast_fu_682_p3 = {{trunc_ln53_fu_678_p1}, {6'd0}};

assign tmp_17_cast_fu_574_p3 = {{trunc_ln48_fu_570_p1}, {6'd0}};

assign tmp_20_cast_fu_608_p3 = {{trunc_ln215_fu_604_p1}, {6'd0}};

assign tmp_cast_fu_345_p3 = {{trunc_ln25_fu_341_p1}, {6'd0}};

assign trunc_ln215_fu_604_p1 = k_reg_285[5:0];

assign trunc_ln25_fu_341_p1 = i_reg_185[5:0];

assign trunc_ln44_fu_532_p1 = i_7_reg_263[5:0];

assign trunc_ln48_fu_570_p1 = j_7_reg_274[5:0];

assign trunc_ln53_fu_678_p1 = i_8_reg_308[5:0];

assign trunc_ln691_fu_413_p1 = i_6_reg_218[5:0];

assign trunc_ln692_fu_464_p1 = i_5_reg_241[5:0];

assign xin_address0 = zext_ln53_1_reg_943;

assign xin_d0 = cov_V_load_reg_956;

assign xout_address0 = zext_ln25_1_fu_374_p1;

assign zext_ln215_2_fu_631_p1 = add_ln215_2_fu_626_p2;

assign zext_ln215_fu_621_p1 = add_ln215_fu_616_p2;

assign zext_ln25_1_fu_374_p1 = add_ln25_fu_369_p2;

assign zext_ln25_fu_365_p1 = j_5_reg_196;

assign zext_ln29_1_fu_397_p1 = j_reg_207;

assign zext_ln29_fu_392_p1 = j_reg_207;

assign zext_ln38_fu_488_p1 = j_6_reg_252;

assign zext_ln44_1_fu_556_p1 = j_7_reg_274;

assign zext_ln44_2_fu_565_p1 = add_ln44_fu_560_p2;

assign zext_ln44_fu_528_p1 = i_7_reg_263;

assign zext_ln48_fu_587_p1 = add_ln48_fu_582_p2;

assign zext_ln53_1_fu_711_p1 = add_ln53_fu_706_p2;

assign zext_ln53_fu_702_p1 = j_8_reg_319;

assign zext_ln691_fu_430_p1 = add_ln691_3_fu_425_p2;

assign zext_ln692_2_fu_501_p1 = add_ln692_fu_496_p2;

assign zext_ln692_fu_492_p1 = j_6_reg_252;

assign zext_ln693_fu_642_p1 = conv3_i1613_reg_296;

always @ (posedge ap_clk) begin
    tmp_cast_reg_727[5:0] <= 6'b000000;
    zext_ln29_1_reg_763[11:7] <= 5'b00000;
    tmp_13_cast_reg_799[5:0] <= 6'b000000;
    zext_ln38_reg_812[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln44_reg_845[11:7] <= 5'b00000;
    tmp_15_cast_reg_851[5:0] <= 6'b000000;
    zext_ln44_1_reg_864[11:7] <= 5'b00000;
    tmp_16_cast_reg_930[5:0] <= 6'b000000;
    zext_ln53_1_reg_943[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //top_nondf_kernel_cov_x0
