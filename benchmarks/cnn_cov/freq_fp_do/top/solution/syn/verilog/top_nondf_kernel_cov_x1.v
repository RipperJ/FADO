// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_nondf_kernel_cov_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xout_address0,
        xout_ce0,
        xout_q0,
        xin_address0,
        xin_ce0,
        xin_we0,
        xin_d0,
        grp_fu_159_p_din0,
        grp_fu_159_p_din1,
        grp_fu_159_p_dout0,
        grp_fu_159_p_ce,
        grp_fu_163_p_din0,
        grp_fu_163_p_din1,
        grp_fu_163_p_dout0,
        grp_fu_163_p_ce
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 29'd65536;
parameter    ap_ST_fsm_pp0_stage1 = 29'd131072;
parameter    ap_ST_fsm_pp0_stage2 = 29'd262144;
parameter    ap_ST_fsm_pp0_stage3 = 29'd524288;
parameter    ap_ST_fsm_pp0_stage4 = 29'd1048576;
parameter    ap_ST_fsm_pp0_stage5 = 29'd2097152;
parameter    ap_ST_fsm_pp0_stage6 = 29'd4194304;
parameter    ap_ST_fsm_pp0_stage7 = 29'd8388608;
parameter    ap_ST_fsm_state35 = 29'd16777216;
parameter    ap_ST_fsm_state36 = 29'd33554432;
parameter    ap_ST_fsm_state37 = 29'd67108864;
parameter    ap_ST_fsm_state38 = 29'd134217728;
parameter    ap_ST_fsm_state39 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] xout_address0;
output   xout_ce0;
input  [511:0] xout_q0;
output  [11:0] xin_address0;
output   xin_ce0;
output   xin_we0;
output  [502:0] xin_d0;
output  [511:0] grp_fu_159_p_din0;
output  [511:0] grp_fu_159_p_din1;
input  [511:0] grp_fu_159_p_dout0;
output   grp_fu_159_p_ce;
output  [511:0] grp_fu_163_p_din0;
output  [513:0] grp_fu_163_p_din1;
input  [1024:0] grp_fu_163_p_dout0;
output   grp_fu_163_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg xout_ce0;
reg xin_ce0;
reg xin_we0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [18:0] indvar_flatten15_reg_283;
reg   [6:0] i_3_reg_295;
reg   [13:0] indvar_flatten_reg_306;
reg   [6:0] j_3_reg_317;
reg   [6:0] k_reg_328;
reg   [511:0] conv3_i1613_reg_339;
wire   [511:0] data_V_q0;
reg   [511:0] reg_372;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state19_pp0_stage2_iter0;
wire    ap_block_state27_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln85_reg_956;
wire   [6:0] add_ln67_fu_376_p2;
reg   [6:0] add_ln67_reg_837;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_cast_fu_386_p3;
reg   [11:0] tmp_cast_reg_842;
wire   [6:0] add_ln68_fu_400_p2;
reg   [6:0] add_ln68_reg_850;
wire    ap_CS_fsm_state3;
reg   [11:0] data_V_addr_reg_855;
wire   [0:0] icmp_ln68_fu_421_p2;
reg   [511:0] xout_load_reg_868;
wire    ap_CS_fsm_state4;
wire   [6:0] add_ln73_fu_427_p2;
reg   [6:0] add_ln73_reg_873;
wire    ap_CS_fsm_state6;
wire   [11:0] zext_ln73_1_fu_438_p1;
reg   [11:0] zext_ln73_1_reg_878;
reg   [5:0] mean_V_addr_reg_886;
wire   [0:0] icmp_ln73_fu_442_p2;
wire   [6:0] add_ln76_fu_448_p2;
reg   [6:0] add_ln76_reg_891;
wire    ap_CS_fsm_state7;
wire   [511:0] grp_fu_493_p2;
wire    ap_CS_fsm_state10;
wire   [6:0] add_ln81_fu_499_p2;
reg   [6:0] add_ln81_reg_909;
wire    ap_CS_fsm_state11;
wire   [11:0] tmp_3_cast_fu_509_p3;
reg   [11:0] tmp_3_cast_reg_914;
wire   [0:0] icmp_ln81_fu_517_p2;
wire   [6:0] add_ln82_fu_523_p2;
reg   [6:0] add_ln82_reg_923;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln82_fu_529_p1;
reg   [63:0] zext_ln82_reg_928;
reg   [11:0] data_V_addr_2_reg_933;
wire    ap_CS_fsm_state14;
wire   [511:0] grp_fu_557_p2;
reg   [511:0] sub_ln692_reg_951;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln85_fu_563_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state25_pp0_stage0_iter1;
wire    ap_block_state33_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln85_reg_956_pp0_iter1_reg;
wire   [6:0] select_ln85_fu_581_p3;
reg   [6:0] select_ln85_reg_960;
wire   [6:0] select_ln85_1_fu_589_p3;
reg   [6:0] select_ln85_1_reg_966;
wire   [5:0] trunc_ln88_fu_597_p1;
reg   [5:0] trunc_ln88_reg_972;
wire   [0:0] and_ln85_fu_613_p2;
reg   [0:0] and_ln85_reg_977;
wire   [0:0] or_ln86_fu_619_p2;
reg   [0:0] or_ln86_reg_982;
wire   [6:0] select_ln86_fu_625_p3;
reg   [6:0] select_ln86_reg_987;
wire   [5:0] trunc_ln215_fu_633_p1;
reg   [5:0] trunc_ln215_reg_992;
wire   [13:0] select_ln86_3_fu_643_p3;
reg   [13:0] select_ln86_3_reg_997;
wire   [6:0] select_ln86_2_fu_659_p3;
reg   [6:0] select_ln86_2_reg_1002;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state18_pp0_stage1_iter0;
wire    ap_block_state26_pp0_stage1_iter1;
wire    ap_block_state34_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [11:0] add_ln92_fu_677_p2;
reg   [11:0] add_ln92_reg_1008;
reg   [11:0] add_ln92_reg_1008_pp0_iter1_reg;
wire   [11:0] tmp_8_cast_fu_683_p3;
reg   [11:0] tmp_8_cast_reg_1013;
wire   [6:0] add_ln89_fu_701_p2;
reg   [6:0] add_ln89_reg_1023;
wire   [0:0] icmp_ln89_1_fu_706_p2;
reg   [0:0] icmp_ln89_1_reg_1028;
reg   [0:0] icmp_ln89_1_reg_1028_pp0_iter1_reg;
wire   [11:0] add_ln88_fu_722_p2;
reg   [11:0] add_ln88_reg_1032;
wire   [18:0] add_ln85_1_fu_738_p2;
reg   [18:0] add_ln85_1_reg_1042;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state20_pp0_stage3_iter0;
wire    ap_block_state28_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [511:0] select_ln86_1_fu_744_p3;
reg   [511:0] select_ln86_1_reg_1047;
reg  signed [511:0] data_V_load_3_reg_1052;
wire   [511:0] grp_fu_751_p2;
reg   [511:0] mul_ln691_reg_1057;
reg   [11:0] cov_V_addr_reg_1062;
reg   [11:0] cov_V_addr_2_reg_1067;
wire   [511:0] grp_fu_756_p2;
reg   [511:0] add_ln691_1_reg_1072;
reg    ap_enable_reg_pp0_iter1;
wire   [1024:0] zext_ln693_fu_768_p1;
reg   [502:0] trunc_ln693_1_reg_1083;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state24_pp0_stage7_iter0;
wire    ap_block_state32_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire   [6:0] add_ln95_fu_787_p2;
reg   [6:0] add_ln95_reg_1088;
wire    ap_CS_fsm_state36;
wire   [11:0] tmp_9_cast_fu_797_p3;
reg   [11:0] tmp_9_cast_reg_1093;
wire   [6:0] add_ln96_fu_811_p2;
reg   [6:0] add_ln96_reg_1101;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln97_1_fu_826_p1;
reg   [63:0] zext_ln97_1_reg_1106;
wire   [502:0] cov_V_q0;
reg   [502:0] cov_V_load_reg_1119;
wire    ap_CS_fsm_state38;
wire    ap_block_pp0_stage3_subdone;
reg    ap_condition_pp0_exit_iter0_state20;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [5:0] mean_V_address0;
reg    mean_V_ce0;
reg    mean_V_we0;
wire   [501:0] mean_V_d0;
wire   [501:0] mean_V_q0;
reg   [11:0] data_V_address0;
reg    data_V_ce0;
reg    data_V_we0;
reg   [511:0] data_V_d0;
reg   [11:0] cov_V_address0;
reg    cov_V_ce0;
reg    cov_V_we0;
reg   [6:0] i_reg_205;
reg   [6:0] j_1_reg_216;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln67_fu_394_p2;
reg   [6:0] j_reg_227;
wire   [0:0] icmp_ln76_fu_476_p2;
reg   [6:0] i_2_reg_238;
reg   [511:0] add_i2614_reg_249;
reg   [6:0] i_1_reg_261;
wire   [0:0] icmp_ln82_fu_547_p2;
reg   [6:0] j_2_reg_272;
wire    ap_CS_fsm_state16;
reg   [18:0] ap_phi_mux_indvar_flatten15_phi_fu_287_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_i_3_phi_fu_299_p4;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_310_p4;
reg   [6:0] ap_phi_mux_j_3_phi_fu_321_p4;
reg   [6:0] ap_phi_mux_k_phi_fu_332_p4;
reg   [511:0] ap_phi_mux_conv3_i1613_phi_fu_343_p4;
wire    ap_block_pp0_stage3;
reg   [6:0] i_4_reg_350;
wire   [0:0] icmp_ln96_fu_831_p2;
wire    ap_CS_fsm_state35;
reg   [6:0] j_4_reg_361;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln95_fu_805_p2;
wire   [63:0] zext_ln69_1_fu_415_p1;
wire   [63:0] zext_ln73_fu_433_p1;
wire   [63:0] zext_ln691_fu_471_p1;
wire   [63:0] zext_ln692_1_fu_542_p1;
wire   [63:0] zext_ln215_fu_696_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln215_1_fu_733_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln92_1_fu_760_p1;
wire   [63:0] zext_ln88_1_fu_764_p1;
wire   [5:0] trunc_ln69_fu_382_p1;
wire   [11:0] zext_ln69_fu_406_p1;
wire   [11:0] add_ln69_fu_410_p2;
wire   [5:0] trunc_ln691_fu_454_p1;
wire   [11:0] tmp_4_cast_fu_458_p3;
wire   [11:0] add_ln691_2_fu_466_p2;
wire    ap_CS_fsm_state9;
wire   [5:0] trunc_ln692_fu_505_p1;
wire   [11:0] zext_ln692_fu_533_p1;
wire   [11:0] add_ln692_fu_537_p2;
wire   [511:0] grp_fu_557_p1;
wire   [0:0] icmp_ln86_fu_575_p2;
wire   [6:0] add_ln85_fu_569_p2;
wire   [0:0] icmp_ln89_fu_607_p2;
wire   [0:0] xor_ln85_fu_601_p2;
wire   [13:0] add_ln86_1_fu_637_p2;
wire   [6:0] add_ln86_fu_654_p2;
wire   [5:0] trunc_ln92_fu_665_p1;
wire   [11:0] tmp_7_cast_fu_669_p3;
wire   [11:0] zext_ln88_fu_651_p1;
wire   [11:0] add_ln215_fu_690_p2;
wire   [11:0] tmp_5_cast_fu_712_p3;
wire   [11:0] zext_ln92_fu_719_p1;
wire   [11:0] add_ln215_1_fu_728_p2;
wire  signed [511:0] grp_fu_751_p0;
wire  signed [511:0] grp_fu_751_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire   [511:0] grp_fu_771_p0;
wire   [513:0] grp_fu_771_p1;
wire   [1024:0] grp_fu_771_p2;
wire    ap_block_pp0_stage7;
wire   [5:0] trunc_ln97_fu_793_p1;
wire   [11:0] zext_ln97_fu_817_p1;
wire   [11:0] add_ln97_fu_821_p2;
wire    grp_fu_751_ce;
wire    grp_fu_771_ce;
reg   [28:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state21_pp0_stage4_iter0;
wire    ap_block_state29_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state22_pp0_stage5_iter0;
wire    ap_block_state30_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state23_pp0_stage6_iter0;
wire    ap_block_state31_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

top_nondf_kernel_cov_x0_mean_V #(
    .DataWidth( 502 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mean_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_V_address0),
    .ce0(mean_V_ce0),
    .we0(mean_V_we0),
    .d0(mean_V_d0),
    .q0(mean_V_q0)
);

top_nondf_kernel_cov_x0_data_V #(
    .DataWidth( 512 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_V_address0),
    .ce0(data_V_ce0),
    .we0(data_V_we0),
    .d0(data_V_d0),
    .q0(data_V_q0)
);

top_nondf_kernel_cov_x0_cov_V #(
    .DataWidth( 503 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
cov_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cov_V_address0),
    .ce0(cov_V_ce0),
    .we0(cov_V_we0),
    .d0(trunc_ln693_1_reg_1083),
    .q0(cov_V_q0)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U1177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_372),
    .din1(add_i2614_reg_249),
    .ce(1'b1),
    .dout(grp_fu_493_p2)
);

top_sub_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
sub_512ns_512ns_512_2_1_U1178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_372),
    .din1(grp_fu_557_p1),
    .ce(1'b1),
    .dout(grp_fu_557_p2)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U1180(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln691_reg_1057),
    .din1(select_ln86_1_reg_1047),
    .ce(1'b1),
    .dout(grp_fu_756_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln73_fu_442_p2 == 1'd0))) begin
        add_i2614_reg_249 <= 512'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        add_i2614_reg_249 <= grp_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
        conv3_i1613_reg_339 <= 512'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln85_reg_956_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv3_i1613_reg_339 <= add_ln691_1_reg_1072;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln73_fu_442_p2 == 1'd1))) begin
        i_1_reg_261 <= 7'd0;
    end else if (((icmp_ln82_fu_547_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_1_reg_261 <= add_ln81_reg_909;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln73_fu_442_p2 == 1'd0))) begin
        i_2_reg_238 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_2_reg_238 <= add_ln76_reg_891;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
        i_3_reg_295 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        i_3_reg_295 <= select_ln85_1_reg_966;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i_4_reg_350 <= 7'd0;
    end else if (((icmp_ln96_fu_831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        i_4_reg_350 <= add_ln95_reg_1088;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_205 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln68_fu_421_p2 == 1'd1))) begin
        i_reg_205 <= add_ln67_reg_837;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
        indvar_flatten15_reg_283 <= 19'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        indvar_flatten15_reg_283 <= add_ln85_1_reg_1042;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
        indvar_flatten_reg_306 <= 14'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        indvar_flatten_reg_306 <= select_ln86_3_reg_997;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_216 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_1_reg_216 <= add_ln68_reg_850;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd0))) begin
        j_2_reg_272 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_2_reg_272 <= add_ln82_reg_923;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
        j_3_reg_317 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        j_3_reg_317 <= select_ln86_2_reg_1002;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        j_4_reg_361 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        j_4_reg_361 <= add_ln96_reg_1101;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_227 <= 7'd0;
    end else if (((icmp_ln76_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        j_reg_227 <= add_ln73_reg_873;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
        k_reg_328 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        k_reg_328 <= add_ln89_reg_1023;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln67_reg_837 <= add_ln67_fu_376_p2;
        tmp_cast_reg_842[11 : 6] <= tmp_cast_fu_386_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln68_reg_850 <= add_ln68_fu_400_p2;
        data_V_addr_reg_855 <= zext_ln69_1_fu_415_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln85_reg_956_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln691_1_reg_1072 <= grp_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln73_reg_873 <= add_ln73_fu_427_p2;
        zext_ln73_1_reg_878[6 : 0] <= zext_ln73_1_fu_438_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln76_reg_891 <= add_ln76_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln81_reg_909 <= add_ln81_fu_499_p2;
        tmp_3_cast_reg_914[11 : 6] <= tmp_3_cast_fu_509_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln82_reg_923 <= add_ln82_fu_523_p2;
        data_V_addr_2_reg_933 <= zext_ln692_1_fu_542_p1;
        zext_ln82_reg_928[6 : 0] <= zext_ln82_fu_529_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln85_1_reg_1042 <= add_ln85_1_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln85_reg_956 == 1'd0))) begin
        add_ln88_reg_1032 <= add_ln88_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln85_reg_956 == 1'd0))) begin
        add_ln89_reg_1023 <= add_ln89_fu_701_p2;
        select_ln86_2_reg_1002 <= select_ln86_2_fu_659_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln85_reg_956 == 1'd0))) begin
        add_ln92_reg_1008 <= add_ln92_fu_677_p2;
        icmp_ln89_1_reg_1028 <= icmp_ln89_1_fu_706_p2;
        tmp_8_cast_reg_1013[11 : 6] <= tmp_8_cast_fu_683_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln92_reg_1008_pp0_iter1_reg <= add_ln92_reg_1008;
        icmp_ln89_1_reg_1028_pp0_iter1_reg <= icmp_ln89_1_reg_1028;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln95_reg_1088 <= add_ln95_fu_787_p2;
        tmp_9_cast_reg_1093[11 : 6] <= tmp_9_cast_fu_797_p3[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln96_reg_1101 <= add_ln96_fu_811_p2;
        zext_ln97_1_reg_1106[11 : 0] <= zext_ln97_1_fu_826_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln85_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln85_reg_977 <= and_ln85_fu_613_p2;
        or_ln86_reg_982 <= or_ln86_fu_619_p2;
        select_ln85_reg_960 <= select_ln85_fu_581_p3;
        select_ln86_reg_987 <= select_ln86_fu_625_p3;
        trunc_ln215_reg_992 <= trunc_ln215_fu_633_p1;
        trunc_ln88_reg_972 <= trunc_ln88_fu_597_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln85_reg_956_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        cov_V_addr_2_reg_1067 <= zext_ln88_1_fu_764_p1;
        cov_V_addr_reg_1062 <= zext_ln92_1_fu_760_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        cov_V_load_reg_1119 <= cov_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln85_reg_956 == 1'd0))) begin
        data_V_load_3_reg_1052 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln85_reg_956 <= icmp_ln85_fu_563_p2;
        icmp_ln85_reg_956_pp0_iter1_reg <= icmp_ln85_reg_956;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln73_fu_442_p2 == 1'd0))) begin
        mean_V_addr_reg_886 <= zext_ln73_fu_433_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        mul_ln691_reg_1057 <= grp_fu_159_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln85_reg_956 == 1'd0)))) begin
        reg_372 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln85_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln85_1_reg_966 <= select_ln85_1_fu_589_p3;
        select_ln86_3_reg_997 <= select_ln86_3_fu_643_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln85_reg_956 == 1'd0))) begin
        select_ln86_1_reg_1047 <= select_ln86_1_fu_744_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sub_ln692_reg_951 <= grp_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln89_1_reg_1028_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        trunc_ln693_1_reg_1083 <= {{grp_fu_163_p_dout0[1024:522]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        xout_load_reg_868 <= xout_q0;
    end
end

always @ (*) begin
    if ((icmp_ln85_reg_956 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln95_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln85_reg_956_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_mux_conv3_i1613_phi_fu_343_p4 = add_ln691_1_reg_1072;
    end else begin
        ap_phi_mux_conv3_i1613_phi_fu_343_p4 = conv3_i1613_reg_339;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        ap_phi_mux_i_3_phi_fu_299_p4 = select_ln85_1_reg_966;
    end else begin
        ap_phi_mux_i_3_phi_fu_299_p4 = i_3_reg_295;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        ap_phi_mux_indvar_flatten15_phi_fu_287_p4 = add_ln85_1_reg_1042;
    end else begin
        ap_phi_mux_indvar_flatten15_phi_fu_287_p4 = indvar_flatten15_reg_283;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_310_p4 = select_ln86_3_reg_997;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_310_p4 = indvar_flatten_reg_306;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        ap_phi_mux_j_3_phi_fu_321_p4 = select_ln86_2_reg_1002;
    end else begin
        ap_phi_mux_j_3_phi_fu_321_p4 = j_3_reg_317;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_reg_956 == 1'd0))) begin
        ap_phi_mux_k_phi_fu_332_p4 = add_ln89_reg_1023;
    end else begin
        ap_phi_mux_k_phi_fu_332_p4 = k_reg_328;
    end
end

always @ (*) begin
    if (((icmp_ln95_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        cov_V_address0 = zext_ln97_1_fu_826_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cov_V_address0 = cov_V_addr_reg_1062;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cov_V_address0 = cov_V_addr_2_reg_1067;
    end else begin
        cov_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        cov_V_ce0 = 1'b1;
    end else begin
        cov_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln89_1_reg_1028_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln89_1_reg_1028_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        cov_V_we0 = 1'b1;
    end else begin
        cov_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        data_V_address0 = zext_ln215_1_fu_733_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_address0 = zext_ln215_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        data_V_address0 = data_V_addr_2_reg_933;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        data_V_address0 = zext_ln692_1_fu_542_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_V_address0 = zext_ln691_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_address0 = data_V_addr_reg_855;
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        data_V_d0 = sub_ln692_reg_951;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_d0 = xout_load_reg_868;
    end else begin
        data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5))) begin
        data_V_we0 = 1'b1;
    end else begin
        data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mean_V_address0 = zext_ln82_reg_928;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        mean_V_address0 = mean_V_addr_reg_886;
    end else begin
        mean_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7))) begin
        mean_V_ce0 = 1'b1;
    end else begin
        mean_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln76_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        mean_V_we0 = 1'b1;
    end else begin
        mean_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        xin_ce0 = 1'b1;
    end else begin
        xin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        xin_we0 = 1'b1;
    end else begin
        xin_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xout_ce0 = 1'b1;
    end else begin
        xout_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln67_fu_394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln68_fu_421_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln73_fu_442_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln76_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln81_fu_517_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln82_fu_547_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln85_reg_956 == 1'd1)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln85_reg_956 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln95_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln96_fu_831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln215_1_fu_728_p2 = (tmp_8_cast_reg_1013 + zext_ln92_fu_719_p1);

assign add_ln215_fu_690_p2 = (tmp_8_cast_fu_683_p3 + zext_ln88_fu_651_p1);

assign add_ln67_fu_376_p2 = (i_reg_205 + 7'd1);

assign add_ln68_fu_400_p2 = (j_1_reg_216 + 7'd1);

assign add_ln691_2_fu_466_p2 = (tmp_4_cast_fu_458_p3 + zext_ln73_1_reg_878);

assign add_ln692_fu_537_p2 = (tmp_3_cast_reg_914 + zext_ln692_fu_533_p1);

assign add_ln69_fu_410_p2 = (tmp_cast_reg_842 + zext_ln69_fu_406_p1);

assign add_ln73_fu_427_p2 = (j_reg_227 + 7'd1);

assign add_ln76_fu_448_p2 = (i_2_reg_238 + 7'd1);

assign add_ln81_fu_499_p2 = (i_1_reg_261 + 7'd1);

assign add_ln82_fu_523_p2 = (j_2_reg_272 + 7'd1);

assign add_ln85_1_fu_738_p2 = (indvar_flatten15_reg_283 + 19'd1);

assign add_ln85_fu_569_p2 = (ap_phi_mux_i_3_phi_fu_299_p4 + 7'd1);

assign add_ln86_1_fu_637_p2 = (ap_phi_mux_indvar_flatten_phi_fu_310_p4 + 14'd1);

assign add_ln86_fu_654_p2 = (select_ln85_reg_960 + 7'd1);

assign add_ln88_fu_722_p2 = (tmp_5_cast_fu_712_p3 + zext_ln92_fu_719_p1);

assign add_ln89_fu_701_p2 = (select_ln86_reg_987 + 7'd1);

assign add_ln92_fu_677_p2 = (tmp_7_cast_fu_669_p3 + zext_ln88_fu_651_p1);

assign add_ln95_fu_787_p2 = (i_4_reg_350 + 7'd1);

assign add_ln96_fu_811_p2 = (j_4_reg_361 + 7'd1);

assign add_ln97_fu_821_p2 = (tmp_9_cast_reg_1093 + zext_ln97_fu_817_p1);

assign and_ln85_fu_613_p2 = (xor_ln85_fu_601_p2 & icmp_ln89_fu_607_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_159_p_ce = 1'b1;

assign grp_fu_159_p_din0 = data_V_load_3_reg_1052;

assign grp_fu_159_p_din1 = reg_372;

assign grp_fu_163_p_ce = 1'b1;

assign grp_fu_163_p_din0 = zext_ln693_fu_768_p1;

assign grp_fu_163_p_din1 = 1025'd13420914291555444213063344670735861617340049462645758376137758473481022841442142819398943579005776256065095427940334033308156379276083370112559195095044101;

assign grp_fu_557_p1 = mean_V_q0;

assign grp_fu_751_ce = 1'b1;

assign grp_fu_751_p0 = data_V_load_3_reg_1052;

assign grp_fu_751_p1 = reg_372;

assign grp_fu_751_p2 = grp_fu_159_p_dout0;

assign grp_fu_771_ce = 1'b1;

assign grp_fu_771_p0 = zext_ln693_fu_768_p1;

assign grp_fu_771_p1 = 1025'd13420914291555444213063344670735861617340049462645758376137758473481022841442142819398943579005776256065095427940334033308156379276083370112559195095044101;

assign grp_fu_771_p2 = grp_fu_163_p_dout0;

assign icmp_ln67_fu_394_p2 = ((i_reg_205 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_421_p2 = ((j_1_reg_216 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_442_p2 = ((j_reg_227 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_476_p2 = ((i_2_reg_238 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_517_p2 = ((i_1_reg_261 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_547_p2 = ((j_2_reg_272 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_563_p2 = ((ap_phi_mux_indvar_flatten15_phi_fu_287_p4 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_575_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_310_p4 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln89_1_fu_706_p2 = ((add_ln89_fu_701_p2 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_607_p2 = ((ap_phi_mux_k_phi_fu_332_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_805_p2 = ((i_4_reg_350 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_831_p2 = ((j_4_reg_361 == 7'd64) ? 1'b1 : 1'b0);

assign mean_V_d0 = {{add_i2614_reg_249[511:10]}};

assign or_ln86_fu_619_p2 = (icmp_ln86_fu_575_p2 | and_ln85_fu_613_p2);

assign select_ln85_1_fu_589_p3 = ((icmp_ln86_fu_575_p2[0:0] == 1'b1) ? add_ln85_fu_569_p2 : ap_phi_mux_i_3_phi_fu_299_p4);

assign select_ln85_fu_581_p3 = ((icmp_ln86_fu_575_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_j_3_phi_fu_321_p4);

assign select_ln86_1_fu_744_p3 = ((or_ln86_reg_982[0:0] == 1'b1) ? 512'd0 : ap_phi_mux_conv3_i1613_phi_fu_343_p4);

assign select_ln86_2_fu_659_p3 = ((and_ln85_reg_977[0:0] == 1'b1) ? add_ln86_fu_654_p2 : select_ln85_reg_960);

assign select_ln86_3_fu_643_p3 = ((icmp_ln86_fu_575_p2[0:0] == 1'b1) ? 14'd1 : add_ln86_1_fu_637_p2);

assign select_ln86_fu_625_p3 = ((or_ln86_fu_619_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_k_phi_fu_332_p4);

assign tmp_3_cast_fu_509_p3 = {{trunc_ln692_fu_505_p1}, {6'd0}};

assign tmp_4_cast_fu_458_p3 = {{trunc_ln691_fu_454_p1}, {6'd0}};

assign tmp_5_cast_fu_712_p3 = {{trunc_ln88_reg_972}, {6'd0}};

assign tmp_7_cast_fu_669_p3 = {{trunc_ln92_fu_665_p1}, {6'd0}};

assign tmp_8_cast_fu_683_p3 = {{trunc_ln215_reg_992}, {6'd0}};

assign tmp_9_cast_fu_797_p3 = {{trunc_ln97_fu_793_p1}, {6'd0}};

assign tmp_cast_fu_386_p3 = {{trunc_ln69_fu_382_p1}, {6'd0}};

assign trunc_ln215_fu_633_p1 = select_ln86_fu_625_p3[5:0];

assign trunc_ln691_fu_454_p1 = i_2_reg_238[5:0];

assign trunc_ln692_fu_505_p1 = i_1_reg_261[5:0];

assign trunc_ln69_fu_382_p1 = i_reg_205[5:0];

assign trunc_ln88_fu_597_p1 = select_ln85_1_fu_589_p3[5:0];

assign trunc_ln92_fu_665_p1 = select_ln86_2_fu_659_p3[5:0];

assign trunc_ln97_fu_793_p1 = i_4_reg_350[5:0];

assign xin_address0 = zext_ln97_1_reg_1106;

assign xin_d0 = cov_V_load_reg_1119;

assign xor_ln85_fu_601_p2 = (icmp_ln86_fu_575_p2 ^ 1'd1);

assign xout_address0 = zext_ln69_1_fu_415_p1;

assign zext_ln215_1_fu_733_p1 = add_ln215_1_fu_728_p2;

assign zext_ln215_fu_696_p1 = add_ln215_fu_690_p2;

assign zext_ln691_fu_471_p1 = add_ln691_2_fu_466_p2;

assign zext_ln692_1_fu_542_p1 = add_ln692_fu_537_p2;

assign zext_ln692_fu_533_p1 = j_2_reg_272;

assign zext_ln693_fu_768_p1 = add_ln691_1_reg_1072;

assign zext_ln69_1_fu_415_p1 = add_ln69_fu_410_p2;

assign zext_ln69_fu_406_p1 = j_1_reg_216;

assign zext_ln73_1_fu_438_p1 = j_reg_227;

assign zext_ln73_fu_433_p1 = j_reg_227;

assign zext_ln82_fu_529_p1 = j_2_reg_272;

assign zext_ln88_1_fu_764_p1 = add_ln88_reg_1032;

assign zext_ln88_fu_651_p1 = select_ln85_1_reg_966;

assign zext_ln92_1_fu_760_p1 = add_ln92_reg_1008_pp0_iter1_reg;

assign zext_ln92_fu_719_p1 = select_ln86_2_reg_1002;

assign zext_ln97_1_fu_826_p1 = add_ln97_fu_821_p2;

assign zext_ln97_fu_817_p1 = j_4_reg_361;

always @ (posedge ap_clk) begin
    tmp_cast_reg_842[5:0] <= 6'b000000;
    zext_ln73_1_reg_878[11:7] <= 5'b00000;
    tmp_3_cast_reg_914[5:0] <= 6'b000000;
    zext_ln82_reg_928[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_8_cast_reg_1013[5:0] <= 6'b000000;
    tmp_9_cast_reg_1093[5:0] <= 6'b000000;
    zext_ln97_1_reg_1106[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //top_nondf_kernel_cov_x1
