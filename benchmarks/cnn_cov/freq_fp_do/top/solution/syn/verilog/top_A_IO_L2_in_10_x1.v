// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_A_IO_L2_in_10_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_10_x111_dout,
        fifo_A_A_IO_L2_in_10_x111_empty_n,
        fifo_A_A_IO_L2_in_10_x111_read,
        fifo_A_A_IO_L2_in_11_x112_din,
        fifo_A_A_IO_L2_in_11_x112_full_n,
        fifo_A_A_IO_L2_in_11_x112_write,
        fifo_A_PE_10_0_x146_din,
        fifo_A_PE_10_0_x146_full_n,
        fifo_A_PE_10_0_x146_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state5 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_A_A_IO_L2_in_10_x111_dout;
input   fifo_A_A_IO_L2_in_10_x111_empty_n;
output   fifo_A_A_IO_L2_in_10_x111_read;
output  [255:0] fifo_A_A_IO_L2_in_11_x112_din;
input   fifo_A_A_IO_L2_in_11_x112_full_n;
output   fifo_A_A_IO_L2_in_11_x112_write;
output  [255:0] fifo_A_PE_10_0_x146_din;
input   fifo_A_PE_10_0_x146_full_n;
output   fifo_A_PE_10_0_x146_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_A_IO_L2_in_10_x111_read;
reg fifo_A_A_IO_L2_in_11_x112_write;
reg fifo_A_PE_10_0_x146_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_A_IO_L2_in_10_x111_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_reg_528;
reg    fifo_A_A_IO_L2_in_11_x112_blk_n;
reg   [0:0] select_ln7030_1_reg_532;
reg    fifo_A_PE_10_0_x146_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_701_reg_576;
reg   [0:0] icmp_ln890_701_reg_576_pp1_iter2_reg;
reg   [10:0] indvar_flatten13_reg_143;
reg   [3:0] c3_V_reg_154;
reg   [10:0] indvar_flatten_reg_165;
reg   [4:0] c4_V_reg_176;
reg   [5:0] c5_V_41_reg_187;
reg   [15:0] indvar_flatten33_reg_198;
reg   [5:0] c5_V_reg_209;
reg   [11:0] indvar_flatten21_reg_220;
reg   [4:0] c7_V_reg_231;
wire   [10:0] add_ln890_228_fu_242_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_fu_248_p2;
wire   [0:0] select_ln7030_1_fu_286_p3;
reg   [0:0] select_ln7030_1_reg_532_pp0_iter1_reg;
wire   [3:0] select_ln890_fu_312_p3;
wire   [4:0] select_ln890_565_fu_372_p3;
wire   [8:0] add_ln7039_fu_384_p2;
reg   [8:0] add_ln7039_reg_546;
wire   [5:0] add_ln691_897_fu_390_p2;
wire   [10:0] select_ln890_568_fu_402_p3;
reg   [8:0] local_A_pong_V_addr_reg_561;
reg   [255:0] tmp_reg_566;
wire   [15:0] add_ln890_226_fu_414_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
reg    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_701_fu_420_p2;
reg   [0:0] icmp_ln890_701_reg_576_pp1_iter1_reg;
wire   [5:0] select_ln890_566_fu_438_p3;
reg   [5:0] select_ln890_566_reg_580;
wire   [3:0] trunc_ln7056_fu_478_p1;
reg   [3:0] trunc_ln7056_reg_586;
wire   [4:0] add_ln691_896_fu_482_p2;
wire   [11:0] select_ln890_567_fu_494_p3;
wire   [255:0] local_A_pong_V_q0;
reg   [255:0] local_A_pong_V_load_reg_606;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
wire   [8:0] local_A_pong_V_address0;
reg    local_A_pong_V_ce0;
reg    local_A_pong_V_ce1;
reg    local_A_pong_V_we1;
reg   [5:0] ap_phi_mux_c5_V_phi_fu_213_p4;
wire   [63:0] zext_ln7039_1_fu_410_p1;
wire   [63:0] zext_ln7056_fu_518_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln890_700_fu_260_p2;
wire   [3:0] add_ln691_fu_254_p2;
wire   [0:0] cmp_i_i72_mid1_fu_274_p2;
wire   [0:0] cmp_i_i7244_fu_280_p2;
wire   [0:0] icmp_ln89052_fu_300_p2;
wire   [0:0] xor_ln7030_fu_294_p2;
wire   [4:0] select_ln7030_fu_266_p3;
wire   [0:0] and_ln7030_fu_306_p2;
wire   [0:0] or_ln890_fu_326_p2;
wire   [4:0] add_ln691_894_fu_320_p2;
wire   [3:0] trunc_ln7039_1_fu_344_p1;
wire   [3:0] trunc_ln7039_fu_340_p1;
wire   [3:0] select_ln7030_2_fu_348_p3;
wire   [3:0] select_ln890_564_fu_356_p3;
wire   [5:0] select_ln890_563_fu_332_p3;
wire   [8:0] tmp_1320_cast_fu_364_p3;
wire   [8:0] zext_ln7039_fu_380_p1;
wire   [10:0] add_ln890_227_fu_396_p2;
wire   [0:0] icmp_ln890_702_fu_432_p2;
wire   [5:0] add_ln691_895_fu_426_p2;
wire   [0:0] icmp_ln890_703_fu_452_p2;
wire   [0:0] xor_ln890_fu_446_p2;
wire   [0:0] and_ln890_fu_458_p2;
wire   [0:0] or_ln7051_fu_464_p2;
wire   [4:0] select_ln7051_fu_470_p3;
wire   [11:0] add_ln890_fu_488_p2;
wire   [8:0] tmp_cast_fu_505_p3;
wire   [8:0] zext_ln890_fu_502_p1;
wire   [8:0] add_ln7056_fu_512_p2;
wire    ap_CS_fsm_state10;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

top_A_IO_L2_in_0_x1_local_A_pong_V #(
    .DataWidth( 256 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_A_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_pong_V_address0),
    .ce0(local_A_pong_V_ce0),
    .q0(local_A_pong_V_q0),
    .address1(local_A_pong_V_addr_reg_561),
    .ce1(local_A_pong_V_ce1),
    .we1(local_A_pong_V_we1),
    .d1(tmp_reg_566)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_248_p2 == 1'd0))) begin
        c3_V_reg_154 <= select_ln890_fu_312_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c3_V_reg_154 <= 4'd10;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_248_p2 == 1'd0))) begin
        c4_V_reg_176 <= select_ln890_565_fu_372_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c4_V_reg_176 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_248_p2 == 1'd0))) begin
        c5_V_41_reg_187 <= add_ln691_897_fu_390_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c5_V_41_reg_187 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c5_V_reg_209 <= 6'd0;
    end else if (((icmp_ln890_701_reg_576 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c5_V_reg_209 <= select_ln890_566_reg_580;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c7_V_reg_231 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_701_fu_420_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c7_V_reg_231 <= add_ln691_896_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_248_p2 == 1'd0))) begin
        indvar_flatten13_reg_143 <= add_ln890_228_fu_242_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_143 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten21_reg_220 <= 12'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_701_fu_420_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten21_reg_220 <= select_ln890_567_fu_494_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten33_reg_198 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_701_fu_420_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten33_reg_198 <= add_ln890_226_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_248_p2 == 1'd0))) begin
        indvar_flatten_reg_165 <= select_ln890_568_fu_402_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_165 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_248_p2 == 1'd0))) begin
        add_ln7039_reg_546 <= add_ln7039_fu_384_p2;
        select_ln7030_1_reg_532 <= select_ln7030_1_fu_286_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_701_reg_576 <= icmp_ln890_701_fu_420_p2;
        icmp_ln890_701_reg_576_pp1_iter1_reg <= icmp_ln890_701_reg_576;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln890_701_reg_576_pp1_iter2_reg <= icmp_ln890_701_reg_576_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_reg_528 <= icmp_ln890_fu_248_p2;
        select_ln7030_1_reg_532_pp0_iter1_reg <= select_ln7030_1_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_reg_528 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_pong_V_addr_reg_561 <= zext_ln7039_1_fu_410_p1;
        tmp_reg_566 <= fifo_A_A_IO_L2_in_10_x111_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln890_701_reg_576_pp1_iter1_reg == 1'd0))) begin
        local_A_pong_V_load_reg_606 <= local_A_pong_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_701_fu_420_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln890_566_reg_580 <= select_ln890_566_fu_438_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_701_fu_420_p2 == 1'd0))) begin
        trunc_ln7056_reg_586 <= trunc_ln7056_fu_478_p1;
    end
end

always @ (*) begin
    if ((icmp_ln890_fu_248_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_701_fu_420_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_701_reg_576 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c5_V_phi_fu_213_p4 = select_ln890_566_reg_580;
    end else begin
        ap_phi_mux_c5_V_phi_fu_213_p4 = c5_V_reg_209;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_528 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_10_x111_blk_n = fifo_A_A_IO_L2_in_10_x111_empty_n;
    end else begin
        fifo_A_A_IO_L2_in_10_x111_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_528 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_10_x111_read = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_10_x111_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln7030_1_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_11_x112_blk_n = fifo_A_A_IO_L2_in_11_x112_full_n;
    end else begin
        fifo_A_A_IO_L2_in_11_x112_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln7030_1_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_11_x112_write = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_11_x112_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_701_reg_576_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        fifo_A_PE_10_0_x146_blk_n = fifo_A_PE_10_0_x146_full_n;
    end else begin
        fifo_A_PE_10_0_x146_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_701_reg_576_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fifo_A_PE_10_0_x146_write = 1'b1;
    end else begin
        fifo_A_PE_10_0_x146_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_A_pong_V_ce0 = 1'b1;
    end else begin
        local_A_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_A_pong_V_ce1 = 1'b1;
    end else begin
        local_A_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln7030_1_reg_532_pp0_iter1_reg == 1'd1))) begin
        local_A_pong_V_we1 = 1'b1;
    end else begin
        local_A_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_fu_248_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_fu_248_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_701_fu_420_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_701_fu_420_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_894_fu_320_p2 = (select_ln7030_fu_266_p3 + 5'd1);

assign add_ln691_895_fu_426_p2 = (ap_phi_mux_c5_V_phi_fu_213_p4 + 6'd1);

assign add_ln691_896_fu_482_p2 = (select_ln7051_fu_470_p3 + 5'd1);

assign add_ln691_897_fu_390_p2 = (select_ln890_563_fu_332_p3 + 6'd1);

assign add_ln691_fu_254_p2 = (c3_V_reg_154 + 4'd1);

assign add_ln7039_fu_384_p2 = (tmp_1320_cast_fu_364_p3 + zext_ln7039_fu_380_p1);

assign add_ln7056_fu_512_p2 = (tmp_cast_fu_505_p3 + zext_ln890_fu_502_p1);

assign add_ln890_226_fu_414_p2 = (indvar_flatten33_reg_198 + 16'd1);

assign add_ln890_227_fu_396_p2 = (indvar_flatten_reg_165 + 11'd1);

assign add_ln890_228_fu_242_p2 = (indvar_flatten13_reg_143 + 11'd1);

assign add_ln890_fu_488_p2 = (indvar_flatten21_reg_220 + 12'd1);

assign and_ln7030_fu_306_p2 = (xor_ln7030_fu_294_p2 & icmp_ln89052_fu_300_p2);

assign and_ln890_fu_458_p2 = (xor_ln890_fu_446_p2 & icmp_ln890_703_fu_452_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln7030_1_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_11_x112_full_n == 1'b0)) | ((icmp_ln890_reg_528 == 1'd0) & (fifo_A_A_IO_L2_in_10_x111_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln7030_1_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_11_x112_full_n == 1'b0)) | ((icmp_ln890_reg_528 == 1'd0) & (fifo_A_A_IO_L2_in_10_x111_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln7030_1_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_11_x112_full_n == 1'b0)) | ((icmp_ln890_reg_528 == 1'd0) & (fifo_A_A_IO_L2_in_10_x111_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln890_701_reg_576_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_10_0_x146_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln890_701_reg_576_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_10_0_x146_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln890_701_reg_576_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_10_0_x146_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((select_ln7030_1_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_11_x112_full_n == 1'b0)) | ((icmp_ln890_reg_528 == 1'd0) & (fifo_A_A_IO_L2_in_10_x111_empty_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3 = ((icmp_ln890_701_reg_576_pp1_iter2_reg == 1'd0) & (fifo_A_PE_10_0_x146_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmp_i_i7244_fu_280_p2 = ((c3_V_reg_154 == 4'd10) ? 1'b1 : 1'b0);

assign cmp_i_i72_mid1_fu_274_p2 = ((add_ln691_fu_254_p2 == 4'd10) ? 1'b1 : 1'b0);

assign fifo_A_A_IO_L2_in_11_x112_din = fifo_A_A_IO_L2_in_10_x111_dout;

assign fifo_A_PE_10_0_x146_din = local_A_pong_V_load_reg_606;

assign icmp_ln89052_fu_300_p2 = ((c5_V_41_reg_187 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_700_fu_260_p2 = ((indvar_flatten_reg_165 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_701_fu_420_p2 = ((indvar_flatten33_reg_198 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln890_702_fu_432_p2 = ((indvar_flatten21_reg_220 == 12'd1024) ? 1'b1 : 1'b0);

assign icmp_ln890_703_fu_452_p2 = ((c7_V_reg_231 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_248_p2 = ((indvar_flatten13_reg_143 == 11'd1536) ? 1'b1 : 1'b0);

assign local_A_pong_V_address0 = zext_ln7056_fu_518_p1;

assign or_ln7051_fu_464_p2 = (icmp_ln890_702_fu_432_p2 | and_ln890_fu_458_p2);

assign or_ln890_fu_326_p2 = (icmp_ln890_700_fu_260_p2 | and_ln7030_fu_306_p2);

assign select_ln7030_1_fu_286_p3 = ((icmp_ln890_700_fu_260_p2[0:0] == 1'b1) ? cmp_i_i72_mid1_fu_274_p2 : cmp_i_i7244_fu_280_p2);

assign select_ln7030_2_fu_348_p3 = ((icmp_ln890_700_fu_260_p2[0:0] == 1'b1) ? 4'd0 : trunc_ln7039_1_fu_344_p1);

assign select_ln7030_fu_266_p3 = ((icmp_ln890_700_fu_260_p2[0:0] == 1'b1) ? 5'd0 : c4_V_reg_176);

assign select_ln7051_fu_470_p3 = ((or_ln7051_fu_464_p2[0:0] == 1'b1) ? 5'd0 : c7_V_reg_231);

assign select_ln890_563_fu_332_p3 = ((or_ln890_fu_326_p2[0:0] == 1'b1) ? 6'd0 : c5_V_41_reg_187);

assign select_ln890_564_fu_356_p3 = ((and_ln7030_fu_306_p2[0:0] == 1'b1) ? trunc_ln7039_fu_340_p1 : select_ln7030_2_fu_348_p3);

assign select_ln890_565_fu_372_p3 = ((and_ln7030_fu_306_p2[0:0] == 1'b1) ? add_ln691_894_fu_320_p2 : select_ln7030_fu_266_p3);

assign select_ln890_566_fu_438_p3 = ((icmp_ln890_702_fu_432_p2[0:0] == 1'b1) ? add_ln691_895_fu_426_p2 : ap_phi_mux_c5_V_phi_fu_213_p4);

assign select_ln890_567_fu_494_p3 = ((icmp_ln890_702_fu_432_p2[0:0] == 1'b1) ? 12'd1 : add_ln890_fu_488_p2);

assign select_ln890_568_fu_402_p3 = ((icmp_ln890_700_fu_260_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_227_fu_396_p2);

assign select_ln890_fu_312_p3 = ((icmp_ln890_700_fu_260_p2[0:0] == 1'b1) ? add_ln691_fu_254_p2 : c3_V_reg_154);

assign tmp_1320_cast_fu_364_p3 = {{select_ln890_564_fu_356_p3}, {5'd0}};

assign tmp_cast_fu_505_p3 = {{trunc_ln7056_reg_586}, {5'd0}};

assign trunc_ln7039_1_fu_344_p1 = c4_V_reg_176[3:0];

assign trunc_ln7039_fu_340_p1 = add_ln691_894_fu_320_p2[3:0];

assign trunc_ln7056_fu_478_p1 = select_ln7051_fu_470_p3[3:0];

assign xor_ln7030_fu_294_p2 = (icmp_ln890_700_fu_260_p2 ^ 1'd1);

assign xor_ln890_fu_446_p2 = (icmp_ln890_702_fu_432_p2 ^ 1'd1);

assign zext_ln7039_1_fu_410_p1 = add_ln7039_reg_546;

assign zext_ln7039_fu_380_p1 = select_ln890_563_fu_332_p3;

assign zext_ln7056_fu_518_p1 = add_ln7056_fu_512_p2;

assign zext_ln890_fu_502_p1 = select_ln890_566_reg_580;

endmodule //top_A_IO_L2_in_10_x1
