-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_PE_wrapper_2_1_x2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_A_PE_2_1_x223_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fifo_A_PE_2_1_x223_empty_n : IN STD_LOGIC;
    fifo_A_PE_2_1_x223_read : OUT STD_LOGIC;
    fifo_A_PE_2_2_x224_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_A_PE_2_2_x224_full_n : IN STD_LOGIC;
    fifo_A_PE_2_2_x224_write : OUT STD_LOGIC;
    fifo_B_PE_2_1_x271_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_PE_2_1_x271_empty_n : IN STD_LOGIC;
    fifo_B_PE_2_1_x271_read : OUT STD_LOGIC;
    fifo_B_PE_3_1_x272_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_PE_3_1_x272_full_n : IN STD_LOGIC;
    fifo_B_PE_3_1_x272_write : OUT STD_LOGIC;
    fifo_C_drain_PE_2_1_x298_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_PE_2_1_x298_full_n : IN STD_LOGIC;
    fifo_C_drain_PE_2_1_x298_write : OUT STD_LOGIC );
end;


architecture behav of top_PE_wrapper_2_1_x2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv12_400 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_A_PE_2_1_x223_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal fifo_A_PE_2_2_x224_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal fifo_B_PE_2_1_x271_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal fifo_B_PE_3_1_x272_blk_n : STD_LOGIC;
    signal fifo_C_drain_PE_2_1_x298_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal select_ln15749_1_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal c8_V_reg_478 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_reg_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_A_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state12_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state16_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_state20_pp2_stage1_iter2 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal icmp_ln890_159_reg_1102 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_A_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal local_B_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_B_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln691_fu_522_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln691_reg_919 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln890_fu_528_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln890_reg_924 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln890_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_213_fu_538_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln890_71_fu_572_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln890_71_reg_1020 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln890_157_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_157_reg_1028 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_155_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln15749_1_fu_608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_fu_616_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_reg_1040 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_183_fu_659_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_183_reg_1045 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_184_fu_667_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln890_184_reg_1050 : STD_LOGIC_VECTOR (6 downto 0);
    signal local_C_addr_43_reg_1055 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_216_fu_702_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln1497_fu_738_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal icmp_ln878_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_217_fu_742_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln1497_15_fu_778_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal icmp_ln878_15_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_C_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln890_159_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state11_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln890_159_reg_1102_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_159_reg_1102_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_218_fu_794_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_218_reg_1116 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_block_state14_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state18_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal grp_fu_506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_501_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_block_state13_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state17_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_state21_pp2_stage2_iter2 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal add_ln691_219_fu_805_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_219_reg_1131 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_185_fu_816_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln890_185_reg_1136 : STD_LOGIC_VECTOR (11 downto 0);
    signal u6_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal u6_43_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal u5_reg_1151 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal u4_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal u5_43_reg_1161 : STD_LOGIC_VECTOR (31 downto 0);
    signal u4_43_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal u3_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal u2_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal u3_43_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal u2_43_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_condition_pp2_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter1_state16 : STD_LOGIC;
    signal local_A_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_0_ce0 : STD_LOGIC;
    signal local_A_0_we0 : STD_LOGIC;
    signal local_A_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_A_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_0_ce1 : STD_LOGIC;
    signal local_B_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_B_0_ce0 : STD_LOGIC;
    signal local_B_0_we0 : STD_LOGIC;
    signal local_B_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_B_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_B_0_ce1 : STD_LOGIC;
    signal local_C_ce0 : STD_LOGIC;
    signal local_C_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal local_C_ce1 : STD_LOGIC;
    signal local_C_we1 : STD_LOGIC;
    signal local_C_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c6_V_reg_358 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln890_156_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c7_V_reg_369 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten13_reg_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state26 : BOOLEAN;
    signal c5_V_reg_391 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_402 : STD_LOGIC_VECTOR (11 downto 0);
    signal c6_V_43_reg_414 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_43_reg_426 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_V_reg_438 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_449 : STD_LOGIC_VECTOR (255 downto 0);
    signal n_V_15_reg_458 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_15_reg_469 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_mux_c8_V_phi_fu_482_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_empty_phi_fu_494_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal zext_ln15744_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_15_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_30_fu_788_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state22 : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln15744_fu_544_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_121_cast_fu_548_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15744_fu_556_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_214_fu_584_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp_i_i_mid1_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i144_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_158_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln15749_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln15749_fu_624_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln15749_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln890_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_215_fu_648_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_1415_fu_679_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_122_cast_fu_683_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln890_29_fu_675_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_1416_fu_691_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_fu_719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_728_p4 : STD_LOGIC_VECTOR (223 downto 0);
    signal u_15_fu_759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_15_fu_768_p4 : STD_LOGIC_VECTOR (223 downto 0);
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal add_ln890_fu_810_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal v1_V_fu_823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_769_fu_827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_768_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_767_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_766_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_765_fu_839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_764_fu_842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_fu_846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_V_43_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_776_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_775_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_774_fu_881_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_773_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_772_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_771_fu_890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_770_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_fadd_32ns_32ns_32_5_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_PE_wrapper_0_0_x2_local_A_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_PE_wrapper_0_0_x0_local_C IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    local_A_0_U : component top_PE_wrapper_0_0_x2_local_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_0_address0,
        ce0 => local_A_0_ce0,
        we0 => local_A_0_we0,
        d0 => local_A_0_d0,
        q0 => local_A_0_q0,
        address1 => local_A_0_address1,
        ce1 => local_A_0_ce1,
        q1 => local_A_0_q1);

    local_B_0_U : component top_PE_wrapper_0_0_x2_local_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_B_0_address0,
        ce0 => local_B_0_ce0,
        we0 => local_B_0_we0,
        d0 => local_B_0_d0,
        q0 => local_B_0_q0,
        address1 => local_B_0_address1,
        ce1 => local_B_0_ce1,
        q1 => local_B_0_q1);

    local_C_U : component top_PE_wrapper_0_0_x0_local_C
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_addr_43_reg_1055,
        ce0 => local_C_ce0,
        q0 => local_C_q0,
        address1 => local_C_address1,
        ce1 => local_C_ce1,
        we1 => local_C_we1,
        d1 => local_C_d1);

    fadd_32ns_32ns_32_5_no_dsp_1_U1274 : component top_fadd_32ns_32ns_32_5_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_phi_mux_empty_phi_fu_494_p4,
        din1 => mul_reg_1121,
        ce => ap_const_logic_1,
        dout => grp_fu_501_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1275 : component top_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_510,
        din1 => reg_516,
        ce => ap_const_logic_1,
        dout => grp_fu_506_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_155_fu_578_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp2_flush_enable)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter1_state16) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter1_state16) and (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_subdone))))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
                elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_subdone)))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c5_V_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                c5_V_reg_391 <= select_ln890_reg_1040;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_1))) then 
                c5_V_reg_391 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    c6_V_43_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                c6_V_43_reg_414 <= select_ln890_184_reg_1050;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_1))) then 
                c6_V_43_reg_414 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    c6_V_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c6_V_reg_358 <= ap_const_lv7_0;
            elsif (((icmp_ln890_156_fu_566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c6_V_reg_358 <= add_ln691_reg_919;
            end if; 
        end if;
    end process;

    c7_V_43_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                c7_V_43_reg_426 <= add_ln691_219_reg_1131;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_1))) then 
                c7_V_43_reg_426 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    c7_V_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_0))) then 
                c7_V_reg_369 <= ap_const_lv5_0;
            elsif (((icmp_ln890_156_fu_566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c7_V_reg_369 <= add_ln691_213_fu_538_p2;
            end if; 
        end if;
    end process;

    c8_V_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                c8_V_reg_478 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln890_159_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                c8_V_reg_478 <= add_ln691_218_reg_1116;
            end if; 
        end if;
    end process;

    empty_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                empty_reg_490 <= local_C_q0;
            elsif (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln890_159_reg_1102_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001))) then 
                empty_reg_490 <= grp_fu_501_p2;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                indvar_flatten13_reg_380 <= add_ln890_71_reg_1020;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_1))) then 
                indvar_flatten13_reg_380 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                indvar_flatten_reg_402 <= select_ln890_185_reg_1136;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_1))) then 
                indvar_flatten_reg_402 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    n_V_15_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((fifo_B_PE_2_1_x271_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                n_V_15_reg_458 <= ap_const_lv4_0;
            elsif (((icmp_ln878_15_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                n_V_15_reg_458 <= add_ln691_217_fu_742_p2;
            end if; 
        end if;
    end process;

    n_V_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((fifo_A_PE_2_1_x223_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                n_V_reg_438 <= ap_const_lv4_0;
            elsif (((icmp_ln878_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                n_V_reg_438 <= add_ln691_216_fu_702_p2;
            end if; 
        end if;
    end process;

    p_Val2_15_reg_469_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((fifo_B_PE_2_1_x271_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                p_Val2_15_reg_469 <= fifo_B_PE_2_1_x271_dout;
            elsif (((icmp_ln878_15_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_Val2_15_reg_469 <= zext_ln1497_15_fu_778_p1;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((fifo_A_PE_2_1_x223_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_Val2_s_reg_449 <= fifo_A_PE_2_1_x223_dout;
            elsif (((icmp_ln878_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                p_Val2_s_reg_449 <= zext_ln1497_fu_738_p1;
            end if; 
        end if;
    end process;

    reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                reg_510 <= local_A_0_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln890_159_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                reg_510 <= local_A_0_q0;
            end if; 
        end if;
    end process;

    reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                reg_516 <= local_B_0_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln890_159_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                reg_516 <= local_B_0_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                add_ln691_218_reg_1116 <= add_ln691_218_fu_794_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                add_ln691_219_reg_1131 <= add_ln691_219_fu_805_p2;
                select_ln890_185_reg_1136 <= select_ln890_185_fu_816_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_919 <= add_ln691_fu_522_p2;
                    zext_ln890_reg_924(6 downto 0) <= zext_ln890_fu_528_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln890_71_reg_1020 <= add_ln890_71_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_155_fu_578_p2 = ap_const_lv1_0))) then
                icmp_ln890_157_reg_1028 <= icmp_ln890_157_fu_590_p2;
                select_ln15749_1_reg_1036 <= select_ln15749_1_fu_608_p3;
                select_ln890_reg_1040 <= select_ln890_fu_616_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln890_159_reg_1102 <= icmp_ln890_159_fu_782_p2;
                icmp_ln890_159_reg_1102_pp2_iter1_reg <= icmp_ln890_159_reg_1102;
                icmp_ln890_159_reg_1102_pp2_iter2_reg <= icmp_ln890_159_reg_1102_pp2_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                local_C_addr_43_reg_1055 <= p_cast_fu_697_p1(10 - 1 downto 0);
                select_ln890_183_reg_1045 <= select_ln890_183_fu_659_p3;
                select_ln890_184_reg_1050 <= select_ln890_184_fu_667_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_159_reg_1102_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001))) then
                mul_reg_1121 <= grp_fu_506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                u2_43_reg_1186 <= local_A_0_q1;
                u2_reg_1176 <= local_B_0_q1;
                u3_43_reg_1181 <= local_A_0_q0;
                u3_reg_1171 <= local_B_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                u4_43_reg_1166 <= local_A_0_q1;
                u4_reg_1156 <= local_B_0_q1;
                u5_43_reg_1161 <= local_A_0_q0;
                u5_reg_1151 <= local_B_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                u6_43_reg_1146 <= local_A_0_q0;
                u6_reg_1141 <= local_B_0_q0;
            end if;
        end if;
    end process;
    zext_ln890_reg_924(9 downto 7) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_A_PE_2_1_x223_empty_n, fifo_A_PE_2_2_x224_full_n, fifo_B_PE_2_1_x271_empty_n, fifo_B_PE_3_1_x272_full_n, fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state5, ap_CS_fsm_state26, ap_CS_fsm_state7, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_state2, icmp_ln890_fu_532_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, icmp_ln890_155_fu_578_p2, ap_CS_fsm_state6, icmp_ln878_fu_708_p2, ap_CS_fsm_state8, icmp_ln878_15_fu_748_p2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter2, ap_block_pp2_stage3_subdone, ap_enable_reg_pp2_iter1, ap_block_pp2_stage2_subdone, ap_condition_pp2_exit_iter1_state16, icmp_ln890_156_fu_566_p2, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_532_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_156_fu_566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_155_fu_578_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((fifo_A_PE_2_1_x223_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln878_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((fifo_B_PE_2_1_x271_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln878_15_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((not(((ap_const_logic_1 = ap_condition_pp2_exit_iter1_state16) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                elsif (((ap_const_logic_1 = ap_condition_pp2_exit_iter1_state16) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_state22 => 
                if ((not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln15744_fu_556_p2 <= std_logic_vector(unsigned(tmp_121_cast_fu_548_p3) + unsigned(zext_ln890_reg_924));
    add_ln691_213_fu_538_p2 <= std_logic_vector(unsigned(c7_V_reg_369) + unsigned(ap_const_lv5_1));
    add_ln691_214_fu_584_p2 <= std_logic_vector(unsigned(c5_V_reg_391) + unsigned(ap_const_lv6_1));
    add_ln691_215_fu_648_p2 <= std_logic_vector(unsigned(select_ln15749_fu_624_p3) + unsigned(ap_const_lv7_1));
    add_ln691_216_fu_702_p2 <= std_logic_vector(unsigned(n_V_reg_438) + unsigned(ap_const_lv4_1));
    add_ln691_217_fu_742_p2 <= std_logic_vector(unsigned(n_V_15_reg_458) + unsigned(ap_const_lv4_1));
    add_ln691_218_fu_794_p2 <= std_logic_vector(unsigned(c8_V_reg_478) + unsigned(ap_const_lv4_1));
    add_ln691_219_fu_805_p2 <= std_logic_vector(unsigned(select_ln890_183_reg_1045) + unsigned(ap_const_lv5_1));
    add_ln691_fu_522_p2 <= std_logic_vector(unsigned(c6_V_reg_358) + unsigned(ap_const_lv7_1));
    add_ln890_71_fu_572_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_380) + unsigned(ap_const_lv16_1));
    add_ln890_fu_810_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_402) + unsigned(ap_const_lv12_1));
    and_ln15749_fu_642_p2 <= (xor_ln15749_fu_631_p2 and icmp_ln890_158_fu_636_p2);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(11);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(14);
    ap_CS_fsm_state23 <= ap_CS_fsm(15);
    ap_CS_fsm_state24 <= ap_CS_fsm(16);
    ap_CS_fsm_state25 <= ap_CS_fsm(17);
    ap_CS_fsm_state26 <= ap_CS_fsm(18);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state11_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, select_ln15749_1_reg_1036)
    begin
                ap_block_state22 <= ((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0));
    end process;


    ap_block_state26_assign_proc : process(fifo_A_PE_2_2_x224_full_n, fifo_B_PE_3_1_x272_full_n)
    begin
                ap_block_state26 <= ((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp2_exit_iter1_state16_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_condition_pp2_exit_iter1_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter1_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_flush_enable_assign_proc : process(icmp_ln890_159_reg_1102, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln890_159_reg_1102 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_subdone))) then 
            ap_condition_pp2_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp2_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, icmp_ln890_155_fu_578_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_155_fu_578_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c8_V_phi_fu_482_p4_assign_proc : process(c8_V_reg_478, icmp_ln890_159_reg_1102, ap_CS_fsm_pp2_stage0, add_ln691_218_reg_1116, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln890_159_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_c8_V_phi_fu_482_p4 <= add_ln691_218_reg_1116;
        else 
            ap_phi_mux_c8_V_phi_fu_482_p4 <= c8_V_reg_478;
        end if; 
    end process;


    ap_phi_mux_empty_phi_fu_494_p4_assign_proc : process(empty_reg_490, icmp_ln890_159_reg_1102_pp2_iter2_reg, grp_fu_501_p2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter2, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln890_159_reg_1102_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            ap_phi_mux_empty_phi_fu_494_p4 <= grp_fu_501_p2;
        else 
            ap_phi_mux_empty_phi_fu_494_p4 <= empty_reg_490;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln890_155_fu_578_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_155_fu_578_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i144_fu_602_p2 <= "1" when (c5_V_reg_391 = ap_const_lv6_1F) else "0";
    cmp_i_i_mid1_fu_596_p2 <= "1" when (add_ln691_214_fu_584_p2 = ap_const_lv6_1F) else "0";
    empty_1415_fu_679_p1 <= select_ln890_183_fu_659_p3(4 - 1 downto 0);
    empty_1416_fu_691_p2 <= std_logic_vector(unsigned(tmp_122_cast_fu_683_p3) + unsigned(zext_ln890_29_fu_675_p1));

    fifo_A_PE_2_1_x223_blk_n_assign_proc : process(fifo_A_PE_2_1_x223_empty_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fifo_A_PE_2_1_x223_blk_n <= fifo_A_PE_2_1_x223_empty_n;
        else 
            fifo_A_PE_2_1_x223_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_PE_2_1_x223_read_assign_proc : process(fifo_A_PE_2_1_x223_empty_n, ap_CS_fsm_state5)
    begin
        if (((fifo_A_PE_2_1_x223_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fifo_A_PE_2_1_x223_read <= ap_const_logic_1;
        else 
            fifo_A_PE_2_1_x223_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_A_PE_2_2_x224_blk_n_assign_proc : process(fifo_A_PE_2_2_x224_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            fifo_A_PE_2_2_x224_blk_n <= fifo_A_PE_2_2_x224_full_n;
        else 
            fifo_A_PE_2_2_x224_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_A_PE_2_2_x224_din <= (((((((v1_V_43_fu_871_p1 & v2_V_776_fu_875_p1) & v2_V_775_fu_878_p1) & v2_V_774_fu_881_p1) & v2_V_773_fu_884_p1) & v2_V_772_fu_887_p1) & v2_V_771_fu_890_p1) & v2_V_770_fu_894_p1);

    fifo_A_PE_2_2_x224_write_assign_proc : process(fifo_A_PE_2_2_x224_full_n, fifo_B_PE_3_1_x272_full_n, ap_CS_fsm_state26)
    begin
        if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            fifo_A_PE_2_2_x224_write <= ap_const_logic_1;
        else 
            fifo_A_PE_2_2_x224_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_PE_2_1_x271_blk_n_assign_proc : process(fifo_B_PE_2_1_x271_empty_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fifo_B_PE_2_1_x271_blk_n <= fifo_B_PE_2_1_x271_empty_n;
        else 
            fifo_B_PE_2_1_x271_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_B_PE_2_1_x271_read_assign_proc : process(fifo_B_PE_2_1_x271_empty_n, ap_CS_fsm_state7)
    begin
        if (((fifo_B_PE_2_1_x271_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_B_PE_2_1_x271_read <= ap_const_logic_1;
        else 
            fifo_B_PE_2_1_x271_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_PE_3_1_x272_blk_n_assign_proc : process(fifo_B_PE_3_1_x272_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            fifo_B_PE_3_1_x272_blk_n <= fifo_B_PE_3_1_x272_full_n;
        else 
            fifo_B_PE_3_1_x272_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_B_PE_3_1_x272_din <= (((((((v1_V_fu_823_p1 & v2_V_769_fu_827_p1) & v2_V_768_fu_830_p1) & v2_V_767_fu_833_p1) & v2_V_766_fu_836_p1) & v2_V_765_fu_839_p1) & v2_V_764_fu_842_p1) & v2_V_fu_846_p1);

    fifo_B_PE_3_1_x272_write_assign_proc : process(fifo_A_PE_2_2_x224_full_n, fifo_B_PE_3_1_x272_full_n, ap_CS_fsm_state26)
    begin
        if ((not(((fifo_B_PE_3_1_x272_full_n = ap_const_logic_0) or (fifo_A_PE_2_2_x224_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            fifo_B_PE_3_1_x272_write <= ap_const_logic_1;
        else 
            fifo_B_PE_3_1_x272_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_PE_2_1_x298_blk_n_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036)
    begin
        if (((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            fifo_C_drain_PE_2_1_x298_blk_n <= fifo_C_drain_PE_2_1_x298_full_n;
        else 
            fifo_C_drain_PE_2_1_x298_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_PE_2_1_x298_din <= empty_reg_490;

    fifo_C_drain_PE_2_1_x298_write_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036)
    begin
        if ((not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (select_ln15749_1_reg_1036 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            fifo_C_drain_PE_2_1_x298_write <= ap_const_logic_1;
        else 
            fifo_C_drain_PE_2_1_x298_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln878_15_fu_748_p2 <= "1" when (n_V_15_reg_458 = ap_const_lv4_8) else "0";
    icmp_ln878_fu_708_p2 <= "1" when (n_V_reg_438 = ap_const_lv4_8) else "0";
    icmp_ln890_155_fu_578_p2 <= "1" when (indvar_flatten13_reg_380 = ap_const_lv16_8000) else "0";
    icmp_ln890_156_fu_566_p2 <= "1" when (c7_V_reg_369 = ap_const_lv5_10) else "0";
    icmp_ln890_157_fu_590_p2 <= "1" when (indvar_flatten_reg_402 = ap_const_lv12_400) else "0";
    icmp_ln890_158_fu_636_p2 <= "1" when (c7_V_43_reg_426 = ap_const_lv5_10) else "0";
    icmp_ln890_159_fu_782_p2 <= "1" when (ap_phi_mux_c8_V_phi_fu_482_p4 = ap_const_lv4_8) else "0";
    icmp_ln890_fu_532_p2 <= "1" when (c6_V_reg_358 = ap_const_lv7_40) else "0";

    local_A_0_address0_assign_proc : process(ap_CS_fsm_state22, ap_enable_reg_pp2_iter0, ap_CS_fsm_state23, ap_CS_fsm_state6, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_block_pp2_stage0, zext_ln878_fu_714_p1, zext_ln890_30_fu_788_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_A_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_A_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_A_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            local_A_0_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            local_A_0_address0 <= zext_ln890_30_fu_788_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            local_A_0_address0 <= zext_ln878_fu_714_p1(3 - 1 downto 0);
        else 
            local_A_0_address0 <= "XXX";
        end if; 
    end process;


    local_A_0_address1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_A_0_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_A_0_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_A_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            local_A_0_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        else 
            local_A_0_address1 <= "XXX";
        end if; 
    end process;


    local_A_0_ce0_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_enable_reg_pp2_iter0, ap_CS_fsm_state23, ap_CS_fsm_state6, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            local_A_0_ce0 <= ap_const_logic_1;
        else 
            local_A_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_0_ce1_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            local_A_0_ce1 <= ap_const_logic_1;
        else 
            local_A_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_A_0_d0 <= u_fu_719_p1;

    local_A_0_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln878_fu_708_p2)
    begin
        if (((icmp_ln878_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            local_A_0_we0 <= ap_const_logic_1;
        else 
            local_A_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_B_0_address0_assign_proc : process(ap_CS_fsm_state22, ap_enable_reg_pp2_iter0, ap_CS_fsm_state23, ap_CS_fsm_state8, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_block_pp2_stage0, zext_ln878_15_fu_754_p1, zext_ln890_30_fu_788_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_B_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_B_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_B_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            local_B_0_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            local_B_0_address0 <= zext_ln890_30_fu_788_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            local_B_0_address0 <= zext_ln878_15_fu_754_p1(3 - 1 downto 0);
        else 
            local_B_0_address0 <= "XXX";
        end if; 
    end process;


    local_B_0_address1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_B_0_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_B_0_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_B_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            local_B_0_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        else 
            local_B_0_address1 <= "XXX";
        end if; 
    end process;


    local_B_0_ce0_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_enable_reg_pp2_iter0, ap_CS_fsm_state23, ap_CS_fsm_state8, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            local_B_0_ce0 <= ap_const_logic_1;
        else 
            local_B_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_B_0_ce1_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            local_B_0_ce1 <= ap_const_logic_1;
        else 
            local_B_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_B_0_d0 <= u_15_fu_759_p1;

    local_B_0_we0_assign_proc : process(ap_CS_fsm_state8, icmp_ln878_15_fu_748_p2)
    begin
        if (((icmp_ln878_15_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            local_B_0_we0 <= ap_const_logic_1;
        else 
            local_B_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_address1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state3, local_C_addr_43_reg_1055, zext_ln15744_fu_561_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            local_C_address1 <= local_C_addr_43_reg_1055;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            local_C_address1 <= zext_ln15744_fu_561_p1(10 - 1 downto 0);
        else 
            local_C_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    local_C_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            local_C_ce0 <= ap_const_logic_1;
        else 
            local_C_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_ce1_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            local_C_ce1 <= ap_const_logic_1;
        else 
            local_C_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_d1_assign_proc : process(ap_CS_fsm_state22, empty_reg_490, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            local_C_d1 <= empty_reg_490;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            local_C_d1 <= ap_const_lv32_0;
        else 
            local_C_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    local_C_we1_assign_proc : process(fifo_C_drain_PE_2_1_x298_full_n, ap_CS_fsm_state22, select_ln15749_1_reg_1036, ap_CS_fsm_state3, icmp_ln890_156_fu_566_p2)
    begin
        if (((not(((select_ln15749_1_reg_1036 = ap_const_lv1_1) and (fifo_C_drain_PE_2_1_x298_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln890_156_fu_566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            local_C_we1 <= ap_const_logic_1;
        else 
            local_C_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln890_fu_654_p2 <= (icmp_ln890_157_reg_1028 or and_ln15749_fu_642_p2);
    p_cast_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_1416_fu_691_p2),64));
    r_15_fu_768_p4 <= p_Val2_15_reg_469(255 downto 32);
    r_fu_728_p4 <= p_Val2_s_reg_449(255 downto 32);
    select_ln15749_1_fu_608_p3 <= 
        cmp_i_i_mid1_fu_596_p2 when (icmp_ln890_157_fu_590_p2(0) = '1') else 
        cmp_i_i144_fu_602_p2;
    select_ln15749_fu_624_p3 <= 
        ap_const_lv7_0 when (icmp_ln890_157_reg_1028(0) = '1') else 
        c6_V_43_reg_414;
    select_ln890_183_fu_659_p3 <= 
        ap_const_lv5_0 when (or_ln890_fu_654_p2(0) = '1') else 
        c7_V_43_reg_426;
    select_ln890_184_fu_667_p3 <= 
        add_ln691_215_fu_648_p2 when (and_ln15749_fu_642_p2(0) = '1') else 
        select_ln15749_fu_624_p3;
    select_ln890_185_fu_816_p3 <= 
        ap_const_lv12_1 when (icmp_ln890_157_reg_1028(0) = '1') else 
        add_ln890_fu_810_p2;
    select_ln890_fu_616_p3 <= 
        add_ln691_214_fu_584_p2 when (icmp_ln890_157_fu_590_p2(0) = '1') else 
        c5_V_reg_391;
    tmp_121_cast_fu_548_p3 <= (trunc_ln15744_fu_544_p1 & ap_const_lv6_0);
    tmp_122_cast_fu_683_p3 <= (empty_1415_fu_679_p1 & ap_const_lv6_0);
    trunc_ln15744_fu_544_p1 <= c7_V_reg_369(4 - 1 downto 0);
    u_15_fu_759_p1 <= p_Val2_15_reg_469(32 - 1 downto 0);
    u_fu_719_p1 <= p_Val2_s_reg_449(32 - 1 downto 0);
    v1_V_43_fu_871_p1 <= reg_510;
    v1_V_fu_823_p1 <= reg_516;
    v2_V_764_fu_842_p1 <= local_B_0_q0;
    v2_V_765_fu_839_p1 <= u2_reg_1176;
    v2_V_766_fu_836_p1 <= u3_reg_1171;
    v2_V_767_fu_833_p1 <= u4_reg_1156;
    v2_V_768_fu_830_p1 <= u5_reg_1151;
    v2_V_769_fu_827_p1 <= u6_reg_1141;
    v2_V_770_fu_894_p1 <= local_A_0_q1;
    v2_V_771_fu_890_p1 <= local_A_0_q0;
    v2_V_772_fu_887_p1 <= u2_43_reg_1186;
    v2_V_773_fu_884_p1 <= u3_43_reg_1181;
    v2_V_774_fu_881_p1 <= u4_43_reg_1166;
    v2_V_775_fu_878_p1 <= u5_43_reg_1161;
    v2_V_776_fu_875_p1 <= u6_43_reg_1146;
    v2_V_fu_846_p1 <= local_B_0_q1;
    xor_ln15749_fu_631_p2 <= (icmp_ln890_157_reg_1028 xor ap_const_lv1_1);
    zext_ln1497_15_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_15_fu_768_p4),256));
    zext_ln1497_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_728_p4),256));
    zext_ln15744_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15744_fu_556_p2),64));
    zext_ln878_15_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_15_reg_458),64));
    zext_ln878_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_reg_438),64));
    zext_ln890_29_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln890_184_fu_667_p3),10));
    zext_ln890_30_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_c8_V_phi_fu_482_p4),64));
    zext_ln890_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c6_V_reg_358),10));
end behav;
