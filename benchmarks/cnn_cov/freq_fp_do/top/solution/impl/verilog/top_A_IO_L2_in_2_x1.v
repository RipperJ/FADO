// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_A_IO_L2_in_2_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_2_x13_dout,
        fifo_A_A_IO_L2_in_2_x13_empty_n,
        fifo_A_A_IO_L2_in_2_x13_read,
        fifo_A_A_IO_L2_in_3_x14_din,
        fifo_A_A_IO_L2_in_3_x14_full_n,
        fifo_A_A_IO_L2_in_3_x14_write,
        fifo_A_PE_2_0_x122_din,
        fifo_A_PE_2_0_x122_full_n,
        fifo_A_PE_2_0_x122_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state5 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_A_A_IO_L2_in_2_x13_dout;
input   fifo_A_A_IO_L2_in_2_x13_empty_n;
output   fifo_A_A_IO_L2_in_2_x13_read;
output  [255:0] fifo_A_A_IO_L2_in_3_x14_din;
input   fifo_A_A_IO_L2_in_3_x14_full_n;
output   fifo_A_A_IO_L2_in_3_x14_write;
output  [255:0] fifo_A_PE_2_0_x122_din;
input   fifo_A_PE_2_0_x122_full_n;
output   fifo_A_PE_2_0_x122_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_A_IO_L2_in_2_x13_read;
reg fifo_A_A_IO_L2_in_3_x14_write;
reg fifo_A_PE_2_0_x122_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_A_IO_L2_in_2_x13_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_reg_532;
reg    fifo_A_A_IO_L2_in_3_x14_blk_n;
reg   [0:0] select_ln6646_1_reg_536;
reg    fifo_A_PE_2_0_x122_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_665_reg_580;
reg   [0:0] icmp_ln890_665_reg_580_pp1_iter2_reg;
reg   [12:0] indvar_flatten13_reg_147;
reg   [3:0] c3_V_reg_158;
reg   [10:0] indvar_flatten_reg_169;
reg   [4:0] c4_V_reg_180;
reg   [5:0] c5_V_32_reg_191;
reg   [15:0] indvar_flatten33_reg_202;
reg   [5:0] c5_V_reg_213;
reg   [11:0] indvar_flatten21_reg_224;
reg   [4:0] c7_V_reg_235;
wire   [12:0] add_ln890_213_fu_246_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_fu_252_p2;
wire   [0:0] select_ln6646_1_fu_290_p3;
reg   [0:0] select_ln6646_1_reg_536_pp0_iter1_reg;
wire   [3:0] select_ln890_fu_316_p3;
wire   [4:0] select_ln890_532_fu_376_p3;
wire   [8:0] add_ln6655_fu_388_p2;
reg   [8:0] add_ln6655_reg_550;
wire   [5:0] add_ln691_858_fu_394_p2;
wire   [10:0] select_ln890_535_fu_406_p3;
reg   [8:0] local_A_pong_V_addr_reg_565;
reg   [255:0] tmp_reg_570;
wire   [15:0] add_ln890_211_fu_418_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
reg    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_665_fu_424_p2;
reg   [0:0] icmp_ln890_665_reg_580_pp1_iter1_reg;
wire   [5:0] select_ln890_533_fu_442_p3;
reg   [5:0] select_ln890_533_reg_584;
wire   [3:0] trunc_ln6672_fu_482_p1;
reg   [3:0] trunc_ln6672_reg_590;
wire   [4:0] add_ln691_857_fu_486_p2;
wire   [11:0] select_ln890_534_fu_498_p3;
wire   [255:0] local_A_pong_V_q0;
reg   [255:0] local_A_pong_V_load_reg_610;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
wire   [8:0] local_A_pong_V_address0;
reg    local_A_pong_V_ce0;
reg    local_A_pong_V_ce1;
reg    local_A_pong_V_we1;
reg   [5:0] ap_phi_mux_c5_V_phi_fu_217_p4;
wire   [63:0] zext_ln6655_1_fu_414_p1;
wire   [63:0] zext_ln6672_fu_522_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln890_664_fu_264_p2;
wire   [3:0] add_ln691_fu_258_p2;
wire   [0:0] cmp_i_i72_mid1_fu_278_p2;
wire   [0:0] cmp_i_i7244_fu_284_p2;
wire   [0:0] icmp_ln89052_fu_304_p2;
wire   [0:0] xor_ln6646_fu_298_p2;
wire   [4:0] select_ln6646_fu_270_p3;
wire   [0:0] and_ln6646_fu_310_p2;
wire   [0:0] or_ln890_fu_330_p2;
wire   [4:0] add_ln691_855_fu_324_p2;
wire   [3:0] trunc_ln6655_1_fu_348_p1;
wire   [3:0] trunc_ln6655_fu_344_p1;
wire   [3:0] select_ln6646_2_fu_352_p3;
wire   [3:0] select_ln890_531_fu_360_p3;
wire   [5:0] select_ln890_530_fu_336_p3;
wire   [8:0] tmp_1284_cast_fu_368_p3;
wire   [8:0] zext_ln6655_fu_384_p1;
wire   [10:0] add_ln890_212_fu_400_p2;
wire   [0:0] icmp_ln890_666_fu_436_p2;
wire   [5:0] add_ln691_856_fu_430_p2;
wire   [0:0] icmp_ln890_667_fu_456_p2;
wire   [0:0] xor_ln890_fu_450_p2;
wire   [0:0] and_ln890_fu_462_p2;
wire   [0:0] or_ln6667_fu_468_p2;
wire   [4:0] select_ln6667_fu_474_p3;
wire   [11:0] add_ln890_fu_492_p2;
wire   [8:0] tmp_cast_fu_509_p3;
wire   [8:0] zext_ln890_fu_506_p1;
wire   [8:0] add_ln6672_fu_516_p2;
wire    ap_CS_fsm_state10;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

top_A_IO_L2_in_0_x1_local_A_pong_V #(
    .DataWidth( 256 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_A_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_pong_V_address0),
    .ce0(local_A_pong_V_ce0),
    .q0(local_A_pong_V_q0),
    .address1(local_A_pong_V_addr_reg_565),
    .ce1(local_A_pong_V_ce1),
    .we1(local_A_pong_V_we1),
    .d1(tmp_reg_570)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_252_p2 == 1'd0))) begin
        c3_V_reg_158 <= select_ln890_fu_316_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c3_V_reg_158 <= 4'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_252_p2 == 1'd0))) begin
        c4_V_reg_180 <= select_ln890_532_fu_376_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c4_V_reg_180 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_252_p2 == 1'd0))) begin
        c5_V_32_reg_191 <= add_ln691_858_fu_394_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c5_V_32_reg_191 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c5_V_reg_213 <= 6'd0;
    end else if (((icmp_ln890_665_reg_580 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c5_V_reg_213 <= select_ln890_533_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c7_V_reg_235 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_665_fu_424_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c7_V_reg_235 <= add_ln691_857_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_252_p2 == 1'd0))) begin
        indvar_flatten13_reg_147 <= add_ln890_213_fu_246_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_147 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten21_reg_224 <= 12'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_665_fu_424_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten21_reg_224 <= select_ln890_534_fu_498_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten33_reg_202 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_665_fu_424_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten33_reg_202 <= add_ln890_211_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_252_p2 == 1'd0))) begin
        indvar_flatten_reg_169 <= select_ln890_535_fu_406_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_169 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_252_p2 == 1'd0))) begin
        add_ln6655_reg_550 <= add_ln6655_fu_388_p2;
        select_ln6646_1_reg_536 <= select_ln6646_1_fu_290_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_665_reg_580 <= icmp_ln890_665_fu_424_p2;
        icmp_ln890_665_reg_580_pp1_iter1_reg <= icmp_ln890_665_reg_580;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln890_665_reg_580_pp1_iter2_reg <= icmp_ln890_665_reg_580_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_reg_532 <= icmp_ln890_fu_252_p2;
        select_ln6646_1_reg_536_pp0_iter1_reg <= select_ln6646_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_A_pong_V_addr_reg_565 <= zext_ln6655_1_fu_414_p1;
        tmp_reg_570 <= fifo_A_A_IO_L2_in_2_x13_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln890_665_reg_580_pp1_iter1_reg == 1'd0))) begin
        local_A_pong_V_load_reg_610 <= local_A_pong_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_665_fu_424_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln890_533_reg_584 <= select_ln890_533_fu_442_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_665_fu_424_p2 == 1'd0))) begin
        trunc_ln6672_reg_590 <= trunc_ln6672_fu_482_p1;
    end
end

always @ (*) begin
    if ((icmp_ln890_fu_252_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_665_fu_424_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_665_reg_580 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c5_V_phi_fu_217_p4 = select_ln890_533_reg_584;
    end else begin
        ap_phi_mux_c5_V_phi_fu_217_p4 = c5_V_reg_213;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_2_x13_blk_n = fifo_A_A_IO_L2_in_2_x13_empty_n;
    end else begin
        fifo_A_A_IO_L2_in_2_x13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_2_x13_read = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_2_x13_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln6646_1_reg_536 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_3_x14_blk_n = fifo_A_A_IO_L2_in_3_x14_full_n;
    end else begin
        fifo_A_A_IO_L2_in_3_x14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln6646_1_reg_536 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_3_x14_write = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_3_x14_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_665_reg_580_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        fifo_A_PE_2_0_x122_blk_n = fifo_A_PE_2_0_x122_full_n;
    end else begin
        fifo_A_PE_2_0_x122_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_665_reg_580_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fifo_A_PE_2_0_x122_write = 1'b1;
    end else begin
        fifo_A_PE_2_0_x122_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_A_pong_V_ce0 = 1'b1;
    end else begin
        local_A_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_A_pong_V_ce1 = 1'b1;
    end else begin
        local_A_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln6646_1_reg_536_pp0_iter1_reg == 1'd1))) begin
        local_A_pong_V_we1 = 1'b1;
    end else begin
        local_A_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_fu_252_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_fu_252_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_665_fu_424_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_665_fu_424_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln6655_fu_388_p2 = (tmp_1284_cast_fu_368_p3 + zext_ln6655_fu_384_p1);

assign add_ln6672_fu_516_p2 = (tmp_cast_fu_509_p3 + zext_ln890_fu_506_p1);

assign add_ln691_855_fu_324_p2 = (select_ln6646_fu_270_p3 + 5'd1);

assign add_ln691_856_fu_430_p2 = (ap_phi_mux_c5_V_phi_fu_217_p4 + 6'd1);

assign add_ln691_857_fu_486_p2 = (select_ln6667_fu_474_p3 + 5'd1);

assign add_ln691_858_fu_394_p2 = (select_ln890_530_fu_336_p3 + 6'd1);

assign add_ln691_fu_258_p2 = (c3_V_reg_158 + 4'd1);

assign add_ln890_211_fu_418_p2 = (indvar_flatten33_reg_202 + 16'd1);

assign add_ln890_212_fu_400_p2 = (indvar_flatten_reg_169 + 11'd1);

assign add_ln890_213_fu_246_p2 = (indvar_flatten13_reg_147 + 13'd1);

assign add_ln890_fu_492_p2 = (indvar_flatten21_reg_224 + 12'd1);

assign and_ln6646_fu_310_p2 = (xor_ln6646_fu_298_p2 & icmp_ln89052_fu_304_p2);

assign and_ln890_fu_462_p2 = (xor_ln890_fu_450_p2 & icmp_ln890_667_fu_456_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln6646_1_reg_536 == 1'd0) & (fifo_A_A_IO_L2_in_3_x14_full_n == 1'b0)) | ((icmp_ln890_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_2_x13_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln6646_1_reg_536 == 1'd0) & (fifo_A_A_IO_L2_in_3_x14_full_n == 1'b0)) | ((icmp_ln890_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_2_x13_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln6646_1_reg_536 == 1'd0) & (fifo_A_A_IO_L2_in_3_x14_full_n == 1'b0)) | ((icmp_ln890_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_2_x13_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln890_665_reg_580_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_2_0_x122_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln890_665_reg_580_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_2_0_x122_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln890_665_reg_580_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_2_0_x122_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((select_ln6646_1_reg_536 == 1'd0) & (fifo_A_A_IO_L2_in_3_x14_full_n == 1'b0)) | ((icmp_ln890_reg_532 == 1'd0) & (fifo_A_A_IO_L2_in_2_x13_empty_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3 = ((icmp_ln890_665_reg_580_pp1_iter2_reg == 1'd0) & (fifo_A_PE_2_0_x122_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmp_i_i7244_fu_284_p2 = ((c3_V_reg_158 == 4'd2) ? 1'b1 : 1'b0);

assign cmp_i_i72_mid1_fu_278_p2 = ((add_ln691_fu_258_p2 == 4'd2) ? 1'b1 : 1'b0);

assign fifo_A_A_IO_L2_in_3_x14_din = fifo_A_A_IO_L2_in_2_x13_dout;

assign fifo_A_PE_2_0_x122_din = local_A_pong_V_load_reg_610;

assign icmp_ln89052_fu_304_p2 = ((c5_V_32_reg_191 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_664_fu_264_p2 = ((indvar_flatten_reg_169 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_665_fu_424_p2 = ((indvar_flatten33_reg_202 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln890_666_fu_436_p2 = ((indvar_flatten21_reg_224 == 12'd1024) ? 1'b1 : 1'b0);

assign icmp_ln890_667_fu_456_p2 = ((c7_V_reg_235 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_252_p2 = ((indvar_flatten13_reg_147 == 13'd5632) ? 1'b1 : 1'b0);

assign local_A_pong_V_address0 = zext_ln6672_fu_522_p1;

assign or_ln6667_fu_468_p2 = (icmp_ln890_666_fu_436_p2 | and_ln890_fu_462_p2);

assign or_ln890_fu_330_p2 = (icmp_ln890_664_fu_264_p2 | and_ln6646_fu_310_p2);

assign select_ln6646_1_fu_290_p3 = ((icmp_ln890_664_fu_264_p2[0:0] == 1'b1) ? cmp_i_i72_mid1_fu_278_p2 : cmp_i_i7244_fu_284_p2);

assign select_ln6646_2_fu_352_p3 = ((icmp_ln890_664_fu_264_p2[0:0] == 1'b1) ? 4'd0 : trunc_ln6655_1_fu_348_p1);

assign select_ln6646_fu_270_p3 = ((icmp_ln890_664_fu_264_p2[0:0] == 1'b1) ? 5'd0 : c4_V_reg_180);

assign select_ln6667_fu_474_p3 = ((or_ln6667_fu_468_p2[0:0] == 1'b1) ? 5'd0 : c7_V_reg_235);

assign select_ln890_530_fu_336_p3 = ((or_ln890_fu_330_p2[0:0] == 1'b1) ? 6'd0 : c5_V_32_reg_191);

assign select_ln890_531_fu_360_p3 = ((and_ln6646_fu_310_p2[0:0] == 1'b1) ? trunc_ln6655_fu_344_p1 : select_ln6646_2_fu_352_p3);

assign select_ln890_532_fu_376_p3 = ((and_ln6646_fu_310_p2[0:0] == 1'b1) ? add_ln691_855_fu_324_p2 : select_ln6646_fu_270_p3);

assign select_ln890_533_fu_442_p3 = ((icmp_ln890_666_fu_436_p2[0:0] == 1'b1) ? add_ln691_856_fu_430_p2 : ap_phi_mux_c5_V_phi_fu_217_p4);

assign select_ln890_534_fu_498_p3 = ((icmp_ln890_666_fu_436_p2[0:0] == 1'b1) ? 12'd1 : add_ln890_fu_492_p2);

assign select_ln890_535_fu_406_p3 = ((icmp_ln890_664_fu_264_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_212_fu_400_p2);

assign select_ln890_fu_316_p3 = ((icmp_ln890_664_fu_264_p2[0:0] == 1'b1) ? add_ln691_fu_258_p2 : c3_V_reg_158);

assign tmp_1284_cast_fu_368_p3 = {{select_ln890_531_fu_360_p3}, {5'd0}};

assign tmp_cast_fu_509_p3 = {{trunc_ln6672_reg_590}, {5'd0}};

assign trunc_ln6655_1_fu_348_p1 = c4_V_reg_180[3:0];

assign trunc_ln6655_fu_344_p1 = add_ln691_855_fu_324_p2[3:0];

assign trunc_ln6672_fu_482_p1 = select_ln6667_fu_474_p3[3:0];

assign xor_ln6646_fu_298_p2 = (icmp_ln890_664_fu_264_p2 ^ 1'd1);

assign xor_ln890_fu_450_p2 = (icmp_ln890_666_fu_436_p2 ^ 1'd1);

assign zext_ln6655_1_fu_414_p1 = add_ln6655_reg_550;

assign zext_ln6655_fu_384_p1 = select_ln890_530_fu_336_p3;

assign zext_ln6672_fu_522_p1 = add_ln6672_fu_516_p2;

assign zext_ln890_fu_506_p1 = select_ln890_533_reg_584;

endmodule //top_A_IO_L2_in_2_x1
