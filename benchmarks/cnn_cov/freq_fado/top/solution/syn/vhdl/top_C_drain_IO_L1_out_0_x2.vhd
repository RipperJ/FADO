-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_C_drain_IO_L1_out_0_x2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_read : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_write : OUT STD_LOGIC;
    fifo_C_drain_PE_11_0_x294_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_PE_11_0_x294_empty_n : IN STD_LOGIC;
    fifo_C_drain_PE_11_0_x294_read : OUT STD_LOGIC );
end;


architecture behav of top_C_drain_IO_L1_out_0_x2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln890_411_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_411_reg_604_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln16725_1_reg_608 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln16725_1_reg_608_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln890_411_reg_604_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_PE_11_0_x294_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal icmp_ln890_reg_569 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_182 : STD_LOGIC_VECTOR (10 downto 0);
    signal c6_V_reg_193 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_reg_204 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten22_reg_215 : STD_LOGIC_VECTOR (10 downto 0);
    signal c4_V_reg_226 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten8_reg_237 : STD_LOGIC_VECTOR (10 downto 0);
    signal c5_V_reg_248 : STD_LOGIC_VECTOR (4 downto 0);
    signal c6_V_106_reg_259 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln890_fu_280_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln890_reg_564 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln890_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_reg_569_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_fu_304_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_reg_573 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_626_fu_312_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln890_626_reg_578 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln890_fu_330_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln890_reg_583 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_C_V_addr_reg_588 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_addr_reg_588_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_565_fu_367_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_565_reg_594 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal add_ln890_253_fu_381_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op101_read_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln890_411_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln16725_1_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_627_fu_451_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_630_fu_511_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_C_V_addr_76_reg_622 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_568_fu_534_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_631_fu_546_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal local_C_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal local_C_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_ce0 : STD_LOGIC;
    signal local_C_V_ce1 : STD_LOGIC;
    signal local_C_V_we1 : STD_LOGIC;
    signal local_C_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_data_split_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_data_split_V_ce0 : STD_LOGIC;
    signal buf_data_split_V_we0 : STD_LOGIC;
    signal buf_data_split_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_V_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_data_split_V_ce1 : STD_LOGIC;
    signal buf_data_split_V_we1 : STD_LOGIC;
    signal buf_data_split_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_186_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_c6_V_phi_fu_197_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_c7_V_phi_fu_208_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp1_iter0_fifo_data_30_reg_270 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter1_fifo_data_30_reg_270 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter2_fifo_data_30_reg_270 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter3_fifo_data_30_reg_270 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16708_fu_342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_fu_363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16733_1_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln89052_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_fu_292_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_i113_mid2_v_fu_320_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_334_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln890_412_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_566_fu_393_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp_i_i_mid1_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i53_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_413_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln16725_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln16725_fu_405_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln16725_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln890_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_567_fu_459_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln16733_1_fu_483_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16733_fu_479_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln16725_2_fu_487_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_629_fu_495_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_628_fu_471_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_cast_fu_503_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln16733_fu_519_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln16733_fu_523_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln890_252_fu_540_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_C_drain_IO_L1_out_boundary_0_x1_local_C_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_C_drain_IO_L1_out_boundary_0_x0_buf_data_split_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    local_C_V_U : component top_C_drain_IO_L1_out_boundary_0_x1_local_C_V
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_V_address0,
        ce0 => local_C_V_ce0,
        q0 => local_C_V_q0,
        address1 => local_C_V_addr_reg_588_pp0_iter1_reg,
        ce1 => local_C_V_ce1,
        we1 => local_C_V_we1,
        d1 => local_C_V_d1);

    buf_data_split_V_U : component top_C_drain_IO_L1_out_boundary_0_x0_buf_data_split_V
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_data_split_V_address0,
        ce0 => buf_data_split_V_ce0,
        we0 => buf_data_split_V_we0,
        d0 => buf_data_split_V_d0,
        q0 => buf_data_split_V_q0,
        address1 => buf_data_split_V_address1,
        ce1 => buf_data_split_V_ce1,
        we1 => buf_data_split_V_we1,
        d1 => buf_data_split_V_d1,
        q1 => buf_data_split_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter3_fifo_data_30_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
                if (((select_ln16725_1_reg_608_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln890_411_reg_604_pp1_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter3_fifo_data_30_reg_270 <= fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_dout;
                elsif (((select_ln16725_1_reg_608_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln890_411_reg_604_pp1_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter3_fifo_data_30_reg_270 <= local_C_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter3_fifo_data_30_reg_270 <= ap_phi_reg_pp1_iter2_fifo_data_30_reg_270;
                end if;
            end if; 
        end if;
    end process;

    c4_V_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c4_V_reg_226 <= ap_const_lv4_B;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                c4_V_reg_226 <= select_ln890_627_fu_451_p3;
            end if; 
        end if;
    end process;

    c5_V_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c5_V_reg_248 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                c5_V_reg_248 <= select_ln890_630_fu_511_p3;
            end if; 
        end if;
    end process;

    c6_V_106_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c6_V_106_reg_259 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                c6_V_106_reg_259 <= add_ln691_568_fu_534_p2;
            end if; 
        end if;
    end process;

    c6_V_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c6_V_reg_193 <= select_ln890_626_reg_578;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c6_V_reg_193 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    c7_V_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c7_V_reg_204 <= add_ln691_565_reg_594;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c7_V_reg_204 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten22_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten22_reg_215 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten22_reg_215 <= add_ln890_253_fu_381_p2;
            end if; 
        end if;
    end process;

    indvar_flatten8_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten8_reg_237 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten8_reg_237 <= select_ln890_631_fu_546_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_182 <= add_ln890_reg_564;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_182 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln691_565_reg_594 <= add_ln691_565_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln890_reg_564 <= add_ln890_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp1_iter1_fifo_data_30_reg_270 <= ap_phi_reg_pp1_iter0_fifo_data_30_reg_270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter2_fifo_data_30_reg_270 <= ap_phi_reg_pp1_iter1_fifo_data_30_reg_270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln890_411_reg_604 <= icmp_ln890_411_fu_387_p2;
                icmp_ln890_411_reg_604_pp1_iter1_reg <= icmp_ln890_411_reg_604;
                select_ln16725_1_reg_608_pp1_iter1_reg <= select_ln16725_1_reg_608;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln890_411_reg_604_pp1_iter2_reg <= icmp_ln890_411_reg_604_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln890_reg_569 <= icmp_ln890_fu_286_p2;
                icmp_ln890_reg_569_pp0_iter1_reg <= icmp_ln890_reg_569;
                local_C_V_addr_reg_588_pp0_iter1_reg <= local_C_V_addr_reg_588;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_0))) then
                local_C_V_addr_76_reg_622 <= zext_ln16733_1_fu_529_p1(9 - 1 downto 0);
                select_ln16725_1_reg_608 <= select_ln16725_1_fu_425_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_fu_286_p2 = ap_const_lv1_0))) then
                local_C_V_addr_reg_588 <= zext_ln16708_fu_342_p1(9 - 1 downto 0);
                select_ln890_reg_573 <= select_ln890_fu_304_p3;
                trunc_ln890_reg_583 <= trunc_ln890_fu_330_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_fu_286_p2 = ap_const_lv1_0))) then
                select_ln890_626_reg_578 <= select_ln890_626_fu_312_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp0_iter0, icmp_ln890_fu_286_p2, ap_enable_reg_pp1_iter0, icmp_ln890_411_fu_387_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_CS_fsm_pp0_stage1, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_fu_286_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_fu_286_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln890_411_fu_387_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln16733_fu_523_p2 <= std_logic_vector(unsigned(tmp_cast_fu_503_p3) + unsigned(zext_ln16733_fu_519_p1));
    add_ln691_565_fu_367_p2 <= std_logic_vector(unsigned(select_ln890_reg_573) + unsigned(ap_const_lv5_1));
    add_ln691_566_fu_393_p2 <= std_logic_vector(unsigned(c4_V_reg_226) + unsigned(ap_const_lv4_1));
    add_ln691_567_fu_459_p2 <= std_logic_vector(unsigned(select_ln16725_fu_405_p3) + unsigned(ap_const_lv5_1));
    add_ln691_568_fu_534_p2 <= std_logic_vector(unsigned(select_ln890_628_fu_471_p3) + unsigned(ap_const_lv6_1));
    add_ln691_fu_292_p2 <= std_logic_vector(unsigned(ap_phi_mux_c6_V_phi_fu_197_p4) + unsigned(ap_const_lv7_1));
    add_ln890_252_fu_540_p2 <= std_logic_vector(unsigned(indvar_flatten8_reg_237) + unsigned(ap_const_lv11_1));
    add_ln890_253_fu_381_p2 <= std_logic_vector(unsigned(indvar_flatten22_reg_215) + unsigned(ap_const_lv11_1));
    add_ln890_fu_280_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_186_p4) + unsigned(ap_const_lv11_1));
    and_ln16725_fu_445_p2 <= (xor_ln16725_fu_433_p2 and icmp_ln890_413_fu_439_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(6);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(fifo_C_drain_PE_11_0_x294_empty_n, ap_enable_reg_pp0_iter0, icmp_ln890_reg_569)
    begin
                ap_block_pp0_stage2_11001 <= ((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (fifo_C_drain_PE_11_0_x294_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(fifo_C_drain_PE_11_0_x294_empty_n, ap_enable_reg_pp0_iter0, icmp_ln890_reg_569)
    begin
                ap_block_pp0_stage2_subdone <= ((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (fifo_C_drain_PE_11_0_x294_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln890_411_reg_604_pp1_iter2_reg, ap_predicate_op101_read_state9)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln890_411_reg_604_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n = ap_const_logic_0) and (ap_predicate_op101_read_state9 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln890_411_reg_604_pp1_iter2_reg, ap_predicate_op101_read_state9)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln890_411_reg_604_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n = ap_const_logic_0) and (ap_predicate_op101_read_state9 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln890_411_reg_604_pp1_iter2_reg, ap_predicate_op101_read_state9)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln890_411_reg_604_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n = ap_const_logic_0) and (ap_predicate_op101_read_state9 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter3_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n, icmp_ln890_411_reg_604_pp1_iter2_reg)
    begin
                ap_block_state11_pp1_stage0_iter3 <= ((icmp_ln890_411_reg_604_pp1_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage2_iter0_assign_proc : process(fifo_C_drain_PE_11_0_x294_empty_n, icmp_ln890_reg_569)
    begin
                ap_block_state4_pp0_stage2_iter0 <= ((icmp_ln890_reg_569 = ap_const_lv1_0) and (fifo_C_drain_PE_11_0_x294_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter2_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n, ap_predicate_op101_read_state9)
    begin
                ap_block_state9_pp1_stage0_iter2 <= ((fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n = ap_const_logic_0) and (ap_predicate_op101_read_state9 = ap_const_boolean_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln890_fu_286_p2)
    begin
        if ((icmp_ln890_fu_286_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln890_411_fu_387_p2)
    begin
        if ((icmp_ln890_411_fu_387_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c6_V_phi_fu_197_p4_assign_proc : process(icmp_ln890_reg_569, c6_V_reg_193, ap_CS_fsm_pp0_stage0, select_ln890_626_reg_578, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_c6_V_phi_fu_197_p4 <= select_ln890_626_reg_578;
        else 
            ap_phi_mux_c6_V_phi_fu_197_p4 <= c6_V_reg_193;
        end if; 
    end process;


    ap_phi_mux_c7_V_phi_fu_208_p4_assign_proc : process(icmp_ln890_reg_569, c7_V_reg_204, ap_CS_fsm_pp0_stage0, add_ln691_565_reg_594, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_c7_V_phi_fu_208_p4 <= add_ln691_565_reg_594;
        else 
            ap_phi_mux_c7_V_phi_fu_208_p4 <= c7_V_reg_204;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_186_p4_assign_proc : process(icmp_ln890_reg_569, indvar_flatten_reg_182, add_ln890_reg_564, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_186_p4 <= add_ln890_reg_564;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_186_p4 <= indvar_flatten_reg_182;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_fifo_data_30_reg_270 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op101_read_state9_assign_proc : process(icmp_ln890_411_reg_604_pp1_iter1_reg, select_ln16725_1_reg_608_pp1_iter1_reg)
    begin
                ap_predicate_op101_read_state9 <= ((select_ln16725_1_reg_608_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln890_411_reg_604_pp1_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln890_fu_363_p1, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            buf_data_split_V_address0 <= zext_ln890_fu_363_p1(1 - 1 downto 0);
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_data_split_V_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        else 
            buf_data_split_V_address0 <= "X";
        end if; 
    end process;

    buf_data_split_V_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    buf_data_split_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_data_split_V_ce0 <= ap_const_logic_1;
        else 
            buf_data_split_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_data_split_V_ce1 <= ap_const_logic_1;
        else 
            buf_data_split_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_d0_assign_proc : process(fifo_C_drain_PE_11_0_x294_dout, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, local_C_V_q0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                buf_data_split_V_d0 <= fifo_C_drain_PE_11_0_x294_dout;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                buf_data_split_V_d0 <= local_C_V_q0(63 downto 32);
            else 
                buf_data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    buf_data_split_V_d1 <= local_C_V_q0(32 - 1 downto 0);

    buf_data_split_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, icmp_ln890_reg_569, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            buf_data_split_V_we0 <= ap_const_logic_1;
        else 
            buf_data_split_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln890_reg_569, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            buf_data_split_V_we1 <= ap_const_logic_1;
        else 
            buf_data_split_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i53_fu_419_p2 <= "1" when (c4_V_reg_226 = ap_const_lv4_B) else "0";
    cmp_i_i_mid1_fu_413_p2 <= "1" when (add_ln691_566_fu_393_p2 = ap_const_lv4_B) else "0";
    conv_i113_mid2_v_fu_320_p4 <= select_ln890_626_fu_312_p3(5 downto 1);

    fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln890_411_reg_604_pp1_iter2_reg)
    begin
        if (((icmp_ln890_411_reg_604_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_blk_n <= fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_full_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_din <= ap_phi_reg_pp1_iter3_fifo_data_30_reg_270;

    fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln890_411_reg_604_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln890_411_reg_604_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_write <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_11_x2120_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln890_411_reg_604_pp1_iter1_reg, select_ln16725_1_reg_608_pp1_iter1_reg)
    begin
        if (((select_ln16725_1_reg_608_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln890_411_reg_604_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_blk_n <= fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_read_assign_proc : process(ap_enable_reg_pp1_iter2, ap_predicate_op101_read_state9, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_predicate_op101_read_state9 = ap_const_boolean_1))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_12_x2121_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_PE_11_0_x294_blk_n_assign_proc : process(fifo_C_drain_PE_11_0_x294_empty_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, icmp_ln890_reg_569)
    begin
        if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            fifo_C_drain_PE_11_0_x294_blk_n <= fifo_C_drain_PE_11_0_x294_empty_n;
        else 
            fifo_C_drain_PE_11_0_x294_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_PE_11_0_x294_read_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, icmp_ln890_reg_569, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln890_reg_569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            fifo_C_drain_PE_11_0_x294_read <= ap_const_logic_1;
        else 
            fifo_C_drain_PE_11_0_x294_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln89052_fu_298_p2 <= "1" when (ap_phi_mux_c7_V_phi_fu_208_p4 = ap_const_lv5_10) else "0";
    icmp_ln890_411_fu_387_p2 <= "1" when (indvar_flatten22_reg_215 = ap_const_lv11_400) else "0";
    icmp_ln890_412_fu_399_p2 <= "1" when (indvar_flatten8_reg_237 = ap_const_lv11_200) else "0";
    icmp_ln890_413_fu_439_p2 <= "1" when (c6_V_106_reg_259 = ap_const_lv6_20) else "0";
    icmp_ln890_fu_286_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_186_p4 = ap_const_lv11_400) else "0";

    local_C_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, local_C_V_addr_76_reg_622, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, zext_ln16708_fu_342_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            local_C_V_address0 <= local_C_V_addr_76_reg_622;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_C_V_address0 <= zext_ln16708_fu_342_p1(9 - 1 downto 0);
        else 
            local_C_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_C_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            local_C_V_ce0 <= ap_const_logic_1;
        else 
            local_C_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_C_V_ce1 <= ap_const_logic_1;
        else 
            local_C_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_V_d1 <= (buf_data_split_V_q0 & buf_data_split_V_q1);

    local_C_V_we1_assign_proc : process(icmp_ln890_reg_569_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln890_reg_569_pp0_iter1_reg = ap_const_lv1_0))) then 
            local_C_V_we1 <= ap_const_logic_1;
        else 
            local_C_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln890_fu_465_p2 <= (icmp_ln890_412_fu_399_p2 or and_ln16725_fu_445_p2);
    select_ln16725_1_fu_425_p3 <= 
        cmp_i_i_mid1_fu_413_p2 when (icmp_ln890_412_fu_399_p2(0) = '1') else 
        cmp_i_i53_fu_419_p2;
    select_ln16725_2_fu_487_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_412_fu_399_p2(0) = '1') else 
        trunc_ln16733_1_fu_483_p1;
    select_ln16725_fu_405_p3 <= 
        ap_const_lv5_0 when (icmp_ln890_412_fu_399_p2(0) = '1') else 
        c5_V_reg_248;
    select_ln890_626_fu_312_p3 <= 
        add_ln691_fu_292_p2 when (icmp_ln89052_fu_298_p2(0) = '1') else 
        ap_phi_mux_c6_V_phi_fu_197_p4;
    select_ln890_627_fu_451_p3 <= 
        add_ln691_566_fu_393_p2 when (icmp_ln890_412_fu_399_p2(0) = '1') else 
        c4_V_reg_226;
    select_ln890_628_fu_471_p3 <= 
        ap_const_lv6_0 when (or_ln890_fu_465_p2(0) = '1') else 
        c6_V_106_reg_259;
    select_ln890_629_fu_495_p3 <= 
        trunc_ln16733_fu_479_p1 when (and_ln16725_fu_445_p2(0) = '1') else 
        select_ln16725_2_fu_487_p3;
    select_ln890_630_fu_511_p3 <= 
        add_ln691_567_fu_459_p2 when (and_ln16725_fu_445_p2(0) = '1') else 
        select_ln16725_fu_405_p3;
    select_ln890_631_fu_546_p3 <= 
        ap_const_lv11_1 when (icmp_ln890_412_fu_399_p2(0) = '1') else 
        add_ln890_252_fu_540_p2;
    select_ln890_fu_304_p3 <= 
        ap_const_lv5_0 when (icmp_ln89052_fu_298_p2(0) = '1') else 
        ap_phi_mux_c7_V_phi_fu_208_p4;
    tmp_cast_fu_503_p3 <= (select_ln890_629_fu_495_p3 & ap_const_lv5_0);
    tmp_s_fu_334_p3 <= (select_ln890_fu_304_p3 & conv_i113_mid2_v_fu_320_p4);
    trunc_ln16733_1_fu_483_p1 <= c5_V_reg_248(4 - 1 downto 0);
    trunc_ln16733_fu_479_p1 <= add_ln691_567_fu_459_p2(4 - 1 downto 0);
    trunc_ln890_fu_330_p1 <= select_ln890_626_fu_312_p3(1 - 1 downto 0);
    xor_ln16725_fu_433_p2 <= (icmp_ln890_412_fu_399_p2 xor ap_const_lv1_1);
    zext_ln16708_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_334_p3),64));
    zext_ln16733_1_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln16733_fu_523_p2),64));
    zext_ln16733_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln890_628_fu_471_p3),9));
    zext_ln890_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln890_reg_583),64));
end behav;
