// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_drain_IO_L1_out_8_x2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_dout,
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n,
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_read,
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_din,
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n,
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_write,
        fifo_C_drain_PE_3_0_x286_dout,
        fifo_C_drain_PE_3_0_x286_empty_n,
        fifo_C_drain_PE_3_0_x286_read
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_state7 = 7'd16;
parameter    ap_ST_fsm_pp1_stage0 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_dout;
input   fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n;
output   fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_read;
output  [63:0] fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_din;
input   fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n;
output   fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_write;
input  [31:0] fifo_C_drain_PE_3_0_x286_dout;
input   fifo_C_drain_PE_3_0_x286_empty_n;
output   fifo_C_drain_PE_3_0_x286_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_read;
reg fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_write;
reg fifo_C_drain_PE_3_0_x286_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_blk_n;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_257_reg_608;
reg   [0:0] icmp_ln890_257_reg_608_pp1_iter1_reg;
reg   [0:0] select_ln17165_1_reg_612;
reg   [0:0] select_ln17165_1_reg_612_pp1_iter1_reg;
reg    fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_blk_n;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] icmp_ln890_257_reg_608_pp1_iter2_reg;
reg    fifo_C_drain_PE_3_0_x286_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln890_reg_578;
reg   [10:0] indvar_flatten_reg_190;
reg   [6:0] c6_V_reg_201;
reg   [4:0] c7_V_reg_212;
reg   [12:0] indvar_flatten22_reg_223;
reg   [3:0] c4_V_reg_234;
reg   [10:0] indvar_flatten8_reg_245;
reg   [4:0] c5_V_reg_256;
reg   [5:0] c6_V_84_reg_267;
wire   [10:0] add_ln890_fu_288_p2;
reg   [10:0] add_ln890_reg_573;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_fu_294_p2;
reg   [0:0] icmp_ln890_reg_578_pp0_iter1_reg;
wire   [6:0] select_ln890_406_fu_320_p3;
reg   [6:0] select_ln890_406_reg_582;
wire   [0:0] trunc_ln890_fu_338_p1;
reg   [0:0] trunc_ln890_reg_587;
reg   [8:0] local_C_V_addr_reg_592;
reg   [8:0] local_C_V_addr_reg_592_pp0_iter1_reg;
wire   [4:0] add_ln691_345_fu_355_p2;
reg   [4:0] add_ln691_345_reg_598;
wire   [12:0] add_ln890_165_fu_390_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
reg    ap_predicate_op101_read_state9;
reg    ap_block_state9_pp1_stage0_iter2;
reg    ap_block_state11_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_257_fu_396_p2;
wire   [0:0] select_ln17165_1_fu_434_p3;
wire   [3:0] select_ln890_407_fu_460_p3;
wire   [4:0] select_ln890_410_fu_520_p3;
reg   [8:0] local_C_V_addr_10_reg_626;
wire   [5:0] add_ln691_348_fu_543_p2;
wire   [10:0] select_ln890_411_fu_555_p3;
wire   [63:0] local_C_V_q0;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_CS_fsm_state7;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg   [8:0] local_C_V_address0;
reg    local_C_V_ce0;
reg    local_C_V_ce1;
reg    local_C_V_we1;
wire   [63:0] local_C_V_d1;
reg   [0:0] buf_data_split_V_address0;
reg    buf_data_split_V_ce0;
reg    buf_data_split_V_we0;
reg   [31:0] buf_data_split_V_d0;
wire   [31:0] buf_data_split_V_q0;
wire   [0:0] buf_data_split_V_address1;
reg    buf_data_split_V_ce1;
reg    buf_data_split_V_we1;
wire   [31:0] buf_data_split_V_d1;
wire   [31:0] buf_data_split_V_q1;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_194_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_c6_V_phi_fu_205_p4;
reg   [4:0] ap_phi_mux_c7_V_phi_fu_216_p4;
wire   [63:0] ap_phi_reg_pp1_iter0_fifo_data_8_reg_278;
reg   [63:0] ap_phi_reg_pp1_iter1_fifo_data_8_reg_278;
reg   [63:0] ap_phi_reg_pp1_iter2_fifo_data_8_reg_278;
reg   [63:0] ap_phi_reg_pp1_iter3_fifo_data_8_reg_278;
wire   [63:0] zext_ln17148_fu_350_p1;
wire   [63:0] zext_ln890_fu_377_p1;
wire   [63:0] zext_ln17173_1_fu_538_p1;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp1_stage0_01001;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage1;
wire   [0:0] icmp_ln89052_fu_306_p2;
wire   [6:0] add_ln691_fu_300_p2;
wire   [4:0] select_ln890_fu_312_p3;
wire   [4:0] conv_i113_mid2_v_fu_328_p4;
wire   [9:0] tmp_s_fu_342_p3;
wire   [0:0] icmp_ln890_258_fu_408_p2;
wire   [3:0] add_ln691_346_fu_402_p2;
wire   [0:0] cmp_i_i_mid1_fu_422_p2;
wire   [0:0] cmp_i_i53_fu_428_p2;
wire   [0:0] icmp_ln890_259_fu_448_p2;
wire   [0:0] xor_ln17165_fu_442_p2;
wire   [4:0] select_ln17165_fu_414_p3;
wire   [0:0] and_ln17165_fu_454_p2;
wire   [0:0] or_ln890_fu_474_p2;
wire   [4:0] add_ln691_347_fu_468_p2;
wire   [3:0] trunc_ln17173_1_fu_492_p1;
wire   [3:0] trunc_ln17173_fu_488_p1;
wire   [3:0] select_ln17165_2_fu_496_p3;
wire   [3:0] select_ln890_409_fu_504_p3;
wire   [5:0] select_ln890_408_fu_480_p3;
wire   [8:0] tmp_cast_fu_512_p3;
wire   [8:0] zext_ln17173_fu_528_p1;
wire   [8:0] add_ln17173_fu_532_p2;
wire   [10:0] add_ln890_164_fu_549_p2;
wire    ap_CS_fsm_state12;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

top_C_drain_IO_L1_out_boundary_0_x1_local_C_V #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_C_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_V_address0),
    .ce0(local_C_V_ce0),
    .q0(local_C_V_q0),
    .address1(local_C_V_addr_reg_592_pp0_iter1_reg),
    .ce1(local_C_V_ce1),
    .we1(local_C_V_we1),
    .d1(local_C_V_d1)
);

top_C_drain_IO_L1_out_boundary_0_x0_buf_data_split_V #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
buf_data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_data_split_V_address0),
    .ce0(buf_data_split_V_ce0),
    .we0(buf_data_split_V_we0),
    .d0(buf_data_split_V_d0),
    .q0(buf_data_split_V_q0),
    .address1(buf_data_split_V_address1),
    .ce1(buf_data_split_V_ce1),
    .we1(buf_data_split_V_we1),
    .d1(buf_data_split_V_d1),
    .q1(buf_data_split_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        if (((select_ln17165_1_reg_612_pp1_iter1_reg == 1'd0) & (icmp_ln890_257_reg_608_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_fifo_data_8_reg_278 <= fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_dout;
        end else if (((select_ln17165_1_reg_612_pp1_iter1_reg == 1'd1) & (icmp_ln890_257_reg_608_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_fifo_data_8_reg_278 <= local_C_V_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_fifo_data_8_reg_278 <= ap_phi_reg_pp1_iter2_fifo_data_8_reg_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c4_V_reg_234 <= 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_257_fu_396_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c4_V_reg_234 <= select_ln890_407_fu_460_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c5_V_reg_256 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_257_fu_396_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c5_V_reg_256 <= select_ln890_410_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c6_V_84_reg_267 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_257_fu_396_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c6_V_84_reg_267 <= add_ln691_348_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c6_V_reg_201 <= select_ln890_406_reg_582;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c6_V_reg_201 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c7_V_reg_212 <= add_ln691_345_reg_598;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c7_V_reg_212 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten22_reg_223 <= 13'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_257_fu_396_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten22_reg_223 <= add_ln890_165_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten8_reg_245 <= 11'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_257_fu_396_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten8_reg_245 <= select_ln890_411_fu_555_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_190 <= add_ln890_reg_573;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_190 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_294_p2 == 1'd0))) begin
        add_ln691_345_reg_598 <= add_ln691_345_fu_355_p2;
        select_ln890_406_reg_582 <= select_ln890_406_fu_320_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln890_reg_573 <= add_ln890_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        ap_phi_reg_pp1_iter1_fifo_data_8_reg_278 <= ap_phi_reg_pp1_iter0_fifo_data_8_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter2_fifo_data_8_reg_278 <= ap_phi_reg_pp1_iter1_fifo_data_8_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_257_reg_608 <= icmp_ln890_257_fu_396_p2;
        icmp_ln890_257_reg_608_pp1_iter1_reg <= icmp_ln890_257_reg_608;
        select_ln17165_1_reg_612_pp1_iter1_reg <= select_ln17165_1_reg_612;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln890_257_reg_608_pp1_iter2_reg <= icmp_ln890_257_reg_608_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_reg_578 <= icmp_ln890_fu_294_p2;
        icmp_ln890_reg_578_pp0_iter1_reg <= icmp_ln890_reg_578;
        local_C_V_addr_reg_592_pp0_iter1_reg <= local_C_V_addr_reg_592;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_257_fu_396_p2 == 1'd0))) begin
        local_C_V_addr_10_reg_626 <= zext_ln17173_1_fu_538_p1;
        select_ln17165_1_reg_612 <= select_ln17165_1_fu_434_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_294_p2 == 1'd0))) begin
        local_C_V_addr_reg_592 <= zext_ln17148_fu_350_p1;
        trunc_ln890_reg_587 <= trunc_ln890_fu_338_p1;
    end
end

always @ (*) begin
    if ((icmp_ln890_fu_294_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_257_fu_396_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c6_V_phi_fu_205_p4 = select_ln890_406_reg_582;
    end else begin
        ap_phi_mux_c6_V_phi_fu_205_p4 = c6_V_reg_201;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c7_V_phi_fu_216_p4 = add_ln691_345_reg_598;
    end else begin
        ap_phi_mux_c7_V_phi_fu_216_p4 = c7_V_reg_212;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_194_p4 = add_ln890_reg_573;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_194_p4 = indvar_flatten_reg_190;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_data_split_V_address0 = zext_ln890_fu_377_p1;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_data_split_V_address0 = 64'd1;
    end else begin
        buf_data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_data_split_V_ce0 = 1'b1;
    end else begin
        buf_data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_data_split_V_ce1 = 1'b1;
    end else begin
        buf_data_split_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            buf_data_split_V_d0 = fifo_C_drain_PE_3_0_x286_dout;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            buf_data_split_V_d0 = {{local_C_V_q0[63:32]}};
        end else begin
            buf_data_split_V_d0 = 'bx;
        end
    end else begin
        buf_data_split_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        buf_data_split_V_we0 = 1'b1;
    end else begin
        buf_data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_data_split_V_we1 = 1'b1;
    end else begin
        buf_data_split_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_257_reg_608_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_blk_n = fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_257_reg_608_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_write = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln17165_1_reg_612_pp1_iter1_reg == 1'd0) & (icmp_ln890_257_reg_608_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_blk_n = fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_predicate_op101_read_state9 == 1'b1))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_read = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        fifo_C_drain_PE_3_0_x286_blk_n = fifo_C_drain_PE_3_0_x286_empty_n;
    end else begin
        fifo_C_drain_PE_3_0_x286_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        fifo_C_drain_PE_3_0_x286_read = 1'b1;
    end else begin
        fifo_C_drain_PE_3_0_x286_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_C_V_address0 = local_C_V_addr_10_reg_626;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_address0 = zext_ln17148_fu_350_p1;
    end else begin
        local_C_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        local_C_V_ce0 = 1'b1;
    end else begin
        local_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_C_V_ce1 = 1'b1;
    end else begin
        local_C_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln890_reg_578_pp0_iter1_reg == 1'd0))) begin
        local_C_V_we1 = 1'b1;
    end else begin
        local_C_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_fu_294_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_fu_294_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_257_fu_396_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_257_fu_396_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17173_fu_532_p2 = (tmp_cast_fu_512_p3 + zext_ln17173_fu_528_p1);

assign add_ln691_345_fu_355_p2 = (select_ln890_fu_312_p3 + 5'd1);

assign add_ln691_346_fu_402_p2 = (c4_V_reg_234 + 4'd1);

assign add_ln691_347_fu_468_p2 = (select_ln17165_fu_414_p3 + 5'd1);

assign add_ln691_348_fu_543_p2 = (select_ln890_408_fu_480_p3 + 6'd1);

assign add_ln691_fu_300_p2 = (ap_phi_mux_c6_V_phi_fu_205_p4 + 7'd1);

assign add_ln890_164_fu_549_p2 = (indvar_flatten8_reg_245 + 11'd1);

assign add_ln890_165_fu_390_p2 = (indvar_flatten22_reg_223 + 13'd1);

assign add_ln890_fu_288_p2 = (ap_phi_mux_indvar_flatten_phi_fu_194_p4 + 11'd1);

assign and_ln17165_fu_454_p2 = (xor_ln17165_fu_442_p2 & icmp_ln890_259_fu_448_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (fifo_C_drain_PE_3_0_x286_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((icmp_ln890_reg_578 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (fifo_C_drain_PE_3_0_x286_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln890_257_reg_608_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n == 1'b0) & (ap_predicate_op101_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_ln890_257_reg_608_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n == 1'b0) & (ap_predicate_op101_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_ln890_257_reg_608_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n == 1'b0) & (ap_predicate_op101_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter3 = ((icmp_ln890_257_reg_608_pp1_iter2_reg == 1'd0) & (fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((icmp_ln890_reg_578 == 1'd0) & (fifo_C_drain_PE_3_0_x286_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter2 = ((fifo_C_drain_C_drain_IO_L1_out_0_4_x2113_empty_n == 1'b0) & (ap_predicate_op101_read_state9 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_fifo_data_8_reg_278 = 'bx;

always @ (*) begin
    ap_predicate_op101_read_state9 = ((select_ln17165_1_reg_612_pp1_iter1_reg == 1'd0) & (icmp_ln890_257_reg_608_pp1_iter1_reg == 1'd0));
end

assign buf_data_split_V_address1 = 64'd0;

assign buf_data_split_V_d1 = local_C_V_q0[31:0];

assign cmp_i_i53_fu_428_p2 = ((c4_V_reg_234 == 4'd3) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_422_p2 = ((add_ln691_346_fu_402_p2 == 4'd3) ? 1'b1 : 1'b0);

assign conv_i113_mid2_v_fu_328_p4 = {{select_ln890_406_fu_320_p3[5:1]}};

assign fifo_C_drain_C_drain_IO_L1_out_0_3_x2112_din = ap_phi_reg_pp1_iter3_fifo_data_8_reg_278;

assign icmp_ln89052_fu_306_p2 = ((ap_phi_mux_c7_V_phi_fu_216_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_257_fu_396_p2 = ((indvar_flatten22_reg_223 == 13'd5120) ? 1'b1 : 1'b0);

assign icmp_ln890_258_fu_408_p2 = ((indvar_flatten8_reg_245 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_259_fu_448_p2 = ((c6_V_84_reg_267 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_294_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_194_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign local_C_V_d1 = {{buf_data_split_V_q0}, {buf_data_split_V_q1}};

assign or_ln890_fu_474_p2 = (icmp_ln890_258_fu_408_p2 | and_ln17165_fu_454_p2);

assign select_ln17165_1_fu_434_p3 = ((icmp_ln890_258_fu_408_p2[0:0] == 1'b1) ? cmp_i_i_mid1_fu_422_p2 : cmp_i_i53_fu_428_p2);

assign select_ln17165_2_fu_496_p3 = ((icmp_ln890_258_fu_408_p2[0:0] == 1'b1) ? 4'd0 : trunc_ln17173_1_fu_492_p1);

assign select_ln17165_fu_414_p3 = ((icmp_ln890_258_fu_408_p2[0:0] == 1'b1) ? 5'd0 : c5_V_reg_256);

assign select_ln890_406_fu_320_p3 = ((icmp_ln89052_fu_306_p2[0:0] == 1'b1) ? add_ln691_fu_300_p2 : ap_phi_mux_c6_V_phi_fu_205_p4);

assign select_ln890_407_fu_460_p3 = ((icmp_ln890_258_fu_408_p2[0:0] == 1'b1) ? add_ln691_346_fu_402_p2 : c4_V_reg_234);

assign select_ln890_408_fu_480_p3 = ((or_ln890_fu_474_p2[0:0] == 1'b1) ? 6'd0 : c6_V_84_reg_267);

assign select_ln890_409_fu_504_p3 = ((and_ln17165_fu_454_p2[0:0] == 1'b1) ? trunc_ln17173_fu_488_p1 : select_ln17165_2_fu_496_p3);

assign select_ln890_410_fu_520_p3 = ((and_ln17165_fu_454_p2[0:0] == 1'b1) ? add_ln691_347_fu_468_p2 : select_ln17165_fu_414_p3);

assign select_ln890_411_fu_555_p3 = ((icmp_ln890_258_fu_408_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_164_fu_549_p2);

assign select_ln890_fu_312_p3 = ((icmp_ln89052_fu_306_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_c7_V_phi_fu_216_p4);

assign tmp_cast_fu_512_p3 = {{select_ln890_409_fu_504_p3}, {5'd0}};

assign tmp_s_fu_342_p3 = {{select_ln890_fu_312_p3}, {conv_i113_mid2_v_fu_328_p4}};

assign trunc_ln17173_1_fu_492_p1 = c5_V_reg_256[3:0];

assign trunc_ln17173_fu_488_p1 = add_ln691_347_fu_468_p2[3:0];

assign trunc_ln890_fu_338_p1 = select_ln890_406_fu_320_p3[0:0];

assign xor_ln17165_fu_442_p2 = (icmp_ln890_258_fu_408_p2 ^ 1'd1);

assign zext_ln17148_fu_350_p1 = tmp_s_fu_342_p3;

assign zext_ln17173_1_fu_538_p1 = add_ln17173_fu_532_p2;

assign zext_ln17173_fu_528_p1 = select_ln890_408_fu_480_p3;

assign zext_ln890_fu_377_p1 = trunc_ln890_reg_587;

endmodule //top_C_drain_IO_L1_out_8_x2
