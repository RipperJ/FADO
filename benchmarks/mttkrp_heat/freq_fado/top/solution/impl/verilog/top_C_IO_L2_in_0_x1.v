// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_IO_L2_in_0_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_C_IO_L2_in_0_x117_dout,
        fifo_C_C_IO_L2_in_0_x117_empty_n,
        fifo_C_C_IO_L2_in_0_x117_read,
        fifo_C_C_IO_L2_in_1_x118_din,
        fifo_C_C_IO_L2_in_1_x118_full_n,
        fifo_C_C_IO_L2_in_1_x118_write,
        fifo_C_PE_0_0_x1101_din,
        fifo_C_PE_0_0_x1101_full_n,
        fifo_C_PE_0_0_x1101_write
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_pp0_stage0 = 28'd2048;
parameter    ap_ST_fsm_state15 = 28'd4096;
parameter    ap_ST_fsm_state16 = 28'd8192;
parameter    ap_ST_fsm_state17 = 28'd16384;
parameter    ap_ST_fsm_state18 = 28'd32768;
parameter    ap_ST_fsm_state19 = 28'd65536;
parameter    ap_ST_fsm_state20 = 28'd131072;
parameter    ap_ST_fsm_state21 = 28'd262144;
parameter    ap_ST_fsm_state22 = 28'd524288;
parameter    ap_ST_fsm_state23 = 28'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 28'd2097152;
parameter    ap_ST_fsm_state27 = 28'd4194304;
parameter    ap_ST_fsm_state28 = 28'd8388608;
parameter    ap_ST_fsm_state29 = 28'd16777216;
parameter    ap_ST_fsm_state30 = 28'd33554432;
parameter    ap_ST_fsm_pp2_stage0 = 28'd67108864;
parameter    ap_ST_fsm_state34 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_C_C_IO_L2_in_0_x117_dout;
input   fifo_C_C_IO_L2_in_0_x117_empty_n;
output   fifo_C_C_IO_L2_in_0_x117_read;
output  [511:0] fifo_C_C_IO_L2_in_1_x118_din;
input   fifo_C_C_IO_L2_in_1_x118_full_n;
output   fifo_C_C_IO_L2_in_1_x118_write;
output  [255:0] fifo_C_PE_0_0_x1101_din;
input   fifo_C_PE_0_0_x1101_full_n;
output   fifo_C_PE_0_0_x1101_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_C_IO_L2_in_0_x117_read;
reg fifo_C_C_IO_L2_in_1_x118_write;
reg[255:0] fifo_C_PE_0_0_x1101_din;
reg fifo_C_PE_0_0_x1101_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_C_IO_L2_in_0_x117_blk_n;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln890_1429_fu_933_p2;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln890_1426_fu_1520_p2;
wire    ap_CS_fsm_state19;
reg    fifo_C_C_IO_L2_in_1_x118_blk_n;
reg    fifo_C_PE_0_0_x1101_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln878_28_reg_2137;
reg   [0:0] icmp_ln878_28_reg_2137_pp0_iter1_reg;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln878_27_reg_2248;
reg   [0:0] icmp_ln878_27_reg_2248_pp1_iter1_reg;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln878_26_reg_2335;
reg   [0:0] icmp_ln878_26_reg_2335_pp2_iter1_reg;
reg   [5:0] indvar_flatten_reg_563;
reg   [1:0] n_V_16_reg_574;
reg   [511:0] p_Val2_s_reg_585;
reg   [5:0] indvar_flatten72_reg_649;
reg   [1:0] n_V_15_reg_660;
reg   [511:0] p_Val2_33_reg_671;
reg   [5:0] indvar_flatten153_reg_737;
reg   [1:0] n_V_reg_748;
reg   [511:0] p_Val2_34_reg_759;
reg   [511:0] reg_768;
wire   [511:0] local_C_ping_V_q0;
reg   [511:0] reg_774;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state30;
wire   [4:0] add_ln890_300_fu_780_p2;
reg   [4:0] add_ln890_300_reg_1931;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890317_fu_792_p2;
reg   [0:0] icmp_ln890317_reg_1939;
wire   [0:0] icmp_ln890_fu_786_p2;
wire   [2:0] select_ln16842_fu_798_p3;
reg   [2:0] select_ln16842_reg_1944;
wire   [0:0] or_ln16842_fu_806_p2;
reg   [0:0] or_ln16842_reg_1949;
wire   [0:0] and_ln16842_fu_818_p2;
reg   [0:0] and_ln16842_reg_1953;
wire   [5:0] add_i_i780_cast_fu_832_p2;
reg   [5:0] add_i_i780_cast_reg_1957;
wire   [3:0] c3_57_fu_844_p2;
reg   [3:0] c3_57_reg_1966;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln16854_fu_859_p2;
reg   [0:0] icmp_ln16854_reg_1974;
wire   [0:0] icmp_ln16849_fu_838_p2;
wire   [0:0] icmp_ln886_13_fu_854_p2;
wire   [3:0] add_ln691_1339_fu_865_p2;
reg   [3:0] add_ln691_1339_reg_1978;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln691_1337_fu_877_p2;
reg   [3:0] add_ln691_1337_reg_1986;
wire   [6:0] tmp_638_cast_fu_887_p3;
reg   [6:0] tmp_638_cast_reg_1991;
wire   [4:0] add_ln691_1340_fu_901_p2;
reg   [4:0] add_ln691_1340_reg_1999;
wire    ap_CS_fsm_state5;
wire   [4:0] add_ln691_1338_fu_913_p2;
reg   [4:0] add_ln691_1338_reg_2007;
reg    ap_block_state7;
reg   [6:0] local_C_pong_V_addr_reg_2012;
wire   [16:0] add_ln16889_fu_939_p2;
reg   [16:0] add_ln16889_reg_2020;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln890_1422_fu_955_p2;
reg   [0:0] icmp_ln890_1422_reg_2028;
wire   [0:0] icmp_ln16889_fu_949_p2;
wire   [0:0] or_ln16895_fu_991_p2;
reg   [0:0] or_ln16895_reg_2033;
wire   [3:0] select_ln16896_fu_1053_p3;
reg   [3:0] select_ln16896_reg_2038;
wire   [0:0] select_ln16896_1_fu_1065_p3;
reg   [0:0] select_ln16896_1_reg_2044;
wire   [5:0] select_ln890_500_fu_1073_p3;
reg   [5:0] select_ln890_500_reg_2049;
wire   [3:0] select_ln16896_2_fu_1109_p3;
reg   [3:0] select_ln16896_2_reg_2054;
wire   [16:0] add_ln16962_fu_1117_p2;
reg   [16:0] add_ln16962_reg_2059;
wire   [0:0] icmp_ln890_1419_fu_1133_p2;
reg   [0:0] icmp_ln890_1419_reg_2067;
wire   [0:0] icmp_ln16962_fu_1127_p2;
wire   [0:0] or_ln16968_fu_1169_p2;
reg   [0:0] or_ln16968_reg_2072;
wire   [3:0] select_ln16969_fu_1231_p3;
reg   [3:0] select_ln16969_reg_2077;
wire   [0:0] select_ln16969_1_fu_1243_p3;
reg   [0:0] select_ln16969_1_reg_2083;
wire   [5:0] select_ln890_499_fu_1251_p3;
reg   [5:0] select_ln890_499_reg_2088;
wire   [3:0] select_ln16969_2_fu_1287_p3;
reg   [3:0] select_ln16969_2_reg_2093;
wire   [0:0] arb_fu_1301_p2;
wire   [2:0] add_ln691_1328_fu_1306_p2;
wire    ap_CS_fsm_state10;
reg   [0:0] data_split_V_30_addr_reg_2113;
wire   [5:0] add_ln890_306_fu_1324_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state12_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
reg    ap_block_state14_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_1428_fu_1330_p2;
reg   [0:0] icmp_ln890_1428_reg_2123;
wire   [511:0] zext_ln1497_16_fu_1378_p1;
wire   [1:0] add_ln691_1336_fu_1382_p2;
reg   [1:0] add_ln691_1336_reg_2132;
wire   [0:0] icmp_ln878_28_fu_1388_p2;
wire   [3:0] add_ln691_1335_fu_1394_p2;
wire    ap_CS_fsm_state15;
wire   [9:0] select_ln890_503_fu_1405_p3;
wire   [10:0] select_ln890_504_fu_1418_p3;
wire   [3:0] c3_56_fu_1431_p2;
reg   [3:0] c3_56_reg_2159;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln16927_fu_1446_p2;
reg   [0:0] icmp_ln16927_reg_2167;
wire   [0:0] icmp_ln16922_fu_1425_p2;
wire   [0:0] icmp_ln886_fu_1441_p2;
wire   [3:0] add_ln691_1333_fu_1452_p2;
reg   [3:0] add_ln691_1333_reg_2171;
wire    ap_CS_fsm_state17;
wire   [3:0] add_ln691_1331_fu_1464_p2;
reg   [3:0] add_ln691_1331_reg_2179;
wire   [6:0] tmp_637_cast_fu_1474_p3;
reg   [6:0] tmp_637_cast_reg_2184;
wire   [4:0] add_ln691_1334_fu_1488_p2;
reg   [4:0] add_ln691_1334_reg_2192;
wire    ap_CS_fsm_state18;
wire   [4:0] add_ln691_1332_fu_1500_p2;
reg   [4:0] add_ln691_1332_reg_2200;
reg    ap_block_state20;
reg   [6:0] local_C_ping_V_addr_29_reg_2205;
wire    ap_CS_fsm_state22;
wire   [511:0] local_C_pong_V_q0;
reg   [511:0] in_data_V_73_reg_2218;
wire    ap_CS_fsm_state23;
reg   [0:0] data_split_V_29_addr_reg_2224;
wire   [5:0] add_ln890_305_fu_1539_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state24_pp1_stage0_iter0;
wire    ap_block_state25_pp1_stage0_iter1;
reg    ap_block_state26_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_1425_fu_1545_p2;
reg   [0:0] icmp_ln890_1425_reg_2234;
wire   [511:0] zext_ln1497_15_fu_1592_p1;
wire   [1:0] add_ln691_1330_fu_1596_p2;
reg   [1:0] add_ln691_1330_reg_2243;
wire   [0:0] icmp_ln878_27_fu_1602_p2;
wire   [3:0] add_ln691_1329_fu_1608_p2;
wire    ap_CS_fsm_state27;
wire   [9:0] select_ln890_501_fu_1619_p3;
wire   [10:0] select_ln890_502_fu_1632_p3;
wire   [16:0] add_ln17005_fu_1639_p2;
reg   [16:0] add_ln17005_reg_2267;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln890_1411_fu_1655_p2;
reg   [0:0] icmp_ln890_1411_reg_2275;
wire   [0:0] icmp_ln17005_fu_1649_p2;
wire   [0:0] or_ln17011_fu_1691_p2;
reg   [0:0] or_ln17011_reg_2280;
wire   [3:0] select_ln17012_fu_1753_p3;
reg   [3:0] select_ln17012_reg_2285;
wire   [0:0] select_ln17012_1_fu_1765_p3;
reg   [0:0] select_ln17012_1_reg_2291;
wire   [5:0] select_ln890_fu_1773_p3;
reg   [5:0] select_ln890_reg_2296;
wire   [3:0] select_ln17012_2_fu_1809_p3;
reg   [3:0] select_ln17012_2_reg_2301;
wire    ap_CS_fsm_state29;
reg   [0:0] data_split_V_addr156_reg_2311;
wire   [5:0] add_ln890_299_fu_1830_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state31_pp2_stage0_iter0;
wire    ap_block_state32_pp2_stage0_iter1;
reg    ap_block_state33_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln890_1414_fu_1836_p2;
reg   [0:0] icmp_ln890_1414_reg_2321;
wire   [511:0] zext_ln1497_fu_1884_p1;
wire   [1:0] add_ln691_1325_fu_1888_p2;
reg   [1:0] add_ln691_1325_reg_2330;
wire   [0:0] icmp_ln878_26_fu_1894_p2;
wire   [3:0] add_ln691_1324_fu_1900_p2;
wire    ap_CS_fsm_state34;
wire   [9:0] select_ln890_497_fu_1911_p3;
wire   [10:0] select_ln890_498_fu_1924_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state12;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state24;
reg    ap_enable_reg_pp1_iter1;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state31;
reg    ap_enable_reg_pp2_iter1;
reg   [6:0] local_C_ping_V_address0;
reg    local_C_ping_V_ce0;
reg    local_C_ping_V_ce1;
reg    local_C_ping_V_we1;
wire   [6:0] local_C_pong_V_address0;
reg    local_C_pong_V_ce0;
reg    local_C_pong_V_ce1;
reg    local_C_pong_V_we1;
wire   [0:0] data_split_V_30_address0;
reg    data_split_V_30_ce0;
reg    data_split_V_30_we0;
wire   [255:0] data_split_V_30_d0;
reg    data_split_V_30_ce1;
wire   [255:0] data_split_V_30_q1;
wire   [0:0] data_split_V_29_address0;
reg    data_split_V_29_ce0;
reg    data_split_V_29_we0;
wire   [255:0] data_split_V_29_d0;
reg    data_split_V_29_ce1;
wire   [255:0] data_split_V_29_q1;
wire   [0:0] data_split_V_address0;
reg    data_split_V_ce0;
reg    data_split_V_we0;
wire   [255:0] data_split_V_d0;
reg    data_split_V_ce1;
wire   [255:0] data_split_V_q1;
reg   [4:0] indvar_flatten141_reg_347;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_358;
reg   [0:0] intra_trans_en_reg_369;
reg   [0:0] arb_15_reg_382;
reg   [3:0] c3_55_reg_394;
wire   [0:0] icmp_ln890_1417_fu_895_p2;
wire   [0:0] icmp_ln890_1418_fu_871_p2;
reg   [3:0] c4_V_55_reg_405;
wire   [0:0] icmp_ln890_1430_fu_907_p2;
reg   [3:0] c4_V_54_reg_416;
reg   [4:0] c5_V_103_reg_427;
reg    ap_block_state6;
reg   [4:0] c5_V_102_reg_438;
wire    ap_CS_fsm_state8;
reg   [16:0] indvar_flatten60_reg_449;
reg   [10:0] indvar_flatten30_reg_460;
reg   [9:0] indvar_flatten8_reg_472;
reg   [5:0] c6_V_156_reg_484;
reg   [3:0] c7_V_94_reg_495;
reg   [16:0] indvar_flatten133_reg_506;
reg   [10:0] indvar_flatten103_reg_517;
reg   [9:0] indvar_flatten81_reg_529;
reg   [5:0] c6_V_155_reg_541;
reg   [3:0] c7_V_93_reg_552;
reg   [1:0] ap_phi_mux_n_V_16_phi_fu_578_p4;
reg   [3:0] c3_reg_594;
wire   [0:0] icmp_ln890_1415_fu_1482_p2;
wire   [0:0] icmp_ln890_1416_fu_1458_p2;
reg   [3:0] c4_V_53_reg_605;
wire   [0:0] icmp_ln890_1427_fu_1494_p2;
reg   [3:0] c4_V_reg_616;
reg   [4:0] c5_V_101_reg_627;
reg    ap_block_state19;
reg   [4:0] c5_V_reg_638;
wire    ap_CS_fsm_state21;
reg   [1:0] ap_phi_mux_n_V_15_phi_fu_664_p4;
reg   [16:0] indvar_flatten214_reg_680;
reg   [10:0] indvar_flatten184_reg_691;
reg   [9:0] indvar_flatten162_reg_703;
reg   [5:0] c6_V_reg_715;
reg   [3:0] c7_V_reg_726;
reg   [1:0] ap_phi_mux_n_V_phi_fu_752_p4;
wire   [63:0] zext_ln16864_1_fu_928_p1;
wire   [63:0] tmp_48_fu_1311_p4;
wire   [63:0] zext_ln890_94_fu_1320_p1;
wire   [63:0] zext_ln878_16_fu_1358_p1;
wire   [63:0] zext_ln16937_1_fu_1515_p1;
wire   [63:0] tmp_47_fu_1526_p4;
wire   [63:0] zext_ln890_93_fu_1535_p1;
wire   [63:0] zext_ln878_15_fu_1572_p1;
wire   [63:0] tmp_s_fu_1817_p4;
wire   [63:0] zext_ln890_fu_1826_p1;
wire   [63:0] zext_ln878_fu_1864_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_pp2_stage0_01001;
wire   [0:0] xor_ln16842_fu_812_p2;
wire   [5:0] p_shl_fu_824_p3;
wire   [5:0] zext_ln886_13_fu_850_p1;
wire   [2:0] trunc_ln16864_fu_883_p1;
wire   [6:0] zext_ln16864_fu_919_p1;
wire   [6:0] add_ln16864_fu_923_p2;
wire   [0:0] icmp_ln890_1423_fu_967_p2;
wire   [0:0] xor_ln16889_fu_961_p2;
wire   [0:0] icmp_ln890_1424_fu_979_p2;
wire   [0:0] and_ln16889_1_fu_985_p2;
wire   [0:0] empty_fu_945_p1;
wire   [0:0] xor_ln16895_1_fu_1005_p2;
wire   [0:0] xor_ln16895_fu_1017_p2;
wire   [0:0] and_ln16889_fu_973_p2;
wire   [0:0] or_ln16895_1_fu_1023_p2;
wire   [5:0] select_ln16895_fu_997_p3;
wire   [0:0] and_ln16895_fu_1029_p2;
wire   [0:0] or_ln16896_fu_1041_p2;
wire   [0:0] or_ln16896_1_fu_1047_p2;
wire   [5:0] add_ln691_1327_fu_1035_p2;
wire   [0:0] empty_2527_fu_1061_p1;
wire   [0:0] and_ln16895_1_fu_1011_p2;
wire   [3:0] tmp_581_fu_1091_p4;
wire   [3:0] tmp_580_fu_1081_p4;
wire   [3:0] select_ln16895_1_fu_1101_p3;
wire   [0:0] icmp_ln890_1420_fu_1145_p2;
wire   [0:0] xor_ln16962_fu_1139_p2;
wire   [0:0] icmp_ln890_1421_fu_1157_p2;
wire   [0:0] and_ln16962_1_fu_1163_p2;
wire   [0:0] empty_2528_fu_1123_p1;
wire   [0:0] xor_ln16968_1_fu_1183_p2;
wire   [0:0] xor_ln16968_fu_1195_p2;
wire   [0:0] and_ln16962_fu_1151_p2;
wire   [0:0] or_ln16968_1_fu_1201_p2;
wire   [5:0] select_ln16968_fu_1175_p3;
wire   [0:0] and_ln16968_fu_1207_p2;
wire   [0:0] or_ln16969_fu_1219_p2;
wire   [0:0] or_ln16969_1_fu_1225_p2;
wire   [5:0] add_ln691_1326_fu_1213_p2;
wire   [0:0] empty_2529_fu_1239_p1;
wire   [0:0] and_ln16968_1_fu_1189_p2;
wire   [3:0] tmp_579_fu_1269_p4;
wire   [3:0] tmp_578_fu_1259_p4;
wire   [3:0] select_ln16968_1_fu_1279_p3;
wire   [0:0] xor_ln16995_fu_1295_p2;
wire   [0:0] icmp_ln878_29_fu_1336_p2;
wire   [1:0] select_ln16900_fu_1342_p3;
wire   [511:0] select_ln16900_1_fu_1350_p3;
wire   [255:0] r_fu_1368_p4;
wire   [9:0] add_ln890_303_fu_1399_p2;
wire   [10:0] add_ln890_304_fu_1412_p2;
wire   [5:0] zext_ln886_fu_1437_p1;
wire   [2:0] trunc_ln16937_fu_1470_p1;
wire   [6:0] zext_ln16937_fu_1506_p1;
wire   [6:0] add_ln16937_fu_1510_p2;
wire   [0:0] icmp_ln878_fu_1551_p2;
wire   [1:0] select_ln16973_fu_1557_p3;
wire   [511:0] select_ln16973_1_fu_1565_p3;
wire   [255:0] r_25_fu_1582_p4;
wire   [9:0] add_ln890_301_fu_1613_p2;
wire   [10:0] add_ln890_302_fu_1626_p2;
wire   [0:0] icmp_ln890_1412_fu_1667_p2;
wire   [0:0] xor_ln17005_fu_1661_p2;
wire   [0:0] icmp_ln890_1413_fu_1679_p2;
wire   [0:0] and_ln17005_1_fu_1685_p2;
wire   [0:0] empty_2530_fu_1645_p1;
wire   [0:0] xor_ln17011_1_fu_1705_p2;
wire   [0:0] xor_ln17011_fu_1717_p2;
wire   [0:0] and_ln17005_fu_1673_p2;
wire   [0:0] or_ln17011_1_fu_1723_p2;
wire   [5:0] select_ln17011_fu_1697_p3;
wire   [0:0] and_ln17011_fu_1729_p2;
wire   [0:0] or_ln17012_fu_1741_p2;
wire   [0:0] or_ln17012_1_fu_1747_p2;
wire   [5:0] add_ln691_fu_1735_p2;
wire   [0:0] empty_2531_fu_1761_p1;
wire   [0:0] and_ln17011_1_fu_1711_p2;
wire   [3:0] tmp_577_fu_1791_p4;
wire   [3:0] tmp_fu_1781_p4;
wire   [3:0] select_ln17011_1_fu_1801_p3;
wire   [0:0] icmp_ln878319_fu_1842_p2;
wire   [1:0] select_ln17016_fu_1848_p3;
wire   [511:0] select_ln17016_1_fu_1856_p3;
wire   [255:0] r_26_fu_1874_p4;
wire   [9:0] add_ln890_fu_1905_p2;
wire   [10:0] add_ln890_298_fu_1918_p2;
reg   [27:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 28'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

top_C_IO_L2_in_0_x1_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_V_address0),
    .ce0(local_C_ping_V_ce0),
    .q0(local_C_ping_V_q0),
    .address1(local_C_ping_V_addr_29_reg_2205),
    .ce1(local_C_ping_V_ce1),
    .we1(local_C_ping_V_we1),
    .d1(reg_768)
);

top_C_IO_L2_in_0_x1_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_V_address0),
    .ce0(local_C_pong_V_ce0),
    .q0(local_C_pong_V_q0),
    .address1(local_C_pong_V_addr_reg_2012),
    .ce1(local_C_pong_V_ce1),
    .we1(local_C_pong_V_we1),
    .d1(reg_768)
);

top_A_IO_L2_in_0_x0_data_split_V #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_30_address0),
    .ce0(data_split_V_30_ce0),
    .we0(data_split_V_30_we0),
    .d0(data_split_V_30_d0),
    .address1(data_split_V_30_addr_reg_2113),
    .ce1(data_split_V_30_ce1),
    .q1(data_split_V_30_q1)
);

top_A_IO_L2_in_0_x0_data_split_V #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_29_address0),
    .ce0(data_split_V_29_ce0),
    .we0(data_split_V_29_we0),
    .d0(data_split_V_29_d0),
    .address1(data_split_V_29_addr_reg_2224),
    .ce1(data_split_V_29_ce1),
    .q1(data_split_V_29_q1)
);

top_A_IO_L2_in_0_x0_data_split_V #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_address0),
    .ce0(data_split_V_ce0),
    .we0(data_split_V_we0),
    .d0(data_split_V_d0),
    .address1(data_split_V_addr156_reg_2311),
    .ce1(data_split_V_ce1),
    .q1(data_split_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln17005_fu_1649_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state12)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state24) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state24)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state31) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state31)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((or_ln16842_reg_1949 == 1'd0) | ((icmp_ln16962_fu_1127_p2 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) | ((1'd0 == and_ln16842_reg_1953) & (icmp_ln16889_fu_949_p2 == 1'd1))))) begin
        arb_15_reg_382 <= arb_fu_1301_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_15_reg_382 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((or_ln16842_reg_1949 == 1'd0) | ((icmp_ln16962_fu_1127_p2 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) | ((1'd0 == and_ln16842_reg_1953) & (icmp_ln16889_fu_949_p2 == 1'd1))))) begin
        c1_V_reg_358 <= add_ln691_1328_fu_1306_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_358 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln16842_fu_818_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd0))) begin
        c3_55_reg_394 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1418_fu_871_p2 == 1'd1) & (icmp_ln16854_reg_1974 == 1'd0)) | ((icmp_ln890_1417_fu_895_p2 == 1'd1) & (icmp_ln16854_reg_1974 == 1'd1))))) begin
        c3_55_reg_394 <= c3_57_reg_1966;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd0) & (1'd1 == and_ln16842_fu_818_p2))) begin
        c3_reg_594 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (((icmp_ln890_1416_fu_1458_p2 == 1'd1) & (icmp_ln16927_reg_2167 == 1'd0)) | ((icmp_ln890_1415_fu_1482_p2 == 1'd1) & (icmp_ln16927_reg_2167 == 1'd1))))) begin
        c3_reg_594 <= c3_56_reg_2159;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_1441_p2 == 1'd0) & (icmp_ln16922_fu_1425_p2 == 1'd0) & (icmp_ln16927_fu_1446_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        c4_V_53_reg_605 <= 4'd0;
    end else if (((icmp_ln890_1427_fu_1494_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        c4_V_53_reg_605 <= add_ln691_1333_reg_2171;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln886_13_fu_854_p2 == 1'd0) & (icmp_ln16849_fu_838_p2 == 1'd0) & (icmp_ln16854_fu_859_p2 == 1'd1))) begin
        c4_V_54_reg_416 <= 4'd0;
    end else if ((~((icmp_ln890_1429_fu_933_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1429_fu_933_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        c4_V_54_reg_416 <= add_ln691_1337_reg_1986;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln886_13_fu_854_p2 == 1'd0) & (icmp_ln16849_fu_838_p2 == 1'd0) & (icmp_ln16854_fu_859_p2 == 1'd0))) begin
        c4_V_55_reg_405 <= 4'd0;
    end else if (((icmp_ln890_1430_fu_907_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c4_V_55_reg_405 <= add_ln691_1339_reg_1978;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_1441_p2 == 1'd0) & (icmp_ln16922_fu_1425_p2 == 1'd0) & (icmp_ln16927_fu_1446_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        c4_V_reg_616 <= 4'd0;
    end else if ((~((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1426_fu_1520_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        c4_V_reg_616 <= add_ln691_1331_reg_2179;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1416_fu_1458_p2 == 1'd0) & (icmp_ln16927_reg_2167 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        c5_V_101_reg_627 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        c5_V_101_reg_627 <= add_ln691_1334_reg_2192;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1417_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln16854_reg_1974 == 1'd1))) begin
        c5_V_102_reg_438 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c5_V_102_reg_438 <= add_ln691_1338_reg_2007;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1418_fu_871_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln16854_reg_1974 == 1'd0))) begin
        c5_V_103_reg_427 <= 5'd0;
    end else if ((~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        c5_V_103_reg_427 <= add_ln691_1340_reg_1999;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1415_fu_1482_p2 == 1'd0) & (icmp_ln16927_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        c5_V_reg_638 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c5_V_reg_638 <= add_ln691_1332_reg_2200;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln16922_fu_1425_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_fu_1441_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        c6_V_155_reg_541 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        c6_V_155_reg_541 <= select_ln890_499_reg_2088;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln16849_fu_838_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_13_fu_854_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        c6_V_156_reg_484 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c6_V_156_reg_484 <= select_ln890_500_reg_2049;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd1))) begin
        c6_V_reg_715 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c6_V_reg_715 <= select_ln890_reg_2296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln16922_fu_1425_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_fu_1441_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        c7_V_93_reg_552 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        c7_V_93_reg_552 <= add_ln691_1329_fu_1608_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln16849_fu_838_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_13_fu_854_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        c7_V_94_reg_495 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c7_V_94_reg_495 <= add_ln691_1335_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd1))) begin
        c7_V_reg_726 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c7_V_reg_726 <= add_ln691_1324_fu_1900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln16922_fu_1425_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_fu_1441_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        indvar_flatten103_reg_517 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten103_reg_517 <= select_ln890_502_fu_1632_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln16922_fu_1425_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_fu_1441_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        indvar_flatten133_reg_506 <= 17'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten133_reg_506 <= add_ln16962_reg_2059;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((or_ln16842_reg_1949 == 1'd0) | ((icmp_ln16962_fu_1127_p2 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) | ((1'd0 == and_ln16842_reg_1953) & (icmp_ln16889_fu_949_p2 == 1'd1))))) begin
        indvar_flatten141_reg_347 <= add_ln890_300_reg_1931;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten141_reg_347 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1414_fu_1836_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten153_reg_737 <= add_ln890_299_fu_1830_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten153_reg_737 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd1))) begin
        indvar_flatten162_reg_703 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        indvar_flatten162_reg_703 <= select_ln890_497_fu_1911_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd1))) begin
        indvar_flatten184_reg_691 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        indvar_flatten184_reg_691 <= select_ln890_498_fu_1924_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd1))) begin
        indvar_flatten214_reg_680 <= 17'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        indvar_flatten214_reg_680 <= add_ln17005_reg_2267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln16849_fu_838_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_13_fu_854_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        indvar_flatten30_reg_460 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        indvar_flatten30_reg_460 <= select_ln890_504_fu_1418_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln16849_fu_838_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_13_fu_854_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        indvar_flatten60_reg_449 <= 17'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        indvar_flatten60_reg_449 <= add_ln16889_reg_2020;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1425_fu_1545_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten72_reg_649 <= add_ln890_305_fu_1539_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten72_reg_649 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln16922_fu_1425_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_fu_1441_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        indvar_flatten81_reg_529 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten81_reg_529 <= select_ln890_501_fu_1619_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln16849_fu_838_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1)) | ((icmp_ln886_13_fu_854_p2 == 1'd1) & (or_ln16842_reg_1949 == 1'd1))))) begin
        indvar_flatten8_reg_472 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        indvar_flatten8_reg_472 <= select_ln890_503_fu_1405_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1428_fu_1330_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_563 <= add_ln890_306_fu_1324_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten_reg_563 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((or_ln16842_reg_1949 == 1'd0) | ((icmp_ln16962_fu_1127_p2 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) | ((1'd0 == and_ln16842_reg_1953) & (icmp_ln16889_fu_949_p2 == 1'd1))))) begin
        intra_trans_en_reg_369 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_369 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_1425_reg_2234 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        n_V_15_reg_660 <= add_ln691_1330_reg_2243;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        n_V_15_reg_660 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln890_1428_reg_2123 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_V_16_reg_574 <= add_ln691_1336_reg_2132;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        n_V_16_reg_574 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln890_1414_reg_2321 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        n_V_reg_748 <= add_ln691_1325_reg_2330;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        n_V_reg_748 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1425_fu_1545_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_Val2_33_reg_671 <= zext_ln1497_15_fu_1592_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_Val2_33_reg_671 <= local_C_pong_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1414_fu_1836_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        p_Val2_34_reg_759 <= zext_ln1497_fu_1884_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        p_Val2_34_reg_759 <= local_C_ping_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1428_fu_1330_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_585 <= zext_ln1497_16_fu_1378_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        p_Val2_s_reg_585 <= local_C_ping_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd0))) begin
        add_i_i780_cast_reg_1957[5 : 3] <= add_i_i780_cast_fu_832_p2[5 : 3];
        and_ln16842_reg_1953 <= and_ln16842_fu_818_p2;
        icmp_ln890317_reg_1939 <= icmp_ln890317_fu_792_p2;
        or_ln16842_reg_1949 <= or_ln16842_fu_806_p2;
        select_ln16842_reg_1944 <= select_ln16842_fu_798_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln16842_reg_1953) & (1'b1 == ap_CS_fsm_state9) & (or_ln16842_reg_1949 == 1'd1))) begin
        add_ln16889_reg_2020 <= add_ln16889_fu_939_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (or_ln16842_reg_1949 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) begin
        add_ln16962_reg_2059 <= add_ln16962_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln17005_reg_2267 <= add_ln17005_fu_1639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1414_fu_1836_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln691_1325_reg_2330 <= add_ln691_1325_fu_1888_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1425_fu_1545_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln691_1330_reg_2243 <= add_ln691_1330_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16927_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        add_ln691_1331_reg_2179 <= add_ln691_1331_fu_1464_p2;
        tmp_637_cast_reg_2184[6 : 4] <= tmp_637_cast_fu_1474_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln691_1332_reg_2200 <= add_ln691_1332_fu_1500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16927_reg_2167 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        add_ln691_1333_reg_2171 <= add_ln691_1333_fu_1452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln691_1334_reg_2192 <= add_ln691_1334_fu_1488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1428_fu_1330_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln691_1336_reg_2132 <= add_ln691_1336_fu_1382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln16854_reg_1974 == 1'd1))) begin
        add_ln691_1337_reg_1986 <= add_ln691_1337_fu_877_p2;
        tmp_638_cast_reg_1991[6 : 4] <= tmp_638_cast_fu_887_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln890_1429_fu_933_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        add_ln691_1338_reg_2007 <= add_ln691_1338_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln16854_reg_1974 == 1'd0))) begin
        add_ln691_1339_reg_1978 <= add_ln691_1339_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1340_reg_1999 <= add_ln691_1340_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_300_reg_1931 <= add_ln890_300_fu_780_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c3_56_reg_2159 <= c3_56_fu_1431_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c3_57_reg_1966 <= c3_57_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        data_split_V_29_addr_reg_2224 <= zext_ln890_93_fu_1535_p1;
        in_data_V_73_reg_2218 <= local_C_pong_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_split_V_30_addr_reg_2113 <= zext_ln890_94_fu_1320_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        data_split_V_addr156_reg_2311 <= zext_ln890_fu_1826_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln886_13_fu_854_p2 == 1'd0) & (icmp_ln16849_fu_838_p2 == 1'd0))) begin
        icmp_ln16854_reg_1974 <= icmp_ln16854_fu_859_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_fu_1441_p2 == 1'd0) & (icmp_ln16922_fu_1425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        icmp_ln16927_reg_2167 <= icmp_ln16927_fu_1446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1414_fu_1836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln878_26_reg_2335 <= icmp_ln878_26_fu_1894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln878_26_reg_2335_pp2_iter1_reg <= icmp_ln878_26_reg_2335;
        icmp_ln890_1414_reg_2321 <= icmp_ln890_1414_fu_1836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1425_fu_1545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln878_27_reg_2248 <= icmp_ln878_27_fu_1602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln878_27_reg_2248_pp1_iter1_reg <= icmp_ln878_27_reg_2248;
        icmp_ln890_1425_reg_2234 <= icmp_ln890_1425_fu_1545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1428_fu_1330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_28_reg_2137 <= icmp_ln878_28_fu_1388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_28_reg_2137_pp0_iter1_reg <= icmp_ln878_28_reg_2137;
        icmp_ln890_1428_reg_2123 <= icmp_ln890_1428_fu_1330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17005_fu_1649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        icmp_ln890_1411_reg_2275 <= icmp_ln890_1411_fu_1655_p2;
        or_ln17011_reg_2280 <= or_ln17011_fu_1691_p2;
        select_ln17012_1_reg_2291 <= select_ln17012_1_fu_1765_p3;
        select_ln17012_2_reg_2301 <= select_ln17012_2_fu_1809_p3;
        select_ln17012_reg_2285 <= select_ln17012_fu_1753_p3;
        select_ln890_reg_2296 <= select_ln890_fu_1773_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16962_fu_1127_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln16842_reg_1949 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) begin
        icmp_ln890_1419_reg_2067 <= icmp_ln890_1419_fu_1133_p2;
        or_ln16968_reg_2072 <= or_ln16968_fu_1169_p2;
        select_ln16969_1_reg_2083 <= select_ln16969_1_fu_1243_p3;
        select_ln16969_2_reg_2093 <= select_ln16969_2_fu_1287_p3;
        select_ln16969_reg_2077 <= select_ln16969_fu_1231_p3;
        select_ln890_499_reg_2088 <= select_ln890_499_fu_1251_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln16842_reg_1953) & (icmp_ln16889_fu_949_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln16842_reg_1949 == 1'd1))) begin
        icmp_ln890_1422_reg_2028 <= icmp_ln890_1422_fu_955_p2;
        or_ln16895_reg_2033 <= or_ln16895_fu_991_p2;
        select_ln16896_1_reg_2044 <= select_ln16896_1_fu_1065_p3;
        select_ln16896_2_reg_2054 <= select_ln16896_2_fu_1109_p3;
        select_ln16896_reg_2038 <= select_ln16896_fu_1053_p3;
        select_ln890_500_reg_2049 <= select_ln890_500_fu_1073_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        local_C_ping_V_addr_29_reg_2205 <= zext_ln16937_1_fu_1515_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_C_pong_V_addr_reg_2012 <= zext_ln16864_1_fu_928_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln890_1429_fu_933_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_768 <= fifo_C_C_IO_L2_in_0_x117_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_774 <= local_C_ping_V_q0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1428_fu_1330_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1425_fu_1545_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1414_fu_1836_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17005_fu_1649_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_1425_reg_2234 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_n_V_15_phi_fu_664_p4 = add_ln691_1330_reg_2243;
    end else begin
        ap_phi_mux_n_V_15_phi_fu_664_p4 = n_V_15_reg_660;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln890_1428_reg_2123 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_n_V_16_phi_fu_578_p4 = add_ln691_1336_reg_2132;
    end else begin
        ap_phi_mux_n_V_16_phi_fu_578_p4 = n_V_16_reg_574;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln890_1414_reg_2321 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_n_V_phi_fu_752_p4 = add_ln691_1325_reg_2330;
    end else begin
        ap_phi_mux_n_V_phi_fu_752_p4 = n_V_reg_748;
    end
end

always @ (*) begin
    if (((icmp_ln17005_fu_1649_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        data_split_V_29_ce0 = 1'b1;
    end else begin
        data_split_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        data_split_V_29_ce1 = 1'b1;
    end else begin
        data_split_V_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1425_fu_1545_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        data_split_V_29_we0 = 1'b1;
    end else begin
        data_split_V_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_split_V_30_ce0 = 1'b1;
    end else begin
        data_split_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_split_V_30_ce1 = 1'b1;
    end else begin
        data_split_V_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1428_fu_1330_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_split_V_30_we0 = 1'b1;
    end else begin
        data_split_V_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_split_V_ce0 = 1'b1;
    end else begin
        data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_split_V_ce1 = 1'b1;
    end else begin
        data_split_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1414_fu_1836_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        data_split_V_we0 = 1'b1;
    end else begin
        data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state6) | ((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln890_1429_fu_933_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        fifo_C_C_IO_L2_in_0_x117_blk_n = fifo_C_C_IO_L2_in_0_x117_empty_n;
    end else begin
        fifo_C_C_IO_L2_in_0_x117_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1426_fu_1520_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | (~((icmp_ln890_1429_fu_933_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1429_fu_933_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        fifo_C_C_IO_L2_in_0_x117_read = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_0_x117_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state6))) begin
        fifo_C_C_IO_L2_in_1_x118_blk_n = fifo_C_C_IO_L2_in_1_x118_full_n;
    end else begin
        fifo_C_C_IO_L2_in_1_x118_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_1_x118_write = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_1_x118_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        fifo_C_PE_0_0_x1101_blk_n = fifo_C_PE_0_0_x1101_full_n;
    end else begin
        fifo_C_PE_0_0_x1101_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        fifo_C_PE_0_0_x1101_din = data_split_V_q1;
    end else if (((icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        fifo_C_PE_0_0_x1101_din = data_split_V_29_q1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        fifo_C_PE_0_0_x1101_din = data_split_V_30_q1;
    end else begin
        fifo_C_PE_0_0_x1101_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        fifo_C_PE_0_0_x1101_write = 1'b1;
    end else begin
        fifo_C_PE_0_0_x1101_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        local_C_ping_V_address0 = tmp_s_fu_1817_p4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_C_ping_V_address0 = tmp_48_fu_1311_p4;
    end else begin
        local_C_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        local_C_ping_V_ce0 = 1'b1;
    end else begin
        local_C_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        local_C_ping_V_ce1 = 1'b1;
    end else begin
        local_C_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        local_C_ping_V_we1 = 1'b1;
    end else begin
        local_C_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        local_C_pong_V_ce0 = 1'b1;
    end else begin
        local_C_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        local_C_pong_V_ce1 = 1'b1;
    end else begin
        local_C_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        local_C_pong_V_we1 = 1'b1;
    end else begin
        local_C_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_786_p2 == 1'd0) & (1'd1 == and_ln16842_fu_818_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln886_13_fu_854_p2 == 1'd1) | (icmp_ln16849_fu_838_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1418_fu_871_p2 == 1'd1) & (icmp_ln16854_reg_1974 == 1'd0)) | ((icmp_ln890_1417_fu_895_p2 == 1'd1) & (icmp_ln16854_reg_1974 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln890_1417_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln16854_reg_1974 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1430_fu_907_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((icmp_ln890_1429_fu_933_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1429_fu_933_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((icmp_ln890_1429_fu_933_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1429_fu_933_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (((or_ln16842_reg_1949 == 1'd0) | ((icmp_ln16962_fu_1127_p2 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) | ((1'd0 == and_ln16842_reg_1953) & (icmp_ln16889_fu_949_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln16962_fu_1127_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln16842_reg_1949 == 1'd1) & (1'd1 == and_ln16842_reg_1953))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_1428_fu_1330_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_1428_fu_1330_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln886_fu_1441_p2 == 1'd1) | (icmp_ln16922_fu_1425_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (((icmp_ln890_1416_fu_1458_p2 == 1'd1) & (icmp_ln16927_reg_2167 == 1'd0)) | ((icmp_ln890_1415_fu_1482_p2 == 1'd1) & (icmp_ln16927_reg_2167 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((icmp_ln890_1415_fu_1482_p2 == 1'd0) & (icmp_ln16927_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln890_1427_fu_1494_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((~((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1426_fu_1520_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if ((~((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0)) & (icmp_ln890_1426_fu_1520_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_1425_fu_1545_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_1425_fu_1545_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln17005_fu_1649_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln890_1414_fu_1836_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln890_1414_fu_1836_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i780_cast_fu_832_p2 = ($signed(6'd41) - $signed(p_shl_fu_824_p3));

assign add_ln16864_fu_923_p2 = (tmp_638_cast_reg_1991 + zext_ln16864_fu_919_p1);

assign add_ln16889_fu_939_p2 = (indvar_flatten60_reg_449 + 17'd1);

assign add_ln16937_fu_1510_p2 = (tmp_637_cast_reg_2184 + zext_ln16937_fu_1506_p1);

assign add_ln16962_fu_1117_p2 = (indvar_flatten133_reg_506 + 17'd1);

assign add_ln17005_fu_1639_p2 = (indvar_flatten214_reg_680 + 17'd1);

assign add_ln691_1324_fu_1900_p2 = (select_ln17012_reg_2285 + 4'd1);

assign add_ln691_1325_fu_1888_p2 = (select_ln17016_fu_1848_p3 + 2'd1);

assign add_ln691_1326_fu_1213_p2 = (select_ln16968_fu_1175_p3 + 6'd1);

assign add_ln691_1327_fu_1035_p2 = (select_ln16895_fu_997_p3 + 6'd1);

assign add_ln691_1328_fu_1306_p2 = (select_ln16842_reg_1944 + 3'd1);

assign add_ln691_1329_fu_1608_p2 = (select_ln16969_reg_2077 + 4'd1);

assign add_ln691_1330_fu_1596_p2 = (select_ln16973_fu_1557_p3 + 2'd1);

assign add_ln691_1331_fu_1464_p2 = (c4_V_reg_616 + 4'd1);

assign add_ln691_1332_fu_1500_p2 = (c5_V_reg_638 + 5'd1);

assign add_ln691_1333_fu_1452_p2 = (c4_V_53_reg_605 + 4'd1);

assign add_ln691_1334_fu_1488_p2 = (c5_V_101_reg_627 + 5'd1);

assign add_ln691_1335_fu_1394_p2 = (select_ln16896_reg_2038 + 4'd1);

assign add_ln691_1336_fu_1382_p2 = (select_ln16900_fu_1342_p3 + 2'd1);

assign add_ln691_1337_fu_877_p2 = (c4_V_54_reg_416 + 4'd1);

assign add_ln691_1338_fu_913_p2 = (c5_V_102_reg_438 + 5'd1);

assign add_ln691_1339_fu_865_p2 = (c4_V_55_reg_405 + 4'd1);

assign add_ln691_1340_fu_901_p2 = (c5_V_103_reg_427 + 5'd1);

assign add_ln691_fu_1735_p2 = (select_ln17011_fu_1697_p3 + 6'd1);

assign add_ln890_298_fu_1918_p2 = (indvar_flatten184_reg_691 + 11'd1);

assign add_ln890_299_fu_1830_p2 = (indvar_flatten153_reg_737 + 6'd1);

assign add_ln890_300_fu_780_p2 = (indvar_flatten141_reg_347 + 5'd1);

assign add_ln890_301_fu_1613_p2 = (indvar_flatten81_reg_529 + 10'd1);

assign add_ln890_302_fu_1626_p2 = (indvar_flatten103_reg_517 + 11'd1);

assign add_ln890_303_fu_1399_p2 = (indvar_flatten8_reg_472 + 10'd1);

assign add_ln890_304_fu_1412_p2 = (indvar_flatten30_reg_460 + 11'd1);

assign add_ln890_305_fu_1539_p2 = (indvar_flatten72_reg_649 + 6'd1);

assign add_ln890_306_fu_1324_p2 = (indvar_flatten_reg_563 + 6'd1);

assign add_ln890_fu_1905_p2 = (indvar_flatten162_reg_703 + 10'd1);

assign and_ln16842_fu_818_p2 = (xor_ln16842_fu_812_p2 & arb_15_reg_382);

assign and_ln16889_1_fu_985_p2 = (xor_ln16889_fu_961_p2 & icmp_ln890_1424_fu_979_p2);

assign and_ln16889_fu_973_p2 = (xor_ln16889_fu_961_p2 & icmp_ln890_1423_fu_967_p2);

assign and_ln16895_1_fu_1011_p2 = (xor_ln16895_1_fu_1005_p2 & empty_fu_945_p1);

assign and_ln16895_fu_1029_p2 = (or_ln16895_1_fu_1023_p2 & and_ln16889_fu_973_p2);

assign and_ln16962_1_fu_1163_p2 = (xor_ln16962_fu_1139_p2 & icmp_ln890_1421_fu_1157_p2);

assign and_ln16962_fu_1151_p2 = (xor_ln16962_fu_1139_p2 & icmp_ln890_1420_fu_1145_p2);

assign and_ln16968_1_fu_1189_p2 = (xor_ln16968_1_fu_1183_p2 & empty_2528_fu_1123_p1);

assign and_ln16968_fu_1207_p2 = (or_ln16968_1_fu_1201_p2 & and_ln16962_fu_1151_p2);

assign and_ln17005_1_fu_1685_p2 = (xor_ln17005_fu_1661_p2 & icmp_ln890_1413_fu_1679_p2);

assign and_ln17005_fu_1673_p2 = (xor_ln17005_fu_1661_p2 & icmp_ln890_1412_fu_1667_p2);

assign and_ln17011_1_fu_1711_p2 = (xor_ln17011_1_fu_1705_p2 & empty_2530_fu_1645_p1);

assign and_ln17011_fu_1729_p2 = (or_ln17011_1_fu_1723_p2 & and_ln17005_fu_1673_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state12_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter2 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_28_reg_2137_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state19 = ((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((icmp_ln890_1426_fu_1520_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0));
end

assign ap_block_state24_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_pp1_stage0_iter2 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_27_reg_2248_pp1_iter1_reg == 1'd1));
end

assign ap_block_state31_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp2_stage0_iter2 = ((fifo_C_PE_0_0_x1101_full_n == 1'b0) & (icmp_ln878_26_reg_2335_pp2_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state6 = ((fifo_C_C_IO_L2_in_1_x118_full_n == 1'b0) | (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((icmp_ln890_1429_fu_933_p2 == 1'd0) & (fifo_C_C_IO_L2_in_0_x117_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign arb_fu_1301_p2 = (xor_ln16995_fu_1295_p2 | icmp_ln890317_reg_1939);

assign c3_56_fu_1431_p2 = (c3_reg_594 + 4'd1);

assign c3_57_fu_844_p2 = (c3_55_reg_394 + 4'd1);

assign data_split_V_29_address0 = zext_ln878_15_fu_1572_p1;

assign data_split_V_29_d0 = select_ln16973_1_fu_1565_p3[255:0];

assign data_split_V_30_address0 = zext_ln878_16_fu_1358_p1;

assign data_split_V_30_d0 = select_ln16900_1_fu_1350_p3[255:0];

assign data_split_V_address0 = zext_ln878_fu_1864_p1;

assign data_split_V_d0 = select_ln17016_1_fu_1856_p3[255:0];

assign empty_2527_fu_1061_p1 = add_ln691_1327_fu_1035_p2[0:0];

assign empty_2528_fu_1123_p1 = c6_V_155_reg_541[0:0];

assign empty_2529_fu_1239_p1 = add_ln691_1326_fu_1213_p2[0:0];

assign empty_2530_fu_1645_p1 = c6_V_reg_715[0:0];

assign empty_2531_fu_1761_p1 = add_ln691_fu_1735_p2[0:0];

assign empty_fu_945_p1 = c6_V_156_reg_484[0:0];

assign fifo_C_C_IO_L2_in_1_x118_din = fifo_C_C_IO_L2_in_0_x117_dout;

assign icmp_ln16849_fu_838_p2 = ((c3_55_reg_394 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln16854_fu_859_p2 = ((c3_55_reg_394 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln16889_fu_949_p2 = ((indvar_flatten60_reg_449 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln16922_fu_1425_p2 = ((c3_reg_594 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln16927_fu_1446_p2 = ((c3_reg_594 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln16962_fu_1127_p2 = ((indvar_flatten133_reg_506 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln17005_fu_1649_p2 = ((indvar_flatten214_reg_680 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln878319_fu_1842_p2 = ((ap_phi_mux_n_V_phi_fu_752_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_26_fu_1894_p2 = ((add_ln691_1325_fu_1888_p2 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_27_fu_1602_p2 = ((add_ln691_1330_fu_1596_p2 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_28_fu_1388_p2 = ((add_ln691_1336_fu_1382_p2 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_29_fu_1336_p2 = ((ap_phi_mux_n_V_16_phi_fu_578_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1551_p2 = ((ap_phi_mux_n_V_15_phi_fu_664_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln886_13_fu_854_p2 = ((zext_ln886_13_fu_850_p1 > add_i_i780_cast_reg_1957) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1441_p2 = ((zext_ln886_fu_1437_p1 > add_i_i780_cast_reg_1957) ? 1'b1 : 1'b0);

assign icmp_ln890317_fu_792_p2 = ((c1_V_reg_358 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1411_fu_1655_p2 = ((indvar_flatten184_reg_691 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1412_fu_1667_p2 = ((c7_V_reg_726 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1413_fu_1679_p2 = ((indvar_flatten162_reg_703 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1414_fu_1836_p2 = ((indvar_flatten153_reg_737 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1415_fu_1482_p2 = ((c4_V_reg_616 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1416_fu_1458_p2 = ((c4_V_53_reg_605 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1417_fu_895_p2 = ((c4_V_54_reg_416 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1418_fu_871_p2 = ((c4_V_55_reg_405 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1419_fu_1133_p2 = ((indvar_flatten103_reg_517 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1420_fu_1145_p2 = ((c7_V_93_reg_552 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1421_fu_1157_p2 = ((indvar_flatten81_reg_529 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1422_fu_955_p2 = ((indvar_flatten30_reg_460 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1423_fu_967_p2 = ((c7_V_94_reg_495 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1424_fu_979_p2 = ((indvar_flatten8_reg_472 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_1425_fu_1545_p2 = ((indvar_flatten72_reg_649 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1426_fu_1520_p2 = ((c5_V_reg_638 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1427_fu_1494_p2 = ((c5_V_101_reg_627 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1428_fu_1330_p2 = ((indvar_flatten_reg_563 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1429_fu_933_p2 = ((c5_V_102_reg_438 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1430_fu_907_p2 = ((c5_V_103_reg_427 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_786_p2 = ((indvar_flatten141_reg_347 == 5'd24) ? 1'b1 : 1'b0);

assign local_C_pong_V_address0 = tmp_47_fu_1526_p4;

assign or_ln16842_fu_806_p2 = (intra_trans_en_reg_369 | icmp_ln890317_fu_792_p2);

assign or_ln16895_1_fu_1023_p2 = (xor_ln16895_fu_1017_p2 | icmp_ln890_1422_fu_955_p2);

assign or_ln16895_fu_991_p2 = (icmp_ln890_1422_fu_955_p2 | and_ln16889_1_fu_985_p2);

assign or_ln16896_1_fu_1047_p2 = (or_ln16896_fu_1041_p2 | icmp_ln890_1422_fu_955_p2);

assign or_ln16896_fu_1041_p2 = (and_ln16895_fu_1029_p2 | and_ln16889_1_fu_985_p2);

assign or_ln16968_1_fu_1201_p2 = (xor_ln16968_fu_1195_p2 | icmp_ln890_1419_fu_1133_p2);

assign or_ln16968_fu_1169_p2 = (icmp_ln890_1419_fu_1133_p2 | and_ln16962_1_fu_1163_p2);

assign or_ln16969_1_fu_1225_p2 = (or_ln16969_fu_1219_p2 | icmp_ln890_1419_fu_1133_p2);

assign or_ln16969_fu_1219_p2 = (and_ln16968_fu_1207_p2 | and_ln16962_1_fu_1163_p2);

assign or_ln17011_1_fu_1723_p2 = (xor_ln17011_fu_1717_p2 | icmp_ln890_1411_fu_1655_p2);

assign or_ln17011_fu_1691_p2 = (icmp_ln890_1411_fu_1655_p2 | and_ln17005_1_fu_1685_p2);

assign or_ln17012_1_fu_1747_p2 = (or_ln17012_fu_1741_p2 | icmp_ln890_1411_fu_1655_p2);

assign or_ln17012_fu_1741_p2 = (and_ln17011_fu_1729_p2 | and_ln17005_1_fu_1685_p2);

assign p_shl_fu_824_p3 = {{select_ln16842_fu_798_p3}, {3'd0}};

assign r_25_fu_1582_p4 = {{select_ln16973_1_fu_1565_p3[511:256]}};

assign r_26_fu_1874_p4 = {{select_ln17016_1_fu_1856_p3[511:256]}};

assign r_fu_1368_p4 = {{select_ln16900_1_fu_1350_p3[511:256]}};

assign select_ln16842_fu_798_p3 = ((icmp_ln890317_fu_792_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_358);

assign select_ln16895_1_fu_1101_p3 = ((or_ln16895_fu_991_p2[0:0] == 1'b1) ? 4'd0 : tmp_581_fu_1091_p4);

assign select_ln16895_fu_997_p3 = ((or_ln16895_fu_991_p2[0:0] == 1'b1) ? 6'd0 : c6_V_156_reg_484);

assign select_ln16896_1_fu_1065_p3 = ((and_ln16895_fu_1029_p2[0:0] == 1'b1) ? empty_2527_fu_1061_p1 : and_ln16895_1_fu_1011_p2);

assign select_ln16896_2_fu_1109_p3 = ((and_ln16895_fu_1029_p2[0:0] == 1'b1) ? tmp_580_fu_1081_p4 : select_ln16895_1_fu_1101_p3);

assign select_ln16896_fu_1053_p3 = ((or_ln16896_1_fu_1047_p2[0:0] == 1'b1) ? 4'd0 : c7_V_94_reg_495);

assign select_ln16900_1_fu_1350_p3 = ((icmp_ln878_29_fu_1336_p2[0:0] == 1'b1) ? reg_774 : p_Val2_s_reg_585);

assign select_ln16900_fu_1342_p3 = ((icmp_ln878_29_fu_1336_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_n_V_16_phi_fu_578_p4);

assign select_ln16968_1_fu_1279_p3 = ((or_ln16968_fu_1169_p2[0:0] == 1'b1) ? 4'd0 : tmp_579_fu_1269_p4);

assign select_ln16968_fu_1175_p3 = ((or_ln16968_fu_1169_p2[0:0] == 1'b1) ? 6'd0 : c6_V_155_reg_541);

assign select_ln16969_1_fu_1243_p3 = ((and_ln16968_fu_1207_p2[0:0] == 1'b1) ? empty_2529_fu_1239_p1 : and_ln16968_1_fu_1189_p2);

assign select_ln16969_2_fu_1287_p3 = ((and_ln16968_fu_1207_p2[0:0] == 1'b1) ? tmp_578_fu_1259_p4 : select_ln16968_1_fu_1279_p3);

assign select_ln16969_fu_1231_p3 = ((or_ln16969_1_fu_1225_p2[0:0] == 1'b1) ? 4'd0 : c7_V_93_reg_552);

assign select_ln16973_1_fu_1565_p3 = ((icmp_ln878_fu_1551_p2[0:0] == 1'b1) ? in_data_V_73_reg_2218 : p_Val2_33_reg_671);

assign select_ln16973_fu_1557_p3 = ((icmp_ln878_fu_1551_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_n_V_15_phi_fu_664_p4);

assign select_ln17011_1_fu_1801_p3 = ((or_ln17011_fu_1691_p2[0:0] == 1'b1) ? 4'd0 : tmp_577_fu_1791_p4);

assign select_ln17011_fu_1697_p3 = ((or_ln17011_fu_1691_p2[0:0] == 1'b1) ? 6'd0 : c6_V_reg_715);

assign select_ln17012_1_fu_1765_p3 = ((and_ln17011_fu_1729_p2[0:0] == 1'b1) ? empty_2531_fu_1761_p1 : and_ln17011_1_fu_1711_p2);

assign select_ln17012_2_fu_1809_p3 = ((and_ln17011_fu_1729_p2[0:0] == 1'b1) ? tmp_fu_1781_p4 : select_ln17011_1_fu_1801_p3);

assign select_ln17012_fu_1753_p3 = ((or_ln17012_1_fu_1747_p2[0:0] == 1'b1) ? 4'd0 : c7_V_reg_726);

assign select_ln17016_1_fu_1856_p3 = ((icmp_ln878319_fu_1842_p2[0:0] == 1'b1) ? reg_774 : p_Val2_34_reg_759);

assign select_ln17016_fu_1848_p3 = ((icmp_ln878319_fu_1842_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_n_V_phi_fu_752_p4);

assign select_ln890_497_fu_1911_p3 = ((or_ln17011_reg_2280[0:0] == 1'b1) ? 10'd1 : add_ln890_fu_1905_p2);

assign select_ln890_498_fu_1924_p3 = ((icmp_ln890_1411_reg_2275[0:0] == 1'b1) ? 11'd1 : add_ln890_298_fu_1918_p2);

assign select_ln890_499_fu_1251_p3 = ((and_ln16968_fu_1207_p2[0:0] == 1'b1) ? add_ln691_1326_fu_1213_p2 : select_ln16968_fu_1175_p3);

assign select_ln890_500_fu_1073_p3 = ((and_ln16895_fu_1029_p2[0:0] == 1'b1) ? add_ln691_1327_fu_1035_p2 : select_ln16895_fu_997_p3);

assign select_ln890_501_fu_1619_p3 = ((or_ln16968_reg_2072[0:0] == 1'b1) ? 10'd1 : add_ln890_301_fu_1613_p2);

assign select_ln890_502_fu_1632_p3 = ((icmp_ln890_1419_reg_2067[0:0] == 1'b1) ? 11'd1 : add_ln890_302_fu_1626_p2);

assign select_ln890_503_fu_1405_p3 = ((or_ln16895_reg_2033[0:0] == 1'b1) ? 10'd1 : add_ln890_303_fu_1399_p2);

assign select_ln890_504_fu_1418_p3 = ((icmp_ln890_1422_reg_2028[0:0] == 1'b1) ? 11'd1 : add_ln890_304_fu_1412_p2);

assign select_ln890_fu_1773_p3 = ((and_ln17011_fu_1729_p2[0:0] == 1'b1) ? add_ln691_fu_1735_p2 : select_ln17011_fu_1697_p3);

assign tmp_47_fu_1526_p4 = {{{{56'd0}, {select_ln16969_reg_2077}}}, {select_ln16969_2_reg_2093}};

assign tmp_48_fu_1311_p4 = {{{{56'd0}, {select_ln16896_reg_2038}}}, {select_ln16896_2_reg_2054}};

assign tmp_577_fu_1791_p4 = {{c6_V_reg_715[4:1]}};

assign tmp_578_fu_1259_p4 = {{add_ln691_1326_fu_1213_p2[4:1]}};

assign tmp_579_fu_1269_p4 = {{c6_V_155_reg_541[4:1]}};

assign tmp_580_fu_1081_p4 = {{add_ln691_1327_fu_1035_p2[4:1]}};

assign tmp_581_fu_1091_p4 = {{c6_V_156_reg_484[4:1]}};

assign tmp_637_cast_fu_1474_p3 = {{trunc_ln16937_fu_1470_p1}, {4'd0}};

assign tmp_638_cast_fu_887_p3 = {{trunc_ln16864_fu_883_p1}, {4'd0}};

assign tmp_fu_1781_p4 = {{add_ln691_fu_1735_p2[4:1]}};

assign tmp_s_fu_1817_p4 = {{{{56'd0}, {select_ln17012_reg_2285}}}, {select_ln17012_2_reg_2301}};

assign trunc_ln16864_fu_883_p1 = c4_V_54_reg_416[2:0];

assign trunc_ln16937_fu_1470_p1 = c4_V_reg_616[2:0];

assign xor_ln16842_fu_812_p2 = (icmp_ln890317_fu_792_p2 ^ 1'd1);

assign xor_ln16889_fu_961_p2 = (icmp_ln890_1422_fu_955_p2 ^ 1'd1);

assign xor_ln16895_1_fu_1005_p2 = (or_ln16895_fu_991_p2 ^ 1'd1);

assign xor_ln16895_fu_1017_p2 = (icmp_ln890_1424_fu_979_p2 ^ 1'd1);

assign xor_ln16962_fu_1139_p2 = (icmp_ln890_1419_fu_1133_p2 ^ 1'd1);

assign xor_ln16968_1_fu_1183_p2 = (or_ln16968_fu_1169_p2 ^ 1'd1);

assign xor_ln16968_fu_1195_p2 = (icmp_ln890_1421_fu_1157_p2 ^ 1'd1);

assign xor_ln16995_fu_1295_p2 = (arb_15_reg_382 ^ 1'd1);

assign xor_ln17005_fu_1661_p2 = (icmp_ln890_1411_fu_1655_p2 ^ 1'd1);

assign xor_ln17011_1_fu_1705_p2 = (or_ln17011_fu_1691_p2 ^ 1'd1);

assign xor_ln17011_fu_1717_p2 = (icmp_ln890_1413_fu_1679_p2 ^ 1'd1);

assign zext_ln1497_15_fu_1592_p1 = r_25_fu_1582_p4;

assign zext_ln1497_16_fu_1378_p1 = r_fu_1368_p4;

assign zext_ln1497_fu_1884_p1 = r_26_fu_1874_p4;

assign zext_ln16864_1_fu_928_p1 = add_ln16864_fu_923_p2;

assign zext_ln16864_fu_919_p1 = c5_V_102_reg_438;

assign zext_ln16937_1_fu_1515_p1 = add_ln16937_fu_1510_p2;

assign zext_ln16937_fu_1506_p1 = c5_V_reg_638;

assign zext_ln878_15_fu_1572_p1 = select_ln16973_fu_1557_p3;

assign zext_ln878_16_fu_1358_p1 = select_ln16900_fu_1342_p3;

assign zext_ln878_fu_1864_p1 = select_ln17016_fu_1848_p3;

assign zext_ln886_13_fu_850_p1 = c3_55_reg_394;

assign zext_ln886_fu_1437_p1 = c3_reg_594;

assign zext_ln890_93_fu_1535_p1 = select_ln16969_1_reg_2083;

assign zext_ln890_94_fu_1320_p1 = select_ln16896_1_reg_2044;

assign zext_ln890_fu_1826_p1 = select_ln17012_1_reg_2291;

always @ (posedge ap_clk) begin
    add_i_i780_cast_reg_1957[2:0] <= 3'b001;
    tmp_638_cast_reg_1991[3:0] <= 4'b0000;
    tmp_637_cast_reg_2184[3:0] <= 4'b0000;
end

endmodule //top_C_IO_L2_in_0_x1
