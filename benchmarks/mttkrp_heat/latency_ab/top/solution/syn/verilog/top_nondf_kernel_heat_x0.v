// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_nondf_kernel_heat_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xout_address0,
        xout_ce0,
        xout_q0,
        xin_address0,
        xin_ce0,
        xin_we0,
        xin_d0
);

parameter    ap_ST_fsm_state1 = 155'd1;
parameter    ap_ST_fsm_state2 = 155'd2;
parameter    ap_ST_fsm_state3 = 155'd4;
parameter    ap_ST_fsm_state4 = 155'd8;
parameter    ap_ST_fsm_state5 = 155'd16;
parameter    ap_ST_fsm_state6 = 155'd32;
parameter    ap_ST_fsm_state7 = 155'd64;
parameter    ap_ST_fsm_state8 = 155'd128;
parameter    ap_ST_fsm_state9 = 155'd256;
parameter    ap_ST_fsm_state10 = 155'd512;
parameter    ap_ST_fsm_state11 = 155'd1024;
parameter    ap_ST_fsm_state12 = 155'd2048;
parameter    ap_ST_fsm_state13 = 155'd4096;
parameter    ap_ST_fsm_state14 = 155'd8192;
parameter    ap_ST_fsm_state15 = 155'd16384;
parameter    ap_ST_fsm_state16 = 155'd32768;
parameter    ap_ST_fsm_state17 = 155'd65536;
parameter    ap_ST_fsm_state18 = 155'd131072;
parameter    ap_ST_fsm_state19 = 155'd262144;
parameter    ap_ST_fsm_state20 = 155'd524288;
parameter    ap_ST_fsm_state21 = 155'd1048576;
parameter    ap_ST_fsm_state22 = 155'd2097152;
parameter    ap_ST_fsm_state23 = 155'd4194304;
parameter    ap_ST_fsm_state24 = 155'd8388608;
parameter    ap_ST_fsm_state25 = 155'd16777216;
parameter    ap_ST_fsm_state26 = 155'd33554432;
parameter    ap_ST_fsm_state27 = 155'd67108864;
parameter    ap_ST_fsm_state28 = 155'd134217728;
parameter    ap_ST_fsm_state29 = 155'd268435456;
parameter    ap_ST_fsm_state30 = 155'd536870912;
parameter    ap_ST_fsm_state31 = 155'd1073741824;
parameter    ap_ST_fsm_state32 = 155'd2147483648;
parameter    ap_ST_fsm_state33 = 155'd4294967296;
parameter    ap_ST_fsm_state34 = 155'd8589934592;
parameter    ap_ST_fsm_state35 = 155'd17179869184;
parameter    ap_ST_fsm_state36 = 155'd34359738368;
parameter    ap_ST_fsm_state37 = 155'd68719476736;
parameter    ap_ST_fsm_state38 = 155'd137438953472;
parameter    ap_ST_fsm_state39 = 155'd274877906944;
parameter    ap_ST_fsm_state40 = 155'd549755813888;
parameter    ap_ST_fsm_state41 = 155'd1099511627776;
parameter    ap_ST_fsm_state42 = 155'd2199023255552;
parameter    ap_ST_fsm_state43 = 155'd4398046511104;
parameter    ap_ST_fsm_state44 = 155'd8796093022208;
parameter    ap_ST_fsm_state45 = 155'd17592186044416;
parameter    ap_ST_fsm_state46 = 155'd35184372088832;
parameter    ap_ST_fsm_state47 = 155'd70368744177664;
parameter    ap_ST_fsm_state48 = 155'd140737488355328;
parameter    ap_ST_fsm_state49 = 155'd281474976710656;
parameter    ap_ST_fsm_state50 = 155'd562949953421312;
parameter    ap_ST_fsm_state51 = 155'd1125899906842624;
parameter    ap_ST_fsm_state52 = 155'd2251799813685248;
parameter    ap_ST_fsm_state53 = 155'd4503599627370496;
parameter    ap_ST_fsm_state54 = 155'd9007199254740992;
parameter    ap_ST_fsm_state55 = 155'd18014398509481984;
parameter    ap_ST_fsm_state56 = 155'd36028797018963968;
parameter    ap_ST_fsm_state57 = 155'd72057594037927936;
parameter    ap_ST_fsm_state58 = 155'd144115188075855872;
parameter    ap_ST_fsm_state59 = 155'd288230376151711744;
parameter    ap_ST_fsm_state60 = 155'd576460752303423488;
parameter    ap_ST_fsm_state61 = 155'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 155'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 155'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 155'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 155'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 155'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 155'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 155'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 155'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 155'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 155'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 155'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 155'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 155'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 155'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 155'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 155'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 155'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 155'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 155'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 155'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 155'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 155'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 155'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 155'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 155'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 155'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 155'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 155'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 155'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 155'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 155'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 155'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 155'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 155'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 155'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 155'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 155'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 155'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 155'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 155'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 155'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 155'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 155'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 155'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 155'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 155'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 155'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 155'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 155'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 155'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 155'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 155'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 155'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 155'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 155'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 155'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 155'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 155'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 155'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 155'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 155'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 155'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 155'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 155'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 155'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 155'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 155'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 155'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 155'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 155'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 155'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 155'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 155'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 155'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 155'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 155'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 155'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 155'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 155'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 155'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 155'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 155'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 155'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 155'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 155'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 155'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 155'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 155'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 155'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 155'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 155'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 155'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 155'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 155'd22835963083295358096932575511191922182123945984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] xout_address0;
output   xout_ce0;
input  [511:0] xout_q0;
output  [9:0] xin_address0;
output   xin_ce0;
output   xin_we0;
output  [511:0] xin_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg xout_ce0;
reg xin_ce0;
reg xin_we0;

(* fsm_encoding = "none" *) reg   [154:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_462_p1;
reg   [63:0] reg_471;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state89;
wire   [63:0] grp_fu_451_p2;
reg   [63:0] reg_477;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state129;
reg   [63:0] reg_485;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state113;
wire   [63:0] grp_fu_465_p1;
reg   [63:0] reg_491;
wire   [63:0] grp_fu_439_p2;
reg   [63:0] reg_497;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state145;
wire   [63:0] grp_fu_443_p2;
reg   [63:0] reg_503;
wire   [63:0] grp_fu_468_p1;
reg   [63:0] reg_509;
wire   [63:0] grp_fu_447_p2;
reg   [63:0] reg_514;
wire   [63:0] grp_fu_457_p2;
reg   [63:0] reg_519;
wire   [5:0] add_ln29_fu_524_p2;
reg   [5:0] add_ln29_reg_1549;
wire    ap_CS_fsm_state2;
wire   [14:0] zext_ln29_fu_530_p1;
reg   [14:0] zext_ln29_reg_1554;
wire   [5:0] add_ln30_fu_540_p2;
reg   [5:0] add_ln30_reg_1562;
wire    ap_CS_fsm_state3;
wire   [9:0] tmp_cast_fu_550_p3;
reg   [9:0] tmp_cast_reg_1567;
wire   [9:0] tmp_s_fu_568_p3;
reg   [9:0] tmp_s_reg_1575;
wire   [0:0] icmp_ln30_fu_558_p2;
wire   [5:0] add_ln31_fu_576_p2;
reg   [5:0] add_ln31_reg_1580;
wire    ap_CS_fsm_state4;
reg   [14:0] A_V_addr_reg_1585;
reg   [14:0] B_V_addr_reg_1590;
wire   [0:0] icmp_ln31_fu_614_p2;
reg   [511:0] xout_load_reg_1603;
wire    ap_CS_fsm_state5;
wire   [3:0] t_5_fu_630_p2;
reg   [3:0] t_5_reg_1609;
wire    ap_CS_fsm_state7;
wire   [4:0] indvars_iv_next73_fu_648_p2;
reg   [4:0] indvars_iv_next73_reg_1620;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln38_fu_642_p2;
wire   [4:0] empty_2984_fu_654_p2;
reg   [4:0] empty_2984_reg_1626;
wire   [4:0] indvars_iv_next69_fu_666_p2;
reg   [4:0] indvars_iv_next69_reg_1634;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln39_fu_660_p2;
wire   [4:0] empty_2985_fu_672_p2;
reg   [4:0] empty_2985_reg_1640;
wire    ap_CS_fsm_state10;
reg   [14:0] A_V_addr_12_reg_1650;
reg   [14:0] A_V_addr_13_reg_1655;
reg   [14:0] A_V_addr_14_reg_1660;
reg   [14:0] A_V_addr_15_reg_1665;
reg   [14:0] B_V_addr_18_reg_1670;
wire   [63:0] op2_fu_756_p1;
reg   [63:0] op2_reg_1678;
wire    ap_CS_fsm_state12;
wire   [63:0] op2_14_fu_760_p1;
reg   [63:0] op2_14_reg_1683;
wire    ap_CS_fsm_state20;
wire   [63:0] op2_16_fu_764_p1;
reg   [63:0] op2_16_reg_1688;
wire   [4:0] add_ln41_fu_768_p2;
reg   [4:0] add_ln41_reg_1693;
wire    ap_CS_fsm_state26;
wire   [63:0] op2_15_fu_789_p1;
reg   [63:0] op2_15_reg_1703;
wire    ap_CS_fsm_state27;
wire   [63:0] op2_17_fu_793_p1;
reg   [63:0] op2_17_reg_1708;
wire    ap_CS_fsm_state28;
wire   [63:0] op2_18_fu_797_p1;
reg   [63:0] op2_18_reg_1713;
wire    ap_CS_fsm_state34;
wire   [63:0] op2_19_fu_822_p1;
reg   [63:0] op2_19_reg_1723;
wire    ap_CS_fsm_state36;
reg   [0:0] p_Result_s_reg_1728;
wire    ap_CS_fsm_state74;
wire   [52:0] p_Result_4_fu_860_p3;
reg   [52:0] p_Result_4_reg_1733;
wire   [0:0] icmp_ln323_fu_868_p2;
reg   [0:0] icmp_ln323_reg_1739;
wire   [11:0] sh_amt_fu_874_p2;
reg   [11:0] sh_amt_reg_1744;
wire   [9:0] trunc_ln326_fu_880_p1;
reg   [9:0] trunc_ln326_reg_1749;
wire   [0:0] icmp_ln329_fu_890_p2;
reg   [0:0] icmp_ln329_reg_1754;
wire   [0:0] icmp_ln330_fu_896_p2;
reg   [0:0] icmp_ln330_reg_1760;
wire   [52:0] select_ln327_fu_914_p3;
reg   [52:0] select_ln327_reg_1766;
wire   [0:0] or_ln327_fu_922_p2;
reg   [0:0] or_ln327_reg_1771;
wire   [0:0] and_ln329_fu_971_p2;
reg   [0:0] and_ln329_reg_1777;
wire    ap_CS_fsm_state75;
wire   [511:0] select_ln337_fu_1002_p3;
reg   [511:0] select_ln337_reg_1782;
wire   [511:0] select_ln330_4_fu_1025_p3;
reg   [511:0] select_ln330_4_reg_1787;
wire    ap_CS_fsm_state76;
wire   [511:0] select_ln345_fu_1038_p3;
reg   [511:0] select_ln345_reg_1793;
wire    ap_CS_fsm_state77;
wire   [3:0] t_6_fu_1044_p2;
reg   [3:0] t_6_reg_1798;
wire    ap_CS_fsm_state79;
wire   [4:0] indvars_iv_next60_fu_1062_p2;
reg   [4:0] indvars_iv_next60_reg_1809;
wire    ap_CS_fsm_state80;
wire   [0:0] icmp_ln47_fu_1056_p2;
wire   [4:0] empty_2986_fu_1068_p2;
reg   [4:0] empty_2986_reg_1815;
wire   [4:0] indvars_iv_next56_fu_1080_p2;
reg   [4:0] indvars_iv_next56_reg_1823;
wire    ap_CS_fsm_state81;
wire   [0:0] icmp_ln48_fu_1074_p2;
wire   [4:0] empty_2987_fu_1086_p2;
reg   [4:0] empty_2987_reg_1829;
reg   [14:0] A_V_addr_18_reg_1834;
wire    ap_CS_fsm_state82;
reg   [14:0] B_V_addr_12_reg_1844;
reg   [14:0] B_V_addr_13_reg_1849;
reg   [14:0] B_V_addr_14_reg_1854;
reg   [14:0] B_V_addr_15_reg_1859;
wire   [63:0] op2_20_fu_1170_p1;
reg   [63:0] op2_20_reg_1867;
wire    ap_CS_fsm_state84;
wire   [63:0] op2_21_fu_1174_p1;
reg   [63:0] op2_21_reg_1872;
wire    ap_CS_fsm_state92;
wire   [63:0] op2_23_fu_1178_p1;
reg   [63:0] op2_23_reg_1877;
wire   [4:0] add_ln50_fu_1182_p2;
reg   [4:0] add_ln50_reg_1882;
wire    ap_CS_fsm_state98;
wire   [63:0] op2_22_fu_1203_p1;
reg   [63:0] op2_22_reg_1892;
wire    ap_CS_fsm_state99;
wire   [63:0] op2_24_fu_1207_p1;
reg   [63:0] op2_24_reg_1897;
wire    ap_CS_fsm_state100;
wire   [63:0] op2_25_fu_1211_p1;
reg   [63:0] op2_25_reg_1902;
wire    ap_CS_fsm_state106;
wire   [63:0] op2_26_fu_1236_p1;
reg   [63:0] op2_26_reg_1912;
wire    ap_CS_fsm_state108;
reg   [0:0] p_Result_5_reg_1917;
wire    ap_CS_fsm_state146;
wire   [52:0] p_Result_6_fu_1274_p3;
reg   [52:0] p_Result_6_reg_1922;
wire   [0:0] icmp_ln323_2_fu_1282_p2;
reg   [0:0] icmp_ln323_2_reg_1928;
wire   [11:0] sh_amt_5_fu_1288_p2;
reg   [11:0] sh_amt_5_reg_1933;
wire   [9:0] trunc_ln326_2_fu_1294_p1;
reg   [9:0] trunc_ln326_2_reg_1938;
wire   [0:0] icmp_ln329_2_fu_1304_p2;
reg   [0:0] icmp_ln329_2_reg_1943;
wire   [0:0] icmp_ln330_2_fu_1310_p2;
reg   [0:0] icmp_ln330_2_reg_1949;
wire   [52:0] select_ln327_2_fu_1328_p3;
reg   [52:0] select_ln327_2_reg_1955;
wire   [0:0] or_ln327_2_fu_1336_p2;
reg   [0:0] or_ln327_2_reg_1960;
wire   [0:0] and_ln329_2_fu_1385_p2;
reg   [0:0] and_ln329_2_reg_1966;
wire    ap_CS_fsm_state147;
wire   [511:0] select_ln337_2_fu_1416_p3;
reg   [511:0] select_ln337_2_reg_1971;
wire   [511:0] select_ln330_6_fu_1439_p3;
reg   [511:0] select_ln330_6_reg_1976;
wire    ap_CS_fsm_state148;
wire   [511:0] select_ln345_2_fu_1452_p3;
reg   [511:0] select_ln345_2_reg_1982;
wire    ap_CS_fsm_state149;
wire   [5:0] add_ln55_fu_1458_p2;
reg   [5:0] add_ln55_reg_1987;
wire    ap_CS_fsm_state151;
wire   [11:0] zext_ln55_fu_1472_p1;
reg   [11:0] zext_ln55_reg_1992;
wire   [9:0] tmp_19_fu_1486_p3;
reg   [9:0] tmp_19_reg_2000;
wire   [0:0] icmp_ln55_fu_1476_p2;
wire   [5:0] add_ln56_fu_1494_p2;
reg   [5:0] add_ln56_reg_2005;
wire    ap_CS_fsm_state152;
wire   [9:0] add_ln57_fu_1533_p2;
reg   [9:0] add_ln57_reg_2023;
wire   [0:0] icmp_ln56_fu_1527_p2;
wire   [511:0] A_V_q1;
wire    ap_CS_fsm_state154;
wire   [511:0] B_V_q1;
reg   [14:0] A_V_address0;
reg    A_V_ce0;
reg    A_V_we0;
reg   [511:0] A_V_d0;
wire   [511:0] A_V_q0;
reg   [14:0] A_V_address1;
reg    A_V_ce1;
reg   [14:0] B_V_address0;
reg    B_V_ce0;
reg    B_V_we0;
reg   [511:0] B_V_d0;
wire   [511:0] B_V_q0;
reg   [14:0] B_V_address1;
reg    B_V_ce1;
reg   [5:0] k_reg_290;
reg   [5:0] i_reg_301;
wire   [0:0] icmp_ln29_fu_534_p2;
reg   [5:0] j_reg_312;
wire    ap_CS_fsm_state6;
reg   [3:0] t_reg_323;
reg   [4:0] i_4_reg_334;
wire   [0:0] icmp_ln37_fu_636_p2;
reg   [4:0] j_4_reg_346;
wire   [0:0] icmp_ln40_fu_750_p2;
reg   [4:0] k_3_reg_358;
wire    ap_CS_fsm_state78;
reg   [3:0] t_4_reg_370;
reg   [4:0] i_6_reg_381;
wire   [0:0] icmp_ln46_fu_1050_p2;
reg   [4:0] j_6_reg_393;
wire   [0:0] icmp_ln49_fu_1164_p2;
reg   [4:0] k_4_reg_405;
wire    ap_CS_fsm_state150;
reg   [5:0] i_5_reg_417;
reg   [5:0] j_5_reg_428;
wire    ap_CS_fsm_state155;
wire   [63:0] zext_ln32_2_fu_604_p1;
wire   [63:0] zext_ln32_fu_625_p1;
wire   [63:0] zext_ln534_fu_688_p1;
wire   [63:0] zext_ln534_13_fu_703_p1;
wire   [63:0] zext_ln534_14_fu_717_p1;
wire   [63:0] zext_ln534_15_fu_731_p1;
wire   [63:0] zext_ln534_16_fu_745_p1;
wire   [63:0] zext_ln534_17_fu_784_p1;
wire   [63:0] zext_ln534_18_fu_817_p1;
wire   [63:0] zext_ln50_fu_1102_p1;
wire   [63:0] zext_ln534_19_fu_1117_p1;
wire   [63:0] zext_ln534_20_fu_1131_p1;
wire   [63:0] zext_ln534_21_fu_1145_p1;
wire   [63:0] zext_ln534_22_fu_1159_p1;
wire   [63:0] zext_ln534_23_fu_1198_p1;
wire   [63:0] zext_ln534_24_fu_1231_p1;
wire   [63:0] zext_ln215_2_fu_1517_p1;
wire   [63:0] zext_ln57_fu_1545_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state107;
wire   [511:0] grp_fu_1538_p2;
reg   [63:0] grp_fu_439_p0;
reg   [63:0] grp_fu_439_p1;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state138;
reg   [63:0] grp_fu_443_p0;
reg   [63:0] grp_fu_443_p1;
reg   [63:0] grp_fu_451_p0;
reg   [63:0] grp_fu_451_p1;
reg   [63:0] grp_fu_462_p0;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state109;
reg   [63:0] grp_fu_465_p0;
reg   [63:0] grp_fu_468_p0;
wire   [4:0] trunc_ln32_fu_546_p1;
wire   [4:0] empty_fu_564_p1;
wire   [9:0] zext_ln32_1_fu_582_p1;
wire   [9:0] add_ln32_1_fu_586_p2;
wire   [14:0] tmp_27_cast_fu_591_p3;
wire   [14:0] add_ln32_2_fu_599_p2;
wire   [9:0] zext_ln31_fu_610_p1;
wire   [9:0] add_ln32_fu_620_p2;
wire   [14:0] tmp_20_fu_678_p4;
wire   [14:0] tmp_21_fu_694_p4;
wire   [14:0] tmp_22_fu_708_p4;
wire   [14:0] tmp_23_fu_722_p4;
wire   [14:0] tmp_24_fu_736_p4;
wire   [14:0] tmp_25_fu_774_p4;
wire   [4:0] add_ln41_1_fu_801_p2;
wire   [14:0] tmp_26_fu_807_p4;
wire   [63:0] reg_fu_826_p1;
wire   [10:0] exp_fu_842_p4;
wire   [51:0] trunc_ln315_fu_856_p1;
wire   [62:0] trunc_ln306_fu_830_p1;
wire   [11:0] zext_ln311_fu_852_p1;
wire   [0:0] icmp_ln327_fu_884_p2;
wire   [0:0] xor_ln323_fu_902_p2;
wire   [0:0] and_ln327_fu_908_p2;
wire   [9:0] sh_amt_4_fu_931_p2;
wire   [5:0] trunc_ln331_fu_944_p1;
wire   [52:0] trunc_ln331cast_fu_947_p1;
wire   [511:0] zext_ln328_fu_928_p1;
wire   [511:0] zext_ln339_fu_956_p1;
wire   [0:0] xor_ln327_fu_966_p2;
wire   [0:0] and_ln330_fu_976_p2;
wire   [52:0] lshr_ln331_fu_951_p2;
wire   [52:0] select_ln330_fu_981_p3;
wire   [0:0] tmp_28_fu_936_p3;
wire   [0:0] or_ln329_fu_992_p2;
wire   [0:0] or_ln337_fu_996_p2;
wire   [511:0] zext_ln329_fu_988_p1;
wire   [511:0] shl_ln339_fu_960_p2;
wire   [0:0] xor_ln330_fu_1010_p2;
wire   [0:0] and_ln330_4_fu_1015_p2;
wire   [0:0] or_ln330_fu_1020_p2;
wire   [511:0] grp_fu_1032_p1;
wire   [511:0] grp_fu_1032_p2;
wire   [14:0] tmp_27_fu_1092_p4;
wire   [14:0] tmp_29_fu_1108_p4;
wire   [14:0] tmp_30_fu_1122_p4;
wire   [14:0] tmp_31_fu_1136_p4;
wire   [14:0] tmp_32_fu_1150_p4;
wire   [14:0] tmp_33_fu_1188_p4;
wire   [4:0] add_ln50_1_fu_1215_p2;
wire   [14:0] tmp_34_fu_1221_p4;
wire   [63:0] reg_2_fu_1240_p1;
wire   [10:0] exp_2_fu_1256_p4;
wire   [51:0] trunc_ln315_2_fu_1270_p1;
wire   [62:0] trunc_ln306_2_fu_1244_p1;
wire   [11:0] zext_ln311_2_fu_1266_p1;
wire   [0:0] icmp_ln327_2_fu_1298_p2;
wire   [0:0] xor_ln323_2_fu_1316_p2;
wire   [0:0] and_ln327_2_fu_1322_p2;
wire   [9:0] sh_amt_6_fu_1345_p2;
wire   [5:0] trunc_ln331_2_fu_1358_p1;
wire   [52:0] trunc_ln331_2cast_fu_1361_p1;
wire   [511:0] zext_ln328_2_fu_1342_p1;
wire   [511:0] zext_ln339_2_fu_1370_p1;
wire   [0:0] xor_ln327_2_fu_1380_p2;
wire   [0:0] and_ln330_5_fu_1390_p2;
wire   [52:0] lshr_ln331_2_fu_1365_p2;
wire   [52:0] select_ln330_5_fu_1395_p3;
wire   [0:0] tmp_36_fu_1350_p3;
wire   [0:0] or_ln329_2_fu_1406_p2;
wire   [0:0] or_ln337_2_fu_1410_p2;
wire   [511:0] zext_ln329_2_fu_1402_p1;
wire   [511:0] shl_ln339_2_fu_1374_p2;
wire   [0:0] xor_ln330_2_fu_1424_p2;
wire   [0:0] and_ln330_6_fu_1429_p2;
wire   [0:0] or_ln330_2_fu_1434_p2;
wire   [511:0] grp_fu_1446_p1;
wire   [511:0] grp_fu_1446_p2;
wire   [10:0] tmp_18_fu_1464_p3;
wire   [4:0] empty_2988_fu_1482_p1;
wire   [11:0] zext_ln215_fu_1500_p1;
wire   [11:0] add_ln215_fu_1504_p2;
wire   [16:0] tmp_fu_1509_p3;
wire   [9:0] zext_ln56_fu_1523_p1;
reg   [1:0] grp_fu_439_opcode;
reg   [1:0] grp_fu_443_opcode;
reg   [154:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 155'd1;
end

top_nondf_kernel_heat_x0_A_V #(
    .DataWidth( 512 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
A_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_address0),
    .ce0(A_V_ce0),
    .we0(A_V_we0),
    .d0(A_V_d0),
    .q0(A_V_q0),
    .address1(A_V_address1),
    .ce1(A_V_ce1),
    .q1(A_V_q1)
);

top_nondf_kernel_heat_x0_A_V #(
    .DataWidth( 512 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
B_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_address0),
    .ce0(B_V_ce0),
    .we0(B_V_we0),
    .d0(B_V_d0),
    .q0(B_V_q0),
    .address1(B_V_address1),
    .ce1(B_V_ce1),
    .q1(B_V_q1)
);

top_dadddsub_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_8_full_dsp_1_U738(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_439_p0),
    .din1(grp_fu_439_p1),
    .opcode(grp_fu_439_opcode),
    .ce(1'b1),
    .dout(grp_fu_439_p2)
);

top_dadddsub_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_8_full_dsp_1_U739(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_443_p0),
    .din1(grp_fu_443_p1),
    .opcode(grp_fu_443_opcode),
    .ce(1'b1),
    .dout(grp_fu_443_p2)
);

top_dsub_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_8_full_dsp_1_U740(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_509),
    .din1(reg_477),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

top_dmul_64ns_64ns_64_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_8_max_dsp_1_U741(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_451_p0),
    .din1(grp_fu_451_p1),
    .ce(1'b1),
    .dout(grp_fu_451_p2)
);

top_dmul_64ns_64ns_64_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_8_max_dsp_1_U742(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_503),
    .din1(64'd4593671619917905920),
    .ce(1'b1),
    .dout(grp_fu_457_p2)
);

top_uitodp_64ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_5_no_dsp_1_U743(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_462_p0),
    .ce(1'b1),
    .dout(grp_fu_462_p1)
);

top_uitodp_64ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_5_no_dsp_1_U744(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_465_p0),
    .ce(1'b1),
    .dout(grp_fu_465_p1)
);

top_uitodp_64ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_5_no_dsp_1_U745(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_468_p0),
    .ce(1'b1),
    .dout(grp_fu_468_p1)
);

top_sub_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
sub_512ns_512ns_512_2_1_U746(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(512'd0),
    .din1(grp_fu_1032_p1),
    .ce(1'b1),
    .dout(grp_fu_1032_p2)
);

top_sub_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
sub_512ns_512ns_512_2_1_U747(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(512'd0),
    .din1(grp_fu_1446_p1),
    .ce(1'b1),
    .dout(grp_fu_1446_p2)
);

top_add_512ns_512ns_512_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 512 ),
    .din1_WIDTH( 512 ),
    .dout_WIDTH( 512 ))
add_512ns_512ns_512_2_1_U748(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_q1),
    .ce(1'b1),
    .dout(grp_fu_1538_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_636_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i_4_reg_334 <= 5'd1;
    end else if (((icmp_ln39_fu_660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_4_reg_334 <= indvars_iv_next73_reg_1620;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_1050_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state79))) begin
        i_5_reg_417 <= 6'd0;
    end else if (((icmp_ln56_fu_1527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state152))) begin
        i_5_reg_417 <= add_ln55_reg_1987;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_1050_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        i_6_reg_381 <= 5'd1;
    end else if (((icmp_ln48_fu_1074_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        i_6_reg_381 <= indvars_iv_next60_reg_1809;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_301 <= 6'd0;
    end else if (((icmp_ln31_fu_614_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_reg_301 <= add_ln30_reg_1562;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_642_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        j_4_reg_346 <= 5'd1;
    end else if (((icmp_ln40_fu_750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        j_4_reg_346 <= indvars_iv_next69_reg_1634;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_1476_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        j_5_reg_428 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        j_5_reg_428 <= add_ln56_reg_2005;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_1056_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        j_6_reg_393 <= 5'd1;
    end else if (((icmp_ln49_fu_1164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        j_6_reg_393 <= indvars_iv_next56_reg_1823;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_312 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        j_reg_312 <= add_ln31_reg_1580;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_660_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        k_3_reg_358 <= 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        k_3_reg_358 <= add_ln41_reg_1693;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        k_4_reg_405 <= 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        k_4_reg_405 <= add_ln50_reg_1882;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_290 <= 6'd0;
    end else if (((icmp_ln30_fu_558_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        k_reg_290 <= add_ln29_reg_1549;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_636_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        t_4_reg_370 <= 4'd0;
    end else if (((icmp_ln47_fu_1056_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        t_4_reg_370 <= t_6_reg_1798;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        t_reg_323 <= 4'd0;
    end else if (((icmp_ln38_fu_642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        t_reg_323 <= t_5_reg_1609;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        A_V_addr_12_reg_1650 <= zext_ln534_13_fu_703_p1;
        A_V_addr_13_reg_1655 <= zext_ln534_14_fu_717_p1;
        A_V_addr_14_reg_1660 <= zext_ln534_15_fu_731_p1;
        A_V_addr_15_reg_1665 <= zext_ln534_16_fu_745_p1;
        B_V_addr_18_reg_1670 <= zext_ln534_fu_688_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        A_V_addr_18_reg_1834 <= zext_ln50_fu_1102_p1;
        B_V_addr_12_reg_1844 <= zext_ln534_19_fu_1117_p1;
        B_V_addr_13_reg_1849 <= zext_ln534_20_fu_1131_p1;
        B_V_addr_14_reg_1854 <= zext_ln534_21_fu_1145_p1;
        B_V_addr_15_reg_1859 <= zext_ln534_22_fu_1159_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_V_addr_reg_1585 <= zext_ln32_2_fu_604_p1;
        B_V_addr_reg_1590 <= zext_ln32_2_fu_604_p1;
        add_ln31_reg_1580 <= add_ln31_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln29_reg_1549 <= add_ln29_fu_524_p2;
        zext_ln29_reg_1554[5 : 0] <= zext_ln29_fu_530_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln30_reg_1562 <= add_ln30_fu_540_p2;
        tmp_cast_reg_1567[9 : 5] <= tmp_cast_fu_550_p3[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln41_reg_1693 <= add_ln41_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        add_ln50_reg_1882 <= add_ln50_fu_1182_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        add_ln55_reg_1987 <= add_ln55_fu_1458_p2;
        zext_ln55_reg_1992[10 : 5] <= zext_ln55_fu_1472_p1[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        add_ln56_reg_2005 <= add_ln56_fu_1494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_1527_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state152))) begin
        add_ln57_reg_2023 <= add_ln57_fu_1533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        and_ln329_2_reg_1966 <= and_ln329_2_fu_1385_p2;
        select_ln337_2_reg_1971 <= select_ln337_2_fu_1416_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        and_ln329_reg_1777 <= and_ln329_fu_971_p2;
        select_ln337_reg_1782 <= select_ln337_fu_1002_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_642_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        empty_2984_reg_1626 <= empty_2984_fu_654_p2;
        indvars_iv_next73_reg_1620 <= indvars_iv_next73_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_660_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        empty_2985_reg_1640 <= empty_2985_fu_672_p2;
        indvars_iv_next69_reg_1634 <= indvars_iv_next69_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_1056_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        empty_2986_reg_1815 <= empty_2986_fu_1068_p2;
        indvars_iv_next60_reg_1809 <= indvars_iv_next60_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        empty_2987_reg_1829 <= empty_2987_fu_1086_p2;
        indvars_iv_next56_reg_1823 <= indvars_iv_next56_fu_1080_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        icmp_ln323_2_reg_1928 <= icmp_ln323_2_fu_1282_p2;
        icmp_ln329_2_reg_1943 <= icmp_ln329_2_fu_1304_p2;
        icmp_ln330_2_reg_1949 <= icmp_ln330_2_fu_1310_p2;
        or_ln327_2_reg_1960 <= or_ln327_2_fu_1336_p2;
        p_Result_5_reg_1917 <= reg_2_fu_1240_p1[32'd63];
        p_Result_6_reg_1922[51 : 0] <= p_Result_6_fu_1274_p3[51 : 0];
        select_ln327_2_reg_1955 <= select_ln327_2_fu_1328_p3;
        sh_amt_5_reg_1933 <= sh_amt_5_fu_1288_p2;
        trunc_ln326_2_reg_1938 <= trunc_ln326_2_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        icmp_ln323_reg_1739 <= icmp_ln323_fu_868_p2;
        icmp_ln329_reg_1754 <= icmp_ln329_fu_890_p2;
        icmp_ln330_reg_1760 <= icmp_ln330_fu_896_p2;
        or_ln327_reg_1771 <= or_ln327_fu_922_p2;
        p_Result_4_reg_1733[51 : 0] <= p_Result_4_fu_860_p3[51 : 0];
        p_Result_s_reg_1728 <= reg_fu_826_p1[32'd63];
        select_ln327_reg_1766 <= select_ln327_fu_914_p3;
        sh_amt_reg_1744 <= sh_amt_fu_874_p2;
        trunc_ln326_reg_1749 <= trunc_ln326_fu_880_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        op2_14_reg_1683 <= op2_14_fu_760_p1;
        op2_16_reg_1688 <= op2_16_fu_764_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        op2_15_reg_1703 <= op2_15_fu_789_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        op2_17_reg_1708 <= op2_17_fu_793_p1;
        op2_18_reg_1713 <= op2_18_fu_797_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        op2_19_reg_1723 <= op2_19_fu_822_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        op2_20_reg_1867 <= op2_20_fu_1170_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        op2_21_reg_1872 <= op2_21_fu_1174_p1;
        op2_23_reg_1877 <= op2_23_fu_1178_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        op2_22_reg_1892 <= op2_22_fu_1203_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        op2_24_reg_1897 <= op2_24_fu_1207_p1;
        op2_25_reg_1902 <= op2_25_fu_1211_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        op2_26_reg_1912 <= op2_26_fu_1236_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        op2_reg_1678 <= op2_fu_756_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_471 <= grp_fu_462_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_477 <= grp_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_485 <= grp_fu_462_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_491 <= grp_fu_465_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_497 <= grp_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_503 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_509 <= grp_fu_468_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_514 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_519 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        select_ln330_4_reg_1787 <= select_ln330_4_fu_1025_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        select_ln330_6_reg_1976 <= select_ln330_6_fu_1439_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        select_ln345_2_reg_1982 <= select_ln345_2_fu_1452_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        select_ln345_reg_1793 <= select_ln345_fu_1038_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t_5_reg_1609 <= t_5_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        t_6_reg_1798 <= t_6_fu_1044_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_1476_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        tmp_19_reg_2000[9 : 5] <= tmp_19_fu_1486_p3[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_s_reg_1575[9 : 5] <= tmp_s_fu_568_p3[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xout_load_reg_1603 <= xout_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        A_V_address0 = A_V_addr_18_reg_1834;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        A_V_address0 = A_V_addr_15_reg_1665;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        A_V_address0 = A_V_addr_14_reg_1660;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        A_V_address0 = zext_ln534_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_V_address0 = A_V_addr_reg_1585;
    end else begin
        A_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        A_V_address1 = zext_ln215_2_fu_1517_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        A_V_address1 = zext_ln534_18_fu_817_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        A_V_address1 = zext_ln534_17_fu_784_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        A_V_address1 = A_V_addr_13_reg_1655;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        A_V_address1 = A_V_addr_12_reg_1650;
    end else begin
        A_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        A_V_ce0 = 1'b1;
    end else begin
        A_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25))) begin
        A_V_ce1 = 1'b1;
    end else begin
        A_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        A_V_d0 = select_ln345_2_reg_1982;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_V_d0 = xout_load_reg_1603;
    end else begin
        A_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state6))) begin
        A_V_we0 = 1'b1;
    end else begin
        A_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        B_V_address0 = B_V_addr_15_reg_1859;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        B_V_address0 = B_V_addr_14_reg_1854;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        B_V_address0 = zext_ln50_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        B_V_address0 = B_V_addr_18_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_V_address0 = B_V_addr_reg_1590;
    end else begin
        B_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        B_V_address1 = zext_ln215_2_fu_1517_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        B_V_address1 = zext_ln534_24_fu_1231_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        B_V_address1 = zext_ln534_23_fu_1198_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        B_V_address1 = B_V_addr_13_reg_1849;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        B_V_address1 = B_V_addr_12_reg_1844;
    end else begin
        B_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        B_V_ce0 = 1'b1;
    end else begin
        B_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state97))) begin
        B_V_ce1 = 1'b1;
    end else begin
        B_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        B_V_d0 = select_ln345_reg_1793;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_V_d0 = xout_load_reg_1603;
    end else begin
        B_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state6))) begin
        B_V_we0 = 1'b1;
    end else begin
        B_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((icmp_ln55_fu_1476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state151)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln55_fu_1476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state151))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_439_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_439_opcode = 2'd0;
    end else begin
        grp_fu_439_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_439_p0 = reg_477;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_439_p0 = reg_514;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_439_p0 = reg_497;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_439_p0 = reg_485;
    end else begin
        grp_fu_439_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_439_p1 = reg_471;
    end else if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_439_p1 = reg_519;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_439_p1 = reg_485;
    end else if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_439_p1 = reg_477;
    end else begin
        grp_fu_439_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_443_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_443_opcode = 2'd0;
    end else begin
        grp_fu_443_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_443_p0 = reg_503;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_443_p0 = reg_491;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_443_p1 = reg_491;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_443_p1 = reg_477;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_451_p0 = reg_497;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_451_p0 = reg_471;
    end else begin
        grp_fu_451_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_451_p1 = 64'd4593671619917905920;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_451_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_451_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_fu_462_p0 = op2_26_reg_1912;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_462_p0 = op2_22_reg_1892;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_462_p0 = op2_21_reg_1872;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_462_p0 = op2_20_reg_1867;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_462_p0 = op2_19_reg_1723;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_462_p0 = op2_15_reg_1703;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_462_p0 = op2_14_reg_1683;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_462_p0 = op2_reg_1678;
    end else begin
        grp_fu_462_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_465_p0 = op2_24_reg_1897;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_465_p0 = op2_23_reg_1877;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_465_p0 = op2_17_reg_1708;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_465_p0 = op2_16_reg_1688;
    end else begin
        grp_fu_465_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_468_p0 = op2_25_reg_1902;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_468_p0 = op2_18_reg_1713;
    end else begin
        grp_fu_468_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        xin_ce0 = 1'b1;
    end else begin
        xin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        xin_we0 = 1'b1;
    end else begin
        xin_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        xout_ce0 = 1'b1;
    end else begin
        xout_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln29_fu_534_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln30_fu_558_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln31_fu_614_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln37_fu_636_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln38_fu_642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln39_fu_660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln40_fu_750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state79 : begin
            if (((icmp_ln46_fu_1050_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state80 : begin
            if (((icmp_ln47_fu_1056_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            if (((icmp_ln48_fu_1074_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            if (((icmp_ln49_fu_1164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state151 : begin
            if (((icmp_ln55_fu_1476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state151))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end
        end
        ap_ST_fsm_state152 : begin
            if (((icmp_ln56_fu_1527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state152))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln215_fu_1504_p2 = (zext_ln55_reg_1992 + zext_ln215_fu_1500_p1);

assign add_ln29_fu_524_p2 = (k_reg_290 + 6'd1);

assign add_ln30_fu_540_p2 = (i_reg_301 + 6'd1);

assign add_ln31_fu_576_p2 = (j_reg_312 + 6'd1);

assign add_ln32_1_fu_586_p2 = (tmp_cast_reg_1567 + zext_ln32_1_fu_582_p1);

assign add_ln32_2_fu_599_p2 = (tmp_27_cast_fu_591_p3 + zext_ln29_reg_1554);

assign add_ln32_fu_620_p2 = (tmp_s_reg_1575 + zext_ln31_fu_610_p1);

assign add_ln41_1_fu_801_p2 = ($signed(k_3_reg_358) + $signed(5'd31));

assign add_ln41_fu_768_p2 = (k_3_reg_358 + 5'd1);

assign add_ln50_1_fu_1215_p2 = ($signed(k_4_reg_405) + $signed(5'd31));

assign add_ln50_fu_1182_p2 = (k_4_reg_405 + 5'd1);

assign add_ln55_fu_1458_p2 = (i_5_reg_417 + 6'd1);

assign add_ln56_fu_1494_p2 = (j_5_reg_428 + 6'd1);

assign add_ln57_fu_1533_p2 = (tmp_19_reg_2000 + zext_ln56_fu_1523_p1);

assign and_ln327_2_fu_1322_p2 = (xor_ln323_2_fu_1316_p2 & icmp_ln327_2_fu_1298_p2);

assign and_ln327_fu_908_p2 = (xor_ln323_fu_902_p2 & icmp_ln327_fu_884_p2);

assign and_ln329_2_fu_1385_p2 = (xor_ln327_2_fu_1380_p2 & icmp_ln329_2_reg_1943);

assign and_ln329_fu_971_p2 = (xor_ln327_fu_966_p2 & icmp_ln329_reg_1754);

assign and_ln330_4_fu_1015_p2 = (xor_ln330_fu_1010_p2 & and_ln329_reg_1777);

assign and_ln330_5_fu_1390_p2 = (icmp_ln330_2_reg_1949 & and_ln329_2_fu_1385_p2);

assign and_ln330_6_fu_1429_p2 = (xor_ln330_2_fu_1424_p2 & and_ln329_2_reg_1966);

assign and_ln330_fu_976_p2 = (icmp_ln330_reg_1760 & and_ln329_fu_971_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign empty_2984_fu_654_p2 = ($signed(i_4_reg_334) + $signed(5'd31));

assign empty_2985_fu_672_p2 = ($signed(j_4_reg_346) + $signed(5'd31));

assign empty_2986_fu_1068_p2 = ($signed(i_6_reg_381) + $signed(5'd31));

assign empty_2987_fu_1086_p2 = ($signed(j_6_reg_393) + $signed(5'd31));

assign empty_2988_fu_1482_p1 = i_5_reg_417[4:0];

assign empty_fu_564_p1 = i_reg_301[4:0];

assign exp_2_fu_1256_p4 = {{reg_2_fu_1240_p1[62:52]}};

assign exp_fu_842_p4 = {{reg_fu_826_p1[62:52]}};

assign grp_fu_1032_p1 = ((or_ln330_fu_1020_p2[0:0] == 1'b1) ? 512'd0 : select_ln337_reg_1782);

assign grp_fu_1446_p1 = ((or_ln330_2_fu_1434_p2[0:0] == 1'b1) ? 512'd0 : select_ln337_2_reg_1971);

assign icmp_ln29_fu_534_p2 = ((k_reg_290 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_558_p2 = ((i_reg_301 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_614_p2 = ((j_reg_312 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln323_2_fu_1282_p2 = ((trunc_ln306_2_fu_1244_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_868_p2 = ((trunc_ln306_fu_830_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_2_fu_1298_p2 = ((exp_2_fu_1256_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_884_p2 = ((exp_fu_842_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln329_2_fu_1304_p2 = (($signed(sh_amt_5_fu_1288_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_890_p2 = (($signed(sh_amt_fu_874_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln330_2_fu_1310_p2 = (($signed(sh_amt_5_fu_1288_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_896_p2 = (($signed(sh_amt_fu_874_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_636_p2 = ((t_reg_323 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_642_p2 = ((i_4_reg_334 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_660_p2 = ((j_4_reg_346 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_750_p2 = ((k_3_reg_358 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1050_p2 = ((t_4_reg_370 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_1056_p2 = ((i_6_reg_381 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1074_p2 = ((j_6_reg_393 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1164_p2 = ((k_4_reg_405 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1476_p2 = ((i_5_reg_417 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_1527_p2 = ((j_5_reg_428 == 6'd32) ? 1'b1 : 1'b0);

assign indvars_iv_next56_fu_1080_p2 = (j_6_reg_393 + 5'd1);

assign indvars_iv_next60_fu_1062_p2 = (i_6_reg_381 + 5'd1);

assign indvars_iv_next69_fu_666_p2 = (j_4_reg_346 + 5'd1);

assign indvars_iv_next73_fu_648_p2 = (i_4_reg_334 + 5'd1);

assign lshr_ln331_2_fu_1365_p2 = p_Result_6_reg_1922 >> trunc_ln331_2cast_fu_1361_p1;

assign lshr_ln331_fu_951_p2 = p_Result_4_reg_1733 >> trunc_ln331cast_fu_947_p1;

assign op2_14_fu_760_p1 = A_V_q1[63:0];

assign op2_15_fu_789_p1 = A_V_q1[63:0];

assign op2_16_fu_764_p1 = A_V_q0[63:0];

assign op2_17_fu_793_p1 = A_V_q0[63:0];

assign op2_18_fu_797_p1 = A_V_q1[63:0];

assign op2_19_fu_822_p1 = A_V_q1[63:0];

assign op2_20_fu_1170_p1 = B_V_q0[63:0];

assign op2_21_fu_1174_p1 = B_V_q1[63:0];

assign op2_22_fu_1203_p1 = B_V_q1[63:0];

assign op2_23_fu_1178_p1 = B_V_q0[63:0];

assign op2_24_fu_1207_p1 = B_V_q0[63:0];

assign op2_25_fu_1211_p1 = B_V_q1[63:0];

assign op2_26_fu_1236_p1 = B_V_q1[63:0];

assign op2_fu_756_p1 = A_V_q0[63:0];

assign or_ln327_2_fu_1336_p2 = (icmp_ln327_2_fu_1298_p2 | icmp_ln323_2_fu_1282_p2);

assign or_ln327_fu_922_p2 = (icmp_ln327_fu_884_p2 | icmp_ln323_fu_868_p2);

assign or_ln329_2_fu_1406_p2 = (or_ln327_2_reg_1960 | icmp_ln329_2_reg_1943);

assign or_ln329_fu_992_p2 = (or_ln327_reg_1771 | icmp_ln329_reg_1754);

assign or_ln330_2_fu_1434_p2 = (icmp_ln323_2_reg_1928 | and_ln330_6_fu_1429_p2);

assign or_ln330_fu_1020_p2 = (icmp_ln323_reg_1739 | and_ln330_4_fu_1015_p2);

assign or_ln337_2_fu_1410_p2 = (tmp_36_fu_1350_p3 | or_ln329_2_fu_1406_p2);

assign or_ln337_fu_996_p2 = (tmp_28_fu_936_p3 | or_ln329_fu_992_p2);

assign p_Result_4_fu_860_p3 = {{1'd1}, {trunc_ln315_fu_856_p1}};

assign p_Result_6_fu_1274_p3 = {{1'd1}, {trunc_ln315_2_fu_1270_p1}};

assign reg_2_fu_1240_p1 = reg_497;

assign reg_fu_826_p1 = reg_497;

assign select_ln327_2_fu_1328_p3 = ((and_ln327_2_fu_1322_p2[0:0] == 1'b1) ? p_Result_6_fu_1274_p3 : 53'd0);

assign select_ln327_fu_914_p3 = ((and_ln327_fu_908_p2[0:0] == 1'b1) ? p_Result_4_fu_860_p3 : 53'd0);

assign select_ln330_4_fu_1025_p3 = ((or_ln330_fu_1020_p2[0:0] == 1'b1) ? 512'd0 : select_ln337_reg_1782);

assign select_ln330_5_fu_1395_p3 = ((and_ln330_5_fu_1390_p2[0:0] == 1'b1) ? lshr_ln331_2_fu_1365_p2 : select_ln327_2_reg_1955);

assign select_ln330_6_fu_1439_p3 = ((or_ln330_2_fu_1434_p2[0:0] == 1'b1) ? 512'd0 : select_ln337_2_reg_1971);

assign select_ln330_fu_981_p3 = ((and_ln330_fu_976_p2[0:0] == 1'b1) ? lshr_ln331_fu_951_p2 : select_ln327_reg_1766);

assign select_ln337_2_fu_1416_p3 = ((or_ln337_2_fu_1410_p2[0:0] == 1'b1) ? zext_ln329_2_fu_1402_p1 : shl_ln339_2_fu_1374_p2);

assign select_ln337_fu_1002_p3 = ((or_ln337_fu_996_p2[0:0] == 1'b1) ? zext_ln329_fu_988_p1 : shl_ln339_fu_960_p2);

assign select_ln345_2_fu_1452_p3 = ((p_Result_5_reg_1917[0:0] == 1'b1) ? grp_fu_1446_p2 : select_ln330_6_reg_1976);

assign select_ln345_fu_1038_p3 = ((p_Result_s_reg_1728[0:0] == 1'b1) ? grp_fu_1032_p2 : select_ln330_4_reg_1787);

assign sh_amt_4_fu_931_p2 = (10'd0 - trunc_ln326_reg_1749);

assign sh_amt_5_fu_1288_p2 = (12'd1075 - zext_ln311_2_fu_1266_p1);

assign sh_amt_6_fu_1345_p2 = (10'd0 - trunc_ln326_2_reg_1938);

assign sh_amt_fu_874_p2 = (12'd1075 - zext_ln311_fu_852_p1);

assign shl_ln339_2_fu_1374_p2 = zext_ln328_2_fu_1342_p1 << zext_ln339_2_fu_1370_p1;

assign shl_ln339_fu_960_p2 = zext_ln328_fu_928_p1 << zext_ln339_fu_956_p1;

assign t_5_fu_630_p2 = (t_reg_323 + 4'd1);

assign t_6_fu_1044_p2 = (t_4_reg_370 + 4'd1);

assign tmp_18_fu_1464_p3 = {{i_5_reg_417}, {5'd0}};

assign tmp_19_fu_1486_p3 = {{empty_2988_fu_1482_p1}, {5'd0}};

assign tmp_20_fu_678_p4 = {{{i_4_reg_334}, {j_4_reg_346}}, {k_3_reg_358}};

assign tmp_21_fu_694_p4 = {{{indvars_iv_next73_reg_1620}, {j_4_reg_346}}, {k_3_reg_358}};

assign tmp_22_fu_708_p4 = {{{empty_2984_reg_1626}, {j_4_reg_346}}, {k_3_reg_358}};

assign tmp_23_fu_722_p4 = {{{i_4_reg_334}, {indvars_iv_next69_reg_1634}}, {k_3_reg_358}};

assign tmp_24_fu_736_p4 = {{{i_4_reg_334}, {empty_2985_reg_1640}}, {k_3_reg_358}};

assign tmp_25_fu_774_p4 = {{{i_4_reg_334}, {j_4_reg_346}}, {add_ln41_fu_768_p2}};

assign tmp_26_fu_807_p4 = {{{i_4_reg_334}, {j_4_reg_346}}, {add_ln41_1_fu_801_p2}};

assign tmp_27_cast_fu_591_p3 = {{add_ln32_1_fu_586_p2}, {5'd0}};

assign tmp_27_fu_1092_p4 = {{{i_6_reg_381}, {j_6_reg_393}}, {k_4_reg_405}};

assign tmp_28_fu_936_p3 = sh_amt_4_fu_931_p2[32'd9];

assign tmp_29_fu_1108_p4 = {{{indvars_iv_next60_reg_1809}, {j_6_reg_393}}, {k_4_reg_405}};

assign tmp_30_fu_1122_p4 = {{{empty_2986_reg_1815}, {j_6_reg_393}}, {k_4_reg_405}};

assign tmp_31_fu_1136_p4 = {{{i_6_reg_381}, {indvars_iv_next56_reg_1823}}, {k_4_reg_405}};

assign tmp_32_fu_1150_p4 = {{{i_6_reg_381}, {empty_2987_reg_1829}}, {k_4_reg_405}};

assign tmp_33_fu_1188_p4 = {{{i_6_reg_381}, {j_6_reg_393}}, {add_ln50_fu_1182_p2}};

assign tmp_34_fu_1221_p4 = {{{i_6_reg_381}, {j_6_reg_393}}, {add_ln50_1_fu_1215_p2}};

assign tmp_36_fu_1350_p3 = sh_amt_6_fu_1345_p2[32'd9];

assign tmp_cast_fu_550_p3 = {{trunc_ln32_fu_546_p1}, {5'd0}};

assign tmp_fu_1509_p3 = {{add_ln215_fu_1504_p2}, {5'd0}};

assign tmp_s_fu_568_p3 = {{empty_fu_564_p1}, {5'd0}};

assign trunc_ln306_2_fu_1244_p1 = reg_2_fu_1240_p1[62:0];

assign trunc_ln306_fu_830_p1 = reg_fu_826_p1[62:0];

assign trunc_ln315_2_fu_1270_p1 = reg_2_fu_1240_p1[51:0];

assign trunc_ln315_fu_856_p1 = reg_fu_826_p1[51:0];

assign trunc_ln326_2_fu_1294_p1 = sh_amt_5_fu_1288_p2[9:0];

assign trunc_ln326_fu_880_p1 = sh_amt_fu_874_p2[9:0];

assign trunc_ln32_fu_546_p1 = i_reg_301[4:0];

assign trunc_ln331_2_fu_1358_p1 = sh_amt_5_reg_1933[5:0];

assign trunc_ln331_2cast_fu_1361_p1 = trunc_ln331_2_fu_1358_p1;

assign trunc_ln331_fu_944_p1 = sh_amt_reg_1744[5:0];

assign trunc_ln331cast_fu_947_p1 = trunc_ln331_fu_944_p1;

assign xin_address0 = zext_ln57_fu_1545_p1;

assign xin_d0 = grp_fu_1538_p2;

assign xor_ln323_2_fu_1316_p2 = (icmp_ln323_2_fu_1282_p2 ^ 1'd1);

assign xor_ln323_fu_902_p2 = (icmp_ln323_fu_868_p2 ^ 1'd1);

assign xor_ln327_2_fu_1380_p2 = (or_ln327_2_reg_1960 ^ 1'd1);

assign xor_ln327_fu_966_p2 = (or_ln327_reg_1771 ^ 1'd1);

assign xor_ln330_2_fu_1424_p2 = (icmp_ln330_2_reg_1949 ^ 1'd1);

assign xor_ln330_fu_1010_p2 = (icmp_ln330_reg_1760 ^ 1'd1);

assign xout_address0 = zext_ln32_fu_625_p1;

assign zext_ln215_2_fu_1517_p1 = tmp_fu_1509_p3;

assign zext_ln215_fu_1500_p1 = j_5_reg_428;

assign zext_ln29_fu_530_p1 = k_reg_290;

assign zext_ln311_2_fu_1266_p1 = exp_2_fu_1256_p4;

assign zext_ln311_fu_852_p1 = exp_fu_842_p4;

assign zext_ln31_fu_610_p1 = j_reg_312;

assign zext_ln328_2_fu_1342_p1 = p_Result_6_reg_1922;

assign zext_ln328_fu_928_p1 = p_Result_4_reg_1733;

assign zext_ln329_2_fu_1402_p1 = select_ln330_5_fu_1395_p3;

assign zext_ln329_fu_988_p1 = select_ln330_fu_981_p3;

assign zext_ln32_1_fu_582_p1 = j_reg_312;

assign zext_ln32_2_fu_604_p1 = add_ln32_2_fu_599_p2;

assign zext_ln32_fu_625_p1 = add_ln32_fu_620_p2;

assign zext_ln339_2_fu_1370_p1 = sh_amt_6_fu_1345_p2;

assign zext_ln339_fu_956_p1 = sh_amt_4_fu_931_p2;

assign zext_ln50_fu_1102_p1 = tmp_27_fu_1092_p4;

assign zext_ln534_13_fu_703_p1 = tmp_21_fu_694_p4;

assign zext_ln534_14_fu_717_p1 = tmp_22_fu_708_p4;

assign zext_ln534_15_fu_731_p1 = tmp_23_fu_722_p4;

assign zext_ln534_16_fu_745_p1 = tmp_24_fu_736_p4;

assign zext_ln534_17_fu_784_p1 = tmp_25_fu_774_p4;

assign zext_ln534_18_fu_817_p1 = tmp_26_fu_807_p4;

assign zext_ln534_19_fu_1117_p1 = tmp_29_fu_1108_p4;

assign zext_ln534_20_fu_1131_p1 = tmp_30_fu_1122_p4;

assign zext_ln534_21_fu_1145_p1 = tmp_31_fu_1136_p4;

assign zext_ln534_22_fu_1159_p1 = tmp_32_fu_1150_p4;

assign zext_ln534_23_fu_1198_p1 = tmp_33_fu_1188_p4;

assign zext_ln534_24_fu_1231_p1 = tmp_34_fu_1221_p4;

assign zext_ln534_fu_688_p1 = tmp_20_fu_678_p4;

assign zext_ln55_fu_1472_p1 = tmp_18_fu_1464_p3;

assign zext_ln56_fu_1523_p1 = j_5_reg_428;

assign zext_ln57_fu_1545_p1 = add_ln57_reg_2023;

always @ (posedge ap_clk) begin
    zext_ln29_reg_1554[14:6] <= 9'b000000000;
    tmp_cast_reg_1567[4:0] <= 5'b00000;
    tmp_s_reg_1575[4:0] <= 5'b00000;
    p_Result_4_reg_1733[52] <= 1'b1;
    p_Result_6_reg_1922[52] <= 1'b1;
    zext_ln55_reg_1992[4:0] <= 5'b00000;
    zext_ln55_reg_1992[11] <= 1'b0;
    tmp_19_reg_2000[4:0] <= 5'b00000;
end

endmodule //top_nondf_kernel_heat_x0
