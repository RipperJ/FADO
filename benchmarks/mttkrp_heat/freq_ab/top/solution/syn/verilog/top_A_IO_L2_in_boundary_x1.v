// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_A_IO_L2_in_boundary_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_3_x18_dout,
        fifo_A_A_IO_L2_in_3_x18_empty_n,
        fifo_A_A_IO_L2_in_3_x18_read,
        fifo_A_PE_3_0_x152_din,
        fifo_A_PE_3_0_x152_full_n,
        fifo_A_PE_3_0_x152_write
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_A_A_IO_L2_in_3_x18_dout;
input   fifo_A_A_IO_L2_in_3_x18_empty_n;
output   fifo_A_A_IO_L2_in_3_x18_read;
output  [255:0] fifo_A_PE_3_0_x152_din;
input   fifo_A_PE_3_0_x152_full_n;
output   fifo_A_PE_3_0_x152_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_A_IO_L2_in_3_x18_read;
reg[255:0] fifo_A_PE_3_0_x152_din;
reg fifo_A_PE_3_0_x152_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_A_IO_L2_in_3_x18_blk_n;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state19;
reg    fifo_A_PE_3_0_x152_blk_n;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state32;
wire   [511:0] local_A_ping_V_q0;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state30;
wire   [2:0] add_ln691_fu_638_p2;
reg   [2:0] add_ln691_reg_1234;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln691_1956_fu_650_p2;
reg   [2:0] add_ln691_1956_reg_1242;
wire    ap_CS_fsm_state3;
wire   [7:0] c2_V_206_fu_662_p2;
reg   [7:0] c2_V_206_reg_1250;
wire    ap_CS_fsm_state4;
wire   [4:0] add_ln691_1960_fu_674_p2;
reg   [4:0] add_ln691_1960_reg_1258;
wire    ap_CS_fsm_state5;
wire   [4:0] shl_ln14700_fu_680_p2;
reg   [4:0] shl_ln14700_reg_1263;
wire   [1:0] add_ln691_1966_fu_692_p2;
reg   [1:0] add_ln691_1966_reg_1271;
wire    ap_CS_fsm_state6;
wire   [8:0] tmp_559_cast_fu_707_p3;
reg   [8:0] tmp_559_cast_reg_1276;
wire   [4:0] add_ln691_1967_fu_721_p2;
reg   [4:0] add_ln691_1967_reg_1284;
wire    ap_CS_fsm_state7;
reg   [8:0] local_A_pong_V_addr_reg_1289;
wire   [1:0] add_ln691_1969_fu_747_p2;
reg   [1:0] add_ln691_1969_reg_1297;
wire    ap_CS_fsm_state9;
reg   [0:0] arb_33_reg_351;
reg   [0:0] intra_trans_en_34_reg_338;
wire   [6:0] zext_ln890_130_fu_753_p1;
reg   [6:0] zext_ln890_130_reg_1302;
wire   [1:0] add_ln691_1968_fu_763_p2;
reg   [1:0] add_ln691_1968_reg_1310;
wire   [6:0] zext_ln890_129_fu_769_p1;
reg   [6:0] zext_ln890_129_reg_1315;
wire   [0:0] arb_fu_779_p2;
wire   [0:0] icmp_ln890_1871_fu_773_p2;
wire   [0:0] icmp_ln890_1872_fu_757_p2;
wire   [5:0] add_ln691_1971_fu_785_p2;
reg   [5:0] add_ln691_1971_reg_1328;
wire    ap_CS_fsm_state10;
reg   [3:0] div_i_i25_reg_1336;
wire   [0:0] icmp_ln890_1876_fu_791_p2;
reg   [0:0] data_split_V_50_addr_reg_1341;
wire   [3:0] add_ln691_1973_fu_816_p2;
reg   [3:0] add_ln691_1973_reg_1346;
wire    ap_CS_fsm_state11;
wire   [4:0] add_ln691_1976_fu_828_p2;
reg   [4:0] add_ln691_1976_reg_1354;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln691_1977_fu_869_p2;
wire    ap_CS_fsm_state14;
wire   [511:0] zext_ln1497_50_fu_901_p1;
wire   [0:0] icmp_ln878_54_fu_880_p2;
wire   [4:0] add_ln691_1959_fu_905_p2;
reg   [4:0] add_ln691_1959_reg_1380;
wire    ap_CS_fsm_state16;
wire   [4:0] shl_ln14750_fu_911_p2;
reg   [4:0] shl_ln14750_reg_1385;
wire   [1:0] add_ln691_1964_fu_923_p2;
reg   [1:0] add_ln691_1964_reg_1393;
wire    ap_CS_fsm_state17;
wire   [8:0] tmp_557_cast_fu_938_p3;
reg   [8:0] tmp_557_cast_reg_1398;
wire   [4:0] add_ln691_1965_fu_952_p2;
reg   [4:0] add_ln691_1965_reg_1406;
wire    ap_CS_fsm_state18;
reg   [8:0] local_A_ping_V_addr_1_reg_1411;
wire   [5:0] add_ln691_1970_fu_978_p2;
reg   [5:0] add_ln691_1970_reg_1419;
wire    ap_CS_fsm_state20;
reg   [3:0] div_i_i24_reg_1427;
wire   [0:0] icmp_ln890_1875_fu_984_p2;
reg   [0:0] data_split_V_49_addr_reg_1432;
wire   [3:0] add_ln691_1972_fu_1009_p2;
reg   [3:0] add_ln691_1972_reg_1437;
wire    ap_CS_fsm_state21;
wire   [4:0] add_ln691_1974_fu_1021_p2;
reg   [4:0] add_ln691_1974_reg_1445;
wire    ap_CS_fsm_state22;
wire   [511:0] local_A_pong_V_q0;
wire    ap_CS_fsm_state23;
wire   [1:0] add_ln691_1975_fu_1062_p2;
wire    ap_CS_fsm_state24;
wire   [511:0] zext_ln1497_49_fu_1094_p1;
wire   [0:0] icmp_ln878_53_fu_1073_p2;
wire   [1:0] add_ln691_1955_fu_1098_p2;
reg   [1:0] add_ln691_1955_reg_1476;
wire    ap_CS_fsm_state26;
wire   [6:0] zext_ln890_fu_1104_p1;
reg   [6:0] zext_ln890_reg_1481;
wire   [5:0] add_ln691_1957_fu_1114_p2;
reg   [5:0] add_ln691_1957_reg_1489;
wire    ap_CS_fsm_state27;
reg   [3:0] div_i_i_reg_1497;
wire   [0:0] icmp_ln890_1864_fu_1120_p2;
reg   [0:0] data_split_V_addr_reg_1502;
wire   [3:0] add_ln691_1958_fu_1145_p2;
reg   [3:0] add_ln691_1958_reg_1507;
wire    ap_CS_fsm_state28;
wire   [4:0] add_ln691_1961_fu_1157_p2;
reg   [4:0] add_ln691_1961_reg_1515;
wire    ap_CS_fsm_state29;
wire   [1:0] add_ln691_1962_fu_1198_p2;
wire    ap_CS_fsm_state31;
wire   [511:0] zext_ln1497_fu_1230_p1;
wire   [0:0] icmp_ln878_fu_1209_p2;
reg   [8:0] local_A_ping_V_address0;
reg    local_A_ping_V_ce0;
reg    local_A_ping_V_we0;
reg   [8:0] local_A_pong_V_address0;
reg    local_A_pong_V_ce0;
reg    local_A_pong_V_we0;
reg   [0:0] data_split_V_50_address0;
reg    data_split_V_50_ce0;
reg    data_split_V_50_we0;
wire   [255:0] data_split_V_50_d0;
wire   [255:0] data_split_V_50_q0;
reg   [0:0] data_split_V_49_address0;
reg    data_split_V_49_ce0;
reg    data_split_V_49_we0;
wire   [255:0] data_split_V_49_d0;
wire   [255:0] data_split_V_49_q0;
reg   [0:0] data_split_V_address0;
reg    data_split_V_ce0;
reg    data_split_V_we0;
wire   [255:0] data_split_V_d0;
wire   [255:0] data_split_V_q0;
reg   [2:0] c0_V_reg_289;
wire   [0:0] icmp_ln890_1863_fu_656_p2;
reg    ap_block_state1;
reg   [0:0] intra_trans_en_reg_300;
reg   [2:0] c1_V_reg_314;
wire   [0:0] icmp_ln14680_fu_668_p2;
wire   [0:0] icmp_ln890_fu_644_p2;
reg   [0:0] intra_trans_en_33_reg_325;
wire   [0:0] ap_phi_mux_arb_33_phi_fu_355_p4;
reg   [7:0] c2_V_reg_363;
reg   [4:0] c4_V_103_reg_374;
wire   [0:0] icmp_ln890_1870_fu_715_p2;
reg   [1:0] c5_V_188_reg_385;
wire   [0:0] icmp_ln890_1874_fu_741_p2;
wire   [0:0] icmp_ln890_1867_fu_686_p2;
reg   [4:0] c6_V_184_reg_396;
reg   [1:0] c5_V_190_reg_407;
reg   [1:0] c5_V_189_reg_418;
wire   [0:0] icmp_ln890_1866_fu_917_p2;
reg   [5:0] c6_V_186_reg_429;
wire   [0:0] icmp_ln890_1878_fu_822_p2;
reg   [3:0] c7_V_114_reg_440;
wire   [0:0] icmp_ln890_1880_fu_863_p2;
reg   [4:0] c8_V_50_reg_451;
reg   [1:0] n_V_50_reg_462;
reg   [511:0] p_Val2_s_reg_473;
reg   [4:0] c4_V_reg_482;
wire   [0:0] icmp_ln890_1869_fu_946_p2;
reg   [1:0] c5_V_187_reg_493;
wire   [0:0] icmp_ln890_1873_fu_972_p2;
reg   [4:0] c6_V_183_reg_504;
reg   [5:0] c6_V_185_reg_515;
wire   [0:0] icmp_ln890_1877_fu_1015_p2;
reg   [3:0] c7_V_113_reg_526;
wire   [0:0] icmp_ln890_1879_fu_1056_p2;
reg   [4:0] c8_V_49_reg_537;
reg   [1:0] n_V_49_reg_548;
reg   [511:0] p_Val2_101_reg_559;
reg   [1:0] c5_V_reg_568;
reg   [5:0] c6_V_reg_579;
wire   [0:0] icmp_ln890_1865_fu_1151_p2;
wire   [0:0] icmp_ln890_1862_fu_1108_p2;
reg   [3:0] c7_V_reg_590;
wire   [0:0] icmp_ln890_1868_fu_1192_p2;
reg   [4:0] c8_V_reg_601;
reg   [1:0] n_V_reg_612;
reg   [511:0] p_Val2_102_reg_623;
wire   [63:0] zext_ln14700_2_fu_736_p1;
wire   [63:0] idxprom_fu_811_p1;
wire   [63:0] zext_ln14721_1_fu_858_p1;
wire   [63:0] zext_ln878_50_fu_875_p1;
wire   [63:0] zext_ln14750_2_fu_967_p1;
wire   [63:0] idxprom142_fu_1004_p1;
wire   [63:0] zext_ln14771_1_fu_1051_p1;
wire   [63:0] zext_ln878_49_fu_1068_p1;
wire   [63:0] idxprom195_fu_1140_p1;
wire   [63:0] zext_ln14808_1_fu_1187_p1;
wire   [63:0] zext_ln878_fu_1204_p1;
wire   [4:0] zext_ln14700_fu_698_p1;
wire   [4:0] add_ln14700_fu_702_p2;
wire   [8:0] zext_ln14700_1_fu_727_p1;
wire   [8:0] add_ln14700_1_fu_731_p2;
wire   [0:0] empty_fu_807_p1;
wire   [5:0] tmp_51_fu_834_p3;
wire   [6:0] zext_ln14721_fu_842_p1;
wire   [6:0] add_ln14721_fu_846_p2;
wire   [10:0] tmp_645_fu_851_p3;
wire   [255:0] r_fu_891_p4;
wire   [4:0] zext_ln14750_fu_929_p1;
wire   [4:0] add_ln14750_fu_933_p2;
wire   [8:0] zext_ln14750_1_fu_958_p1;
wire   [8:0] add_ln14750_1_fu_962_p2;
wire   [0:0] empty_2920_fu_1000_p1;
wire   [5:0] tmp_fu_1027_p3;
wire   [6:0] zext_ln14771_fu_1035_p1;
wire   [6:0] add_ln14771_fu_1039_p2;
wire   [10:0] tmp_644_fu_1044_p3;
wire   [255:0] r_90_fu_1084_p4;
wire   [0:0] empty_2921_fu_1136_p1;
wire   [5:0] tmp_s_fu_1163_p3;
wire   [6:0] zext_ln14808_fu_1171_p1;
wire   [6:0] add_ln14808_fu_1175_p2;
wire   [10:0] tmp_641_fu_1180_p3;
wire   [255:0] r_91_fu_1220_p4;
reg   [31:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 32'd1;
end

top_A_IO_L2_in_boundary_x0_local_A_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_A_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_ping_V_address0),
    .ce0(local_A_ping_V_ce0),
    .we0(local_A_ping_V_we0),
    .d0(fifo_A_A_IO_L2_in_3_x18_dout),
    .q0(local_A_ping_V_q0)
);

top_A_IO_L2_in_boundary_x0_local_A_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_A_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_pong_V_address0),
    .ce0(local_A_pong_V_ce0),
    .we0(local_A_pong_V_we0),
    .d0(fifo_A_A_IO_L2_in_3_x18_dout),
    .q0(local_A_pong_V_q0)
);

top_A_IO_L2_in_0_x0_data_split_V #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_50_address0),
    .ce0(data_split_V_50_ce0),
    .we0(data_split_V_50_we0),
    .d0(data_split_V_50_d0),
    .q0(data_split_V_50_q0)
);

top_A_IO_L2_in_0_x0_data_split_V #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_49_address0),
    .ce0(data_split_V_49_ce0),
    .we0(data_split_V_49_we0),
    .d0(data_split_V_49_d0),
    .q0(data_split_V_49_q0)
);

top_A_IO_L2_in_0_x0_data_split_V #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_address0),
    .ce0(data_split_V_ce0),
    .we0(data_split_V_we0),
    .d0(data_split_V_d0),
    .q0(data_split_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_1862_fu_1108_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((intra_trans_en_34_reg_338 == 1'd0) | ((icmp_ln890_1871_fu_773_p2 == 1'd1) & (arb_33_reg_351 == 1'd1))) | ((icmp_ln890_1872_fu_757_p2 == 1'd1) & (arb_33_reg_351 == 1'd0))))) begin
        arb_33_reg_351 <= arb_fu_779_p2;
    end else if (((icmp_ln890_1863_fu_656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        arb_33_reg_351 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_289 <= 3'd0;
    end else if (((icmp_ln890_1863_fu_656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c0_V_reg_289 <= add_ln691_reg_1234;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_644_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_V_reg_314 <= 3'd0;
    end else if (((icmp_ln14680_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_V_reg_314 <= add_ln691_1956_reg_1242;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((intra_trans_en_34_reg_338 == 1'd0) | ((icmp_ln890_1871_fu_773_p2 == 1'd1) & (arb_33_reg_351 == 1'd1))) | ((icmp_ln890_1872_fu_757_p2 == 1'd1) & (arb_33_reg_351 == 1'd0))))) begin
        c2_V_reg_363 <= c2_V_206_reg_1250;
    end else if (((icmp_ln890_1863_fu_656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c2_V_reg_363 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_arb_33_phi_fu_355_p4 == 1'd0) & (icmp_ln14680_fu_668_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_103_reg_374 <= 5'd0;
    end else if (((icmp_ln890_1870_fu_715_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        c4_V_103_reg_374 <= add_ln691_1960_reg_1258;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_arb_33_phi_fu_355_p4 == 1'd1) & (icmp_ln14680_fu_668_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_reg_482 <= 5'd0;
    end else if (((icmp_ln890_1869_fu_946_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        c4_V_reg_482 <= add_ln691_1959_reg_1380;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1866_fu_917_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        c5_V_187_reg_493 <= 2'd0;
    end else if (((icmp_ln890_1873_fu_972_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        c5_V_187_reg_493 <= add_ln691_1964_reg_1393;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1867_fu_686_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        c5_V_188_reg_385 <= 2'd0;
    end else if (((icmp_ln890_1874_fu_741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        c5_V_188_reg_385 <= add_ln691_1966_reg_1271;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1866_fu_917_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (intra_trans_en_34_reg_338 == 1'd1))) begin
        c5_V_189_reg_418 <= 2'd0;
    end else if (((icmp_ln890_1875_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        c5_V_189_reg_418 <= add_ln691_1968_reg_1310;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1867_fu_686_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (intra_trans_en_34_reg_338 == 1'd1))) begin
        c5_V_190_reg_407 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln890_1876_fu_791_p2 == 1'd1))) begin
        c5_V_190_reg_407 <= add_ln691_1969_reg_1297;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_644_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c5_V_reg_568 <= 2'd0;
    end else if (((icmp_ln890_1864_fu_1120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        c5_V_reg_568 <= add_ln691_1955_reg_1476;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1869_fu_946_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        c6_V_183_reg_504 <= 5'd0;
    end else if (((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        c6_V_183_reg_504 <= add_ln691_1965_reg_1406;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1870_fu_715_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        c6_V_184_reg_396 <= 5'd0;
    end else if (((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        c6_V_184_reg_396 <= add_ln691_1967_reg_1284;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1871_fu_773_p2 == 1'd0) & (intra_trans_en_34_reg_338 == 1'd1) & (arb_33_reg_351 == 1'd1))) begin
        c6_V_185_reg_515 <= 6'd0;
    end else if (((icmp_ln890_1877_fu_1015_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        c6_V_185_reg_515 <= add_ln691_1970_reg_1419;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1872_fu_757_p2 == 1'd0) & (intra_trans_en_34_reg_338 == 1'd1) & (arb_33_reg_351 == 1'd0))) begin
        c6_V_186_reg_429 <= 6'd0;
    end else if (((icmp_ln890_1878_fu_822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        c6_V_186_reg_429 <= add_ln691_1971_reg_1328;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1862_fu_1108_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        c6_V_reg_579 <= 6'd0;
    end else if (((icmp_ln890_1865_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        c6_V_reg_579 <= add_ln691_1957_reg_1489;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1875_fu_984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        c7_V_113_reg_526 <= 4'd0;
    end else if (((icmp_ln890_1879_fu_1056_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        c7_V_113_reg_526 <= add_ln691_1972_reg_1437;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln890_1876_fu_791_p2 == 1'd0))) begin
        c7_V_114_reg_440 <= 4'd0;
    end else if (((icmp_ln890_1880_fu_863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        c7_V_114_reg_440 <= add_ln691_1973_reg_1346;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1864_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        c7_V_reg_590 <= 4'd0;
    end else if (((icmp_ln890_1868_fu_1192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        c7_V_reg_590 <= add_ln691_1958_reg_1507;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1877_fu_1015_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        c8_V_49_reg_537 <= 5'd0;
    end else if (((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        c8_V_49_reg_537 <= add_ln691_1974_reg_1445;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1878_fu_822_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        c8_V_50_reg_451 <= 5'd0;
    end else if (((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        c8_V_50_reg_451 <= add_ln691_1976_reg_1354;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1865_fu_1151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        c8_V_reg_601 <= 5'd0;
    end else if (((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        c8_V_reg_601 <= add_ln691_1961_reg_1515;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_644_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        intra_trans_en_33_reg_325 <= intra_trans_en_reg_300;
    end else if (((icmp_ln14680_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        intra_trans_en_33_reg_325 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (((intra_trans_en_34_reg_338 == 1'd0) | ((icmp_ln890_1871_fu_773_p2 == 1'd1) & (arb_33_reg_351 == 1'd1))) | ((icmp_ln890_1872_fu_757_p2 == 1'd1) & (arb_33_reg_351 == 1'd0))))) begin
        intra_trans_en_34_reg_338 <= 1'd1;
    end else if (((icmp_ln890_1863_fu_656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        intra_trans_en_34_reg_338 <= intra_trans_en_33_reg_325;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_300 <= 1'd0;
    end else if (((icmp_ln890_1863_fu_656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        intra_trans_en_reg_300 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        n_V_49_reg_548 <= 2'd0;
    end else if (((icmp_ln878_53_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        n_V_49_reg_548 <= add_ln691_1975_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        n_V_50_reg_462 <= 2'd0;
    end else if (((icmp_ln878_54_fu_880_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        n_V_50_reg_462 <= add_ln691_1977_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        n_V_reg_612 <= 2'd0;
    end else if (((icmp_ln878_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        n_V_reg_612 <= add_ln691_1962_fu_1198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        p_Val2_101_reg_559 <= local_A_pong_V_q0;
    end else if (((icmp_ln878_53_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        p_Val2_101_reg_559 <= zext_ln1497_49_fu_1094_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        p_Val2_102_reg_623 <= local_A_ping_V_q0;
    end else if (((icmp_ln878_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        p_Val2_102_reg_623 <= zext_ln1497_fu_1230_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_Val2_s_reg_473 <= local_A_ping_V_q0;
    end else if (((icmp_ln878_54_fu_880_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        p_Val2_s_reg_473 <= zext_ln1497_50_fu_901_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln691_1955_reg_1476 <= add_ln691_1955_fu_1098_p2;
        zext_ln890_reg_1481[1 : 0] <= zext_ln890_fu_1104_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_1956_reg_1242 <= add_ln691_1956_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln691_1957_reg_1489 <= add_ln691_1957_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln691_1958_reg_1507 <= add_ln691_1958_fu_1145_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln691_1959_reg_1380 <= add_ln691_1959_fu_905_p2;
        shl_ln14750_reg_1385[4 : 1] <= shl_ln14750_fu_911_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1960_reg_1258 <= add_ln691_1960_fu_674_p2;
        shl_ln14700_reg_1263[4 : 1] <= shl_ln14700_fu_680_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln691_1961_reg_1515 <= add_ln691_1961_fu_1157_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln691_1964_reg_1393 <= add_ln691_1964_fu_923_p2;
        tmp_557_cast_reg_1398[8 : 4] <= tmp_557_cast_fu_938_p3[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln691_1965_reg_1406 <= add_ln691_1965_fu_952_p2;
        local_A_ping_V_addr_1_reg_1411 <= zext_ln14750_2_fu_967_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln691_1966_reg_1271 <= add_ln691_1966_fu_692_p2;
        tmp_559_cast_reg_1276[8 : 4] <= tmp_559_cast_fu_707_p3[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln691_1967_reg_1284 <= add_ln691_1967_fu_721_p2;
        local_A_pong_V_addr_reg_1289 <= zext_ln14700_2_fu_736_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (intra_trans_en_34_reg_338 == 1'd1) & (arb_33_reg_351 == 1'd1))) begin
        add_ln691_1968_reg_1310 <= add_ln691_1968_fu_763_p2;
        zext_ln890_129_reg_1315[1 : 0] <= zext_ln890_129_fu_769_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (intra_trans_en_34_reg_338 == 1'd1) & (arb_33_reg_351 == 1'd0))) begin
        add_ln691_1969_reg_1297 <= add_ln691_1969_fu_747_p2;
        zext_ln890_130_reg_1302[1 : 0] <= zext_ln890_130_fu_753_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln691_1970_reg_1419 <= add_ln691_1970_fu_978_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln691_1971_reg_1328 <= add_ln691_1971_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln691_1972_reg_1437 <= add_ln691_1972_fu_1009_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln691_1973_reg_1346 <= add_ln691_1973_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln691_1974_reg_1445 <= add_ln691_1974_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln691_1976_reg_1354 <= add_ln691_1976_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_1234 <= add_ln691_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c2_V_206_reg_1250 <= c2_V_206_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1875_fu_984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        data_split_V_49_addr_reg_1432 <= idxprom142_fu_1004_p1;
        div_i_i24_reg_1427 <= {{c6_V_185_reg_515[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln890_1876_fu_791_p2 == 1'd0))) begin
        data_split_V_50_addr_reg_1341 <= idxprom_fu_811_p1;
        div_i_i25_reg_1336 <= {{c6_V_186_reg_429[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1864_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        data_split_V_addr_reg_1502 <= idxprom195_fu_1140_p1;
        div_i_i_reg_1497 <= {{c6_V_reg_579[4:1]}};
    end
end

always @ (*) begin
    if (((icmp_ln890_1862_fu_1108_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1862_fu_1108_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        if ((icmp_ln878_53_fu_1073_p2 == 1'd1)) begin
            data_split_V_49_address0 = data_split_V_49_addr_reg_1432;
        end else if ((icmp_ln878_53_fu_1073_p2 == 1'd0)) begin
            data_split_V_49_address0 = zext_ln878_49_fu_1068_p1;
        end else begin
            data_split_V_49_address0 = 'bx;
        end
    end else begin
        data_split_V_49_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_53_fu_1073_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln878_53_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        data_split_V_49_ce0 = 1'b1;
    end else begin
        data_split_V_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_53_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        data_split_V_49_we0 = 1'b1;
    end else begin
        data_split_V_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        if ((icmp_ln878_54_fu_880_p2 == 1'd1)) begin
            data_split_V_50_address0 = data_split_V_50_addr_reg_1341;
        end else if ((icmp_ln878_54_fu_880_p2 == 1'd0)) begin
            data_split_V_50_address0 = zext_ln878_50_fu_875_p1;
        end else begin
            data_split_V_50_address0 = 'bx;
        end
    end else begin
        data_split_V_50_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_54_fu_880_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln878_54_fu_880_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        data_split_V_50_ce0 = 1'b1;
    end else begin
        data_split_V_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_54_fu_880_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        data_split_V_50_we0 = 1'b1;
    end else begin
        data_split_V_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((icmp_ln878_fu_1209_p2 == 1'd1)) begin
            data_split_V_address0 = data_split_V_addr_reg_1502;
        end else if ((icmp_ln878_fu_1209_p2 == 1'd0)) begin
            data_split_V_address0 = zext_ln878_fu_1204_p1;
        end else begin
            data_split_V_address0 = 'bx;
        end
    end else begin
        data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln878_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        data_split_V_ce0 = 1'b1;
    end else begin
        data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        data_split_V_we0 = 1'b1;
    end else begin
        data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state8))) begin
        fifo_A_A_IO_L2_in_3_x18_blk_n = fifo_A_A_IO_L2_in_3_x18_empty_n;
    end else begin
        fifo_A_A_IO_L2_in_3_x18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        fifo_A_A_IO_L2_in_3_x18_read = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_3_x18_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15))) begin
        fifo_A_PE_3_0_x152_blk_n = fifo_A_PE_3_0_x152_full_n;
    end else begin
        fifo_A_PE_3_0_x152_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((fifo_A_PE_3_0_x152_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            fifo_A_PE_3_0_x152_din = data_split_V_q0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            fifo_A_PE_3_0_x152_din = data_split_V_49_q0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            fifo_A_PE_3_0_x152_din = data_split_V_50_q0;
        end else begin
            fifo_A_PE_3_0_x152_din = 'bx;
        end
    end else begin
        fifo_A_PE_3_0_x152_din = 'bx;
    end
end

always @ (*) begin
    if ((((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        fifo_A_PE_3_0_x152_write = 1'b1;
    end else begin
        fifo_A_PE_3_0_x152_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        local_A_ping_V_address0 = zext_ln14808_1_fu_1187_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        local_A_ping_V_address0 = local_A_ping_V_addr_1_reg_1411;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_A_ping_V_address0 = zext_ln14721_1_fu_858_p1;
    end else begin
        local_A_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state12) | ((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)))) begin
        local_A_ping_V_ce0 = 1'b1;
    end else begin
        local_A_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        local_A_ping_V_we0 = 1'b1;
    end else begin
        local_A_ping_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        local_A_pong_V_address0 = zext_ln14771_1_fu_1051_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        local_A_pong_V_address0 = local_A_pong_V_addr_reg_1289;
    end else begin
        local_A_pong_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        local_A_pong_V_ce0 = 1'b1;
    end else begin
        local_A_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        local_A_pong_V_we0 = 1'b1;
    end else begin
        local_A_pong_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_644_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln890_1863_fu_656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln14680_fu_668_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_phi_mux_arb_33_phi_fu_355_p4 == 1'd1) & (icmp_ln14680_fu_668_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1867_fu_686_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln890_1870_fu_715_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln890_1874_fu_741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (((intra_trans_en_34_reg_338 == 1'd0) | ((icmp_ln890_1871_fu_773_p2 == 1'd1) & (arb_33_reg_351 == 1'd1))) | ((icmp_ln890_1872_fu_757_p2 == 1'd1) & (arb_33_reg_351 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1871_fu_773_p2 == 1'd0) & (intra_trans_en_34_reg_338 == 1'd1) & (arb_33_reg_351 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln890_1876_fu_791_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln890_1878_fu_822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln890_1880_fu_863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln878_54_fu_880_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln890_1866_fu_917_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln890_1869_fu_946_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln890_1873_fu_972_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((fifo_A_A_IO_L2_in_3_x18_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln890_1875_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln890_1877_fu_1015_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln890_1879_fu_1056_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln878_53_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln890_1862_fu_1108_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln890_1864_fu_1120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln890_1865_fu_1151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln890_1868_fu_1192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln878_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((fifo_A_PE_3_0_x152_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14700_1_fu_731_p2 = (tmp_559_cast_reg_1276 + zext_ln14700_1_fu_727_p1);

assign add_ln14700_fu_702_p2 = (shl_ln14700_reg_1263 + zext_ln14700_fu_698_p1);

assign add_ln14721_fu_846_p2 = (zext_ln14721_fu_842_p1 + zext_ln890_130_reg_1302);

assign add_ln14750_1_fu_962_p2 = (tmp_557_cast_reg_1398 + zext_ln14750_1_fu_958_p1);

assign add_ln14750_fu_933_p2 = (shl_ln14750_reg_1385 + zext_ln14750_fu_929_p1);

assign add_ln14771_fu_1039_p2 = (zext_ln14771_fu_1035_p1 + zext_ln890_129_reg_1315);

assign add_ln14808_fu_1175_p2 = (zext_ln14808_fu_1171_p1 + zext_ln890_reg_1481);

assign add_ln691_1955_fu_1098_p2 = (c5_V_reg_568 + 2'd1);

assign add_ln691_1956_fu_650_p2 = (c1_V_reg_314 + 3'd1);

assign add_ln691_1957_fu_1114_p2 = (c6_V_reg_579 + 6'd1);

assign add_ln691_1958_fu_1145_p2 = (c7_V_reg_590 + 4'd1);

assign add_ln691_1959_fu_905_p2 = (c4_V_reg_482 + 5'd1);

assign add_ln691_1960_fu_674_p2 = (c4_V_103_reg_374 + 5'd1);

assign add_ln691_1961_fu_1157_p2 = (c8_V_reg_601 + 5'd1);

assign add_ln691_1962_fu_1198_p2 = (n_V_reg_612 + 2'd1);

assign add_ln691_1964_fu_923_p2 = (c5_V_187_reg_493 + 2'd1);

assign add_ln691_1965_fu_952_p2 = (c6_V_183_reg_504 + 5'd1);

assign add_ln691_1966_fu_692_p2 = (c5_V_188_reg_385 + 2'd1);

assign add_ln691_1967_fu_721_p2 = (c6_V_184_reg_396 + 5'd1);

assign add_ln691_1968_fu_763_p2 = (c5_V_189_reg_418 + 2'd1);

assign add_ln691_1969_fu_747_p2 = (c5_V_190_reg_407 + 2'd1);

assign add_ln691_1970_fu_978_p2 = (c6_V_185_reg_515 + 6'd1);

assign add_ln691_1971_fu_785_p2 = (c6_V_186_reg_429 + 6'd1);

assign add_ln691_1972_fu_1009_p2 = (c7_V_113_reg_526 + 4'd1);

assign add_ln691_1973_fu_816_p2 = (c7_V_114_reg_440 + 4'd1);

assign add_ln691_1974_fu_1021_p2 = (c8_V_49_reg_537 + 5'd1);

assign add_ln691_1975_fu_1062_p2 = (n_V_49_reg_548 + 2'd1);

assign add_ln691_1976_fu_828_p2 = (c8_V_50_reg_451 + 5'd1);

assign add_ln691_1977_fu_869_p2 = (n_V_50_reg_462 + 2'd1);

assign add_ln691_fu_638_p2 = (c0_V_reg_289 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_phi_mux_arb_33_phi_fu_355_p4 = arb_33_reg_351;

assign arb_fu_779_p2 = (arb_33_reg_351 ^ 1'd1);

assign c2_V_206_fu_662_p2 = (c2_V_reg_363 + 8'd1);

assign data_split_V_49_d0 = p_Val2_101_reg_559[255:0];

assign data_split_V_50_d0 = p_Val2_s_reg_473[255:0];

assign data_split_V_d0 = p_Val2_102_reg_623[255:0];

assign empty_2920_fu_1000_p1 = c6_V_185_reg_515[0:0];

assign empty_2921_fu_1136_p1 = c6_V_reg_579[0:0];

assign empty_fu_807_p1 = c6_V_186_reg_429[0:0];

assign icmp_ln14680_fu_668_p2 = ((c2_V_reg_363 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln878_53_fu_1073_p2 = ((n_V_49_reg_548 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_54_fu_880_p2 = ((n_V_50_reg_462 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1209_p2 = ((n_V_reg_612 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1862_fu_1108_p2 = ((c5_V_reg_568 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1863_fu_656_p2 = ((c1_V_reg_314 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1864_fu_1120_p2 = ((c6_V_reg_579 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1865_fu_1151_p2 = ((c7_V_reg_590 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1866_fu_917_p2 = ((c4_V_reg_482 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1867_fu_686_p2 = ((c4_V_103_reg_374 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1868_fu_1192_p2 = ((c8_V_reg_601 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1869_fu_946_p2 = ((c5_V_187_reg_493 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1870_fu_715_p2 = ((c5_V_188_reg_385 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1871_fu_773_p2 = ((c5_V_189_reg_418 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1872_fu_757_p2 = ((c5_V_190_reg_407 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1873_fu_972_p2 = ((c6_V_183_reg_504 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1874_fu_741_p2 = ((c6_V_184_reg_396 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1875_fu_984_p2 = ((c6_V_185_reg_515 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1876_fu_791_p2 = ((c6_V_186_reg_429 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1877_fu_1015_p2 = ((c7_V_113_reg_526 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1878_fu_822_p2 = ((c7_V_114_reg_440 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1879_fu_1056_p2 = ((c8_V_49_reg_537 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1880_fu_863_p2 = ((c8_V_50_reg_451 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_644_p2 = ((c0_V_reg_289 == 3'd4) ? 1'b1 : 1'b0);

assign idxprom142_fu_1004_p1 = empty_2920_fu_1000_p1;

assign idxprom195_fu_1140_p1 = empty_2921_fu_1136_p1;

assign idxprom_fu_811_p1 = empty_fu_807_p1;

assign r_90_fu_1084_p4 = {{p_Val2_101_reg_559[511:256]}};

assign r_91_fu_1220_p4 = {{p_Val2_102_reg_623[511:256]}};

assign r_fu_891_p4 = {{p_Val2_s_reg_473[511:256]}};

assign shl_ln14700_fu_680_p2 = c4_V_103_reg_374 << 5'd1;

assign shl_ln14750_fu_911_p2 = c4_V_reg_482 << 5'd1;

assign tmp_51_fu_834_p3 = {{c8_V_50_reg_451}, {1'd0}};

assign tmp_557_cast_fu_938_p3 = {{add_ln14750_fu_933_p2}, {4'd0}};

assign tmp_559_cast_fu_707_p3 = {{add_ln14700_fu_702_p2}, {4'd0}};

assign tmp_641_fu_1180_p3 = {{add_ln14808_fu_1175_p2}, {div_i_i_reg_1497}};

assign tmp_644_fu_1044_p3 = {{add_ln14771_fu_1039_p2}, {div_i_i24_reg_1427}};

assign tmp_645_fu_851_p3 = {{add_ln14721_fu_846_p2}, {div_i_i25_reg_1336}};

assign tmp_fu_1027_p3 = {{c8_V_49_reg_537}, {1'd0}};

assign tmp_s_fu_1163_p3 = {{c8_V_reg_601}, {1'd0}};

assign zext_ln14700_1_fu_727_p1 = c6_V_184_reg_396;

assign zext_ln14700_2_fu_736_p1 = add_ln14700_1_fu_731_p2;

assign zext_ln14700_fu_698_p1 = c5_V_188_reg_385;

assign zext_ln14721_1_fu_858_p1 = tmp_645_fu_851_p3;

assign zext_ln14721_fu_842_p1 = tmp_51_fu_834_p3;

assign zext_ln14750_1_fu_958_p1 = c6_V_183_reg_504;

assign zext_ln14750_2_fu_967_p1 = add_ln14750_1_fu_962_p2;

assign zext_ln14750_fu_929_p1 = c5_V_187_reg_493;

assign zext_ln14771_1_fu_1051_p1 = tmp_644_fu_1044_p3;

assign zext_ln14771_fu_1035_p1 = tmp_fu_1027_p3;

assign zext_ln14808_1_fu_1187_p1 = tmp_641_fu_1180_p3;

assign zext_ln14808_fu_1171_p1 = tmp_s_fu_1163_p3;

assign zext_ln1497_49_fu_1094_p1 = r_90_fu_1084_p4;

assign zext_ln1497_50_fu_901_p1 = r_fu_891_p4;

assign zext_ln1497_fu_1230_p1 = r_91_fu_1220_p4;

assign zext_ln878_49_fu_1068_p1 = n_V_49_reg_548;

assign zext_ln878_50_fu_875_p1 = n_V_50_reg_462;

assign zext_ln878_fu_1204_p1 = n_V_reg_612;

assign zext_ln890_129_fu_769_p1 = c5_V_189_reg_418;

assign zext_ln890_130_fu_753_p1 = c5_V_190_reg_407;

assign zext_ln890_fu_1104_p1 = c5_V_reg_568;

always @ (posedge ap_clk) begin
    shl_ln14700_reg_1263[0] <= 1'b0;
    tmp_559_cast_reg_1276[3:0] <= 4'b0000;
    zext_ln890_130_reg_1302[6:2] <= 5'b00000;
    zext_ln890_129_reg_1315[6:2] <= 5'b00000;
    shl_ln14750_reg_1385[0] <= 1'b0;
    tmp_557_cast_reg_1398[3:0] <= 4'b0000;
    zext_ln890_reg_1481[6:2] <= 5'b00000;
end

endmodule //top_A_IO_L2_in_boundary_x1
