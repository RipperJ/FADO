-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_D_drain_IO_L2_out_boundary_x1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_7_x1212_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_7_x1212_write : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_read : OUT STD_LOGIC );
end;


architecture behav of top_D_drain_IO_L2_out_boundary_x1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_blk_n : STD_LOGIC;
    signal add_ln691_fu_141_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_reg_221 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln691_379_fu_153_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_379_reg_229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln886_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_237 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_444_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_380_fu_185_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_380_reg_241 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln691_381_fu_197_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_381_reg_249 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln691_382_fu_209_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_382_reg_257 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal c0_V_reg_86 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c1_V_reg_97 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_445_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_fu_147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_V_reg_108 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_446_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_V_reg_119 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_447_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_reg_130 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal p_shl_fu_165_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_i_i56_cast_fu_173_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_147_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c0_V_reg_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c0_V_reg_86 <= ap_const_lv3_0;
            elsif (((icmp_ln890_444_fu_159_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c0_V_reg_86 <= add_ln691_reg_221;
            end if; 
        end if;
    end process;

    c1_V_reg_97_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_147_p2 = ap_const_lv1_0))) then 
                c1_V_reg_97 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln886_reg_237 = ap_const_lv1_1) or (icmp_ln890_445_fu_191_p2 = ap_const_lv1_1)))) then 
                c1_V_reg_97 <= add_ln691_379_reg_229;
            end if; 
        end if;
    end process;

    c4_V_reg_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_444_fu_159_p2 = ap_const_lv1_0) and (icmp_ln886_fu_179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c4_V_reg_108 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_446_fu_203_p2 = ap_const_lv1_1))) then 
                c4_V_reg_108 <= add_ln691_380_reg_241;
            end if; 
        end if;
    end process;

    c5_V_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_reg_237 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_445_fu_191_p2 = ap_const_lv1_0))) then 
                c5_V_reg_119 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_447_fu_215_p2 = ap_const_lv1_1))) then 
                c5_V_reg_119 <= add_ln691_381_reg_249;
            end if; 
        end if;
    end process;

    c6_V_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_446_fu_203_p2 = ap_const_lv1_0))) then 
                c6_V_reg_130 <= ap_const_lv2_0;
            elsif ((not(((fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                c6_V_reg_130 <= add_ln691_382_reg_257;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln691_379_reg_229 <= add_ln691_379_fu_153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_reg_237 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                add_ln691_380_reg_241 <= add_ln691_380_fu_185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln691_381_reg_249 <= add_ln691_381_fu_197_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln691_382_reg_257 <= add_ln691_382_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_221 <= add_ln691_fu_141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_444_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln886_reg_237 <= icmp_ln886_fu_179_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n, fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln886_reg_237, icmp_ln890_444_fu_159_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln890_445_fu_191_p2, icmp_ln890_fu_147_p2, icmp_ln890_446_fu_203_p2, icmp_ln890_447_fu_215_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_147_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_444_fu_159_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln886_reg_237 = ap_const_lv1_1) or (icmp_ln890_445_fu_191_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_446_fu_203_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_447_fu_215_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_i_i56_cast_fu_173_p2 <= std_logic_vector(signed(ap_const_lv6_29) - signed(p_shl_fu_165_p3));
    add_ln691_379_fu_153_p2 <= std_logic_vector(unsigned(c1_V_reg_97) + unsigned(ap_const_lv3_1));
    add_ln691_380_fu_185_p2 <= std_logic_vector(unsigned(c4_V_reg_108) + unsigned(ap_const_lv3_1));
    add_ln691_381_fu_197_p2 <= std_logic_vector(unsigned(c5_V_reg_119) + unsigned(ap_const_lv5_1));
    add_ln691_382_fu_209_p2 <= std_logic_vector(unsigned(c6_V_reg_130) + unsigned(ap_const_lv2_1));
    add_ln691_fu_141_p2 <= std_logic_vector(unsigned(c0_V_reg_86) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n, fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n)
    begin
                ap_block_state7 <= ((fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln890_fu_147_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_147_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln890_fu_147_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_147_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_blk_n <= fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n;
        else 
            fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_read_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n, fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n, ap_CS_fsm_state7)
    begin
        if ((not(((fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_read <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n <= fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n;
        else 
            fifo_D_drain_D_drain_IO_L2_out_7_x1212_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_D_drain_D_drain_IO_L2_out_7_x1212_din <= fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_dout;

    fifo_D_drain_D_drain_IO_L2_out_7_x1212_write_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n, fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n, ap_CS_fsm_state7)
    begin
        if ((not(((fifo_D_drain_D_drain_IO_L1_out_7_0_x1201_empty_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L2_out_7_x1212_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_D_drain_D_drain_IO_L2_out_7_x1212_write <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L2_out_7_x1212_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln886_fu_179_p2 <= "1" when (unsigned(add_i_i56_cast_fu_173_p2) < unsigned(ap_const_lv6_7)) else "0";
    icmp_ln890_444_fu_159_p2 <= "1" when (c1_V_reg_97 = ap_const_lv3_6) else "0";
    icmp_ln890_445_fu_191_p2 <= "1" when (c4_V_reg_108 = ap_const_lv3_4) else "0";
    icmp_ln890_446_fu_203_p2 <= "1" when (c5_V_reg_119 = ap_const_lv5_10) else "0";
    icmp_ln890_447_fu_215_p2 <= "1" when (c6_V_reg_130 = ap_const_lv2_2) else "0";
    icmp_ln890_fu_147_p2 <= "1" when (c0_V_reg_86 = ap_const_lv3_4) else "0";
    p_shl_fu_165_p3 <= (c1_V_reg_97 & ap_const_lv3_0);
end behav;
