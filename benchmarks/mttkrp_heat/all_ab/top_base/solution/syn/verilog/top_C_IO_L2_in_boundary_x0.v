// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_IO_L2_in_boundary_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_C_IO_L2_in_7_x024_dout,
        fifo_C_C_IO_L2_in_7_x024_empty_n,
        fifo_C_C_IO_L2_in_7_x024_read,
        fifo_C_PE_0_7_x0136_din,
        fifo_C_PE_0_7_x0136_full_n,
        fifo_C_PE_0_7_x0136_write
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_C_C_IO_L2_in_7_x024_dout;
input   fifo_C_C_IO_L2_in_7_x024_empty_n;
output   fifo_C_C_IO_L2_in_7_x024_read;
output  [255:0] fifo_C_PE_0_7_x0136_din;
input   fifo_C_PE_0_7_x0136_full_n;
output   fifo_C_PE_0_7_x0136_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_C_IO_L2_in_7_x024_read;
reg[255:0] fifo_C_PE_0_7_x0136_din;
reg fifo_C_PE_0_7_x0136_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_C_IO_L2_in_7_x024_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state17;
reg    fifo_C_PE_0_7_x0136_blk_n;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state32;
wire   [511:0] local_C_ping_V_q0;
reg   [511:0] reg_623;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state29;
wire   [2:0] add_ln691_fu_629_p2;
reg   [2:0] add_ln691_reg_1160;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln691_1480_fu_641_p2;
reg   [2:0] add_ln691_1480_reg_1168;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln886_fu_667_p2;
reg   [0:0] icmp_ln886_reg_1176;
wire   [0:0] icmp_ln890_1302_fu_647_p2;
wire   [3:0] add_ln691_1477_fu_673_p2;
reg   [3:0] add_ln691_1477_reg_1180;
wire    ap_CS_fsm_state4;
wire   [6:0] tmp_502_cast_fu_683_p3;
reg   [6:0] tmp_502_cast_reg_1185;
wire   [4:0] add_ln691_1478_fu_697_p2;
reg   [4:0] add_ln691_1478_reg_1193;
wire    ap_CS_fsm_state5;
reg   [6:0] local_C_pong_V_addr_reg_1198;
wire   [7:0] c2_V_90_fu_723_p2;
reg   [7:0] c2_V_90_reg_1206;
wire    ap_CS_fsm_state7;
reg   [0:0] arb_2_reg_342;
reg   [0:0] intra_trans_en_2_reg_329;
wire   [7:0] c2_V_89_fu_735_p2;
reg   [7:0] c2_V_89_reg_1214;
wire   [0:0] arb_fu_747_p2;
wire   [0:0] icmp_ln4843_fu_741_p2;
wire   [0:0] icmp_ln4784_fu_729_p2;
wire   [1:0] add_ln691_1486_fu_753_p2;
reg   [1:0] add_ln691_1486_reg_1227;
wire    ap_CS_fsm_state8;
wire   [5:0] add_ln691_1488_fu_765_p2;
reg   [5:0] add_ln691_1488_reg_1235;
wire    ap_CS_fsm_state9;
reg   [3:0] div_i_i4_reg_1243;
wire   [0:0] icmp_ln890_1314_fu_771_p2;
reg   [0:0] data_split_V_4_addr_reg_1248;
wire   [3:0] add_ln691_1490_fu_796_p2;
reg   [3:0] add_ln691_1490_reg_1253;
wire    ap_CS_fsm_state10;
wire   [4:0] add_ln691_1493_fu_820_p2;
reg   [4:0] add_ln691_1493_reg_1266;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln691_1494_fu_832_p2;
wire    ap_CS_fsm_state13;
wire   [511:0] zext_ln1497_68_fu_864_p1;
wire   [0:0] icmp_ln878_70_fu_843_p2;
wire   [3:0] add_ln691_1475_fu_868_p2;
reg   [3:0] add_ln691_1475_reg_1287;
wire    ap_CS_fsm_state15;
wire   [6:0] tmp_501_cast_fu_878_p3;
reg   [6:0] tmp_501_cast_reg_1292;
wire   [4:0] add_ln691_1476_fu_892_p2;
reg   [4:0] add_ln691_1476_reg_1300;
wire    ap_CS_fsm_state16;
reg   [6:0] local_C_ping_V_addr_3_reg_1305;
wire   [1:0] add_ln691_1485_fu_918_p2;
reg   [1:0] add_ln691_1485_reg_1313;
wire    ap_CS_fsm_state18;
wire   [5:0] add_ln691_1487_fu_930_p2;
reg   [5:0] add_ln691_1487_reg_1321;
wire    ap_CS_fsm_state19;
reg   [3:0] div_i_i3_reg_1329;
wire   [0:0] icmp_ln890_1313_fu_936_p2;
reg   [0:0] data_split_V_3_addr_reg_1334;
wire   [3:0] add_ln691_1489_fu_961_p2;
reg   [3:0] add_ln691_1489_reg_1339;
wire    ap_CS_fsm_state20;
wire   [511:0] local_C_pong_V_q0;
reg   [511:0] in_data_V_11_reg_1352;
wire    ap_CS_fsm_state21;
wire   [4:0] add_ln691_1491_fu_985_p2;
reg   [4:0] add_ln691_1491_reg_1357;
wire    ap_CS_fsm_state22;
wire   [1:0] add_ln691_1492_fu_997_p2;
wire    ap_CS_fsm_state23;
wire   [511:0] zext_ln1497_67_fu_1029_p1;
wire   [0:0] icmp_ln878_69_fu_1008_p2;
wire   [7:0] c2_V_86_fu_1033_p2;
reg   [7:0] c2_V_86_reg_1378;
wire    ap_CS_fsm_state25;
wire   [1:0] add_ln691_1473_fu_1045_p2;
reg   [1:0] add_ln691_1473_reg_1386;
wire    ap_CS_fsm_state26;
wire   [5:0] add_ln691_1474_fu_1057_p2;
reg   [5:0] add_ln691_1474_reg_1394;
wire    ap_CS_fsm_state27;
reg   [3:0] div_i_i_reg_1402;
wire   [0:0] icmp_ln890_1304_fu_1063_p2;
reg   [0:0] data_split_V_addr_reg_1407;
wire   [3:0] add_ln691_1479_fu_1088_p2;
reg   [3:0] add_ln691_1479_reg_1412;
wire    ap_CS_fsm_state28;
wire   [4:0] add_ln691_1481_fu_1112_p2;
reg   [4:0] add_ln691_1481_reg_1425;
wire    ap_CS_fsm_state30;
wire   [1:0] add_ln691_1482_fu_1124_p2;
wire    ap_CS_fsm_state31;
wire   [511:0] zext_ln1497_fu_1156_p1;
wire   [0:0] icmp_ln878_fu_1135_p2;
reg   [6:0] local_C_ping_V_address0;
reg    local_C_ping_V_ce0;
reg    local_C_ping_V_we0;
reg   [6:0] local_C_pong_V_address0;
reg    local_C_pong_V_ce0;
reg    local_C_pong_V_we0;
reg   [0:0] data_split_V_4_address0;
reg    data_split_V_4_ce0;
reg    data_split_V_4_we0;
wire   [255:0] data_split_V_4_d0;
wire   [255:0] data_split_V_4_q0;
reg   [0:0] data_split_V_3_address0;
reg    data_split_V_3_ce0;
reg    data_split_V_3_we0;
wire   [255:0] data_split_V_3_d0;
wire   [255:0] data_split_V_3_q0;
reg   [0:0] data_split_V_address0;
reg    data_split_V_ce0;
reg    data_split_V_we0;
wire   [255:0] data_split_V_d0;
wire   [255:0] data_split_V_q0;
reg   [2:0] c0_V_reg_293;
reg    ap_block_state1;
reg   [0:0] intra_trans_en_reg_304;
reg   [2:0] c1_V_reg_318;
wire   [0:0] icmp_ln890_fu_635_p2;
wire   [0:0] ap_phi_mux_arb_2_phi_fu_346_p4;
reg   [3:0] c4_V_16_reg_354;
wire   [0:0] icmp_ln890_1309_fu_717_p2;
reg   [4:0] c5_V_68_reg_365;
wire   [0:0] icmp_ln890_1306_fu_691_p2;
reg   [7:0] c2_V_88_reg_376;
wire   [0:0] icmp_ln890_1312_fu_759_p2;
reg   [7:0] c2_V_87_reg_387;
wire   [0:0] icmp_ln890_1311_fu_924_p2;
wire   [0:0] icmp_ln890_1305_fu_886_p2;
reg   [1:0] c5_V_70_reg_398;
reg   [5:0] c6_V_130_reg_409;
wire   [0:0] icmp_ln890_1316_fu_814_p2;
reg   [3:0] c7_V_68_reg_420;
wire   [0:0] icmp_ln890_1318_fu_826_p2;
reg   [4:0] c8_V_4_reg_431;
reg   [1:0] n_V_68_reg_442;
reg   [511:0] p_Val2_s_reg_453;
reg   [3:0] c4_V_reg_462;
wire   [0:0] icmp_ln890_1308_fu_912_p2;
reg   [4:0] c5_V_67_reg_473;
reg   [1:0] c5_V_69_reg_484;
reg   [5:0] c6_V_129_reg_495;
wire   [0:0] icmp_ln890_1315_fu_979_p2;
reg   [3:0] c7_V_67_reg_506;
wire   [0:0] icmp_ln890_1317_fu_991_p2;
reg   [4:0] c8_V_3_reg_517;
reg   [1:0] n_V_67_reg_528;
reg   [511:0] p_Val2_73_reg_539;
reg   [7:0] c2_V_reg_548;
wire   [0:0] icmp_ln890_1303_fu_1051_p2;
reg   [1:0] c5_V_reg_559;
wire   [0:0] icmp_ln4886_fu_1039_p2;
reg   [5:0] c6_V_reg_570;
wire   [0:0] icmp_ln890_1307_fu_1106_p2;
reg   [3:0] c7_V_reg_581;
wire   [0:0] icmp_ln890_1310_fu_1118_p2;
reg   [4:0] c8_V_reg_592;
reg   [1:0] n_V_reg_603;
reg   [511:0] p_Val2_74_reg_614;
wire   [63:0] zext_ln4773_1_fu_712_p1;
wire   [63:0] idxprom_fu_791_p1;
wire   [63:0] tmp_504_cast_fu_809_p1;
wire   [63:0] zext_ln878_68_fu_838_p1;
wire   [63:0] zext_ln4832_1_fu_907_p1;
wire   [63:0] idxprom123_fu_956_p1;
wire   [63:0] tmp_cast_fu_974_p1;
wire   [63:0] zext_ln878_67_fu_1003_p1;
wire   [63:0] idxprom174_fu_1083_p1;
wire   [63:0] tmp_503_cast_fu_1101_p1;
wire   [63:0] zext_ln878_fu_1130_p1;
wire   [5:0] p_shl_fu_653_p3;
wire   [5:0] add_i_i720_cast_fu_661_p2;
wire   [2:0] trunc_ln4773_fu_679_p1;
wire   [6:0] zext_ln4773_fu_703_p1;
wire   [6:0] add_ln4773_fu_707_p2;
wire   [0:0] empty_fu_787_p1;
wire   [7:0] tmp_36_fu_802_p3;
wire   [255:0] r_fu_854_p4;
wire   [2:0] trunc_ln4832_fu_874_p1;
wire   [6:0] zext_ln4832_fu_898_p1;
wire   [6:0] add_ln4832_fu_902_p2;
wire   [0:0] empty_3657_fu_952_p1;
wire   [7:0] tmp_fu_967_p3;
wire   [255:0] r_69_fu_1019_p4;
wire   [0:0] empty_3658_fu_1079_p1;
wire   [7:0] tmp_s_fu_1094_p3;
wire   [255:0] r_70_fu_1146_p4;
reg   [31:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 32'd1;
end

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_V_address0),
    .ce0(local_C_ping_V_ce0),
    .we0(local_C_ping_V_we0),
    .d0(fifo_C_C_IO_L2_in_7_x024_dout),
    .q0(local_C_ping_V_q0)
);

top_C_IO_L2_in_0_x0_local_C_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
local_C_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_V_address0),
    .ce0(local_C_pong_V_ce0),
    .we0(local_C_pong_V_we0),
    .d0(fifo_C_C_IO_L2_in_7_x024_dout),
    .q0(local_C_pong_V_q0)
);

top_A_IO_L2_in_0_x0_data_split_V_80 #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_4_address0),
    .ce0(data_split_V_4_ce0),
    .we0(data_split_V_4_we0),
    .d0(data_split_V_4_d0),
    .q0(data_split_V_4_q0)
);

top_A_IO_L2_in_0_x0_data_split_V_80 #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_3_address0),
    .ce0(data_split_V_3_ce0),
    .we0(data_split_V_3_we0),
    .d0(data_split_V_3_d0),
    .q0(data_split_V_3_q0)
);

top_A_IO_L2_in_0_x0_data_split_V_80 #(
    .DataWidth( 256 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_address0),
    .ce0(data_split_V_ce0),
    .we0(data_split_V_we0),
    .d0(data_split_V_d0),
    .q0(data_split_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln4886_fu_1039_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_2_reg_329 == 1'd0) | ((icmp_ln4843_fu_741_p2 == 1'd1) & (arb_2_reg_342 == 1'd1))) | ((icmp_ln4784_fu_729_p2 == 1'd1) & (arb_2_reg_342 == 1'd0))))) begin
        arb_2_reg_342 <= arb_fu_747_p2;
    end else if (((icmp_ln890_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        arb_2_reg_342 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_293 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd1))) begin
        c0_V_reg_293 <= add_ln691_reg_1160;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_2_reg_329 == 1'd0) | ((icmp_ln4843_fu_741_p2 == 1'd1) & (arb_2_reg_342 == 1'd1))) | ((icmp_ln4784_fu_729_p2 == 1'd1) & (arb_2_reg_342 == 1'd0))))) begin
        c1_V_reg_318 <= add_ln691_1480_reg_1168;
    end else if (((icmp_ln890_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_V_reg_318 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (((icmp_ln890_1305_fu_886_p2 == 1'd1) & (intra_trans_en_2_reg_329 == 1'd1)) | ((intra_trans_en_2_reg_329 == 1'd1) & (icmp_ln886_reg_1176 == 1'd1))))) begin
        c2_V_87_reg_387 <= 8'd0;
    end else if (((icmp_ln890_1311_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        c2_V_87_reg_387 <= c2_V_89_reg_1214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (((icmp_ln890_1306_fu_691_p2 == 1'd1) & (intra_trans_en_2_reg_329 == 1'd1)) | ((intra_trans_en_2_reg_329 == 1'd1) & (icmp_ln886_reg_1176 == 1'd1))))) begin
        c2_V_88_reg_376 <= 8'd0;
    end else if (((icmp_ln890_1312_fu_759_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        c2_V_88_reg_376 <= c2_V_90_reg_1206;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c2_V_reg_548 <= 8'd0;
    end else if (((icmp_ln890_1303_fu_1051_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        c2_V_reg_548 <= c2_V_86_reg_1378;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_arb_2_phi_fu_346_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd0) & (icmp_ln886_fu_667_p2 == 1'd0))) begin
        c4_V_16_reg_354 <= 4'd0;
    end else if (((icmp_ln890_1309_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c4_V_16_reg_354 <= add_ln691_1477_reg_1180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_arb_2_phi_fu_346_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd0) & (icmp_ln886_fu_667_p2 == 1'd0))) begin
        c4_V_reg_462 <= 4'd0;
    end else if (((icmp_ln890_1308_fu_912_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        c4_V_reg_462 <= add_ln691_1475_reg_1287;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1305_fu_886_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln886_reg_1176 == 1'd0))) begin
        c5_V_67_reg_473 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        c5_V_67_reg_473 <= add_ln691_1476_reg_1300;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1306_fu_691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln886_reg_1176 == 1'd0))) begin
        c5_V_68_reg_365 <= 5'd0;
    end else if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        c5_V_68_reg_365 <= add_ln691_1478_reg_1193;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln4843_fu_741_p2 == 1'd0) & (intra_trans_en_2_reg_329 == 1'd1) & (arb_2_reg_342 == 1'd1))) begin
        c5_V_69_reg_484 <= 2'd0;
    end else if (((icmp_ln890_1313_fu_936_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        c5_V_69_reg_484 <= add_ln691_1485_reg_1313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln4784_fu_729_p2 == 1'd0) & (intra_trans_en_2_reg_329 == 1'd1) & (arb_2_reg_342 == 1'd0))) begin
        c5_V_70_reg_398 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1314_fu_771_p2 == 1'd1))) begin
        c5_V_70_reg_398 <= add_ln691_1486_reg_1227;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4886_fu_1039_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        c5_V_reg_559 <= 2'd0;
    end else if (((icmp_ln890_1304_fu_1063_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        c5_V_reg_559 <= add_ln691_1473_reg_1386;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1311_fu_924_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        c6_V_129_reg_495 <= 6'd0;
    end else if (((icmp_ln890_1315_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        c6_V_129_reg_495 <= add_ln691_1487_reg_1321;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1312_fu_759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        c6_V_130_reg_409 <= 6'd0;
    end else if (((icmp_ln890_1316_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        c6_V_130_reg_409 <= add_ln691_1488_reg_1235;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1303_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        c6_V_reg_570 <= 6'd0;
    end else if (((icmp_ln890_1307_fu_1106_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        c6_V_reg_570 <= add_ln691_1474_reg_1394;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1313_fu_936_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        c7_V_67_reg_506 <= 4'd0;
    end else if (((icmp_ln890_1317_fu_991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        c7_V_67_reg_506 <= add_ln691_1489_reg_1339;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1314_fu_771_p2 == 1'd0))) begin
        c7_V_68_reg_420 <= 4'd0;
    end else if (((icmp_ln890_1318_fu_826_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        c7_V_68_reg_420 <= add_ln691_1490_reg_1253;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1304_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        c7_V_reg_581 <= 4'd0;
    end else if (((icmp_ln890_1310_fu_1118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        c7_V_reg_581 <= add_ln691_1479_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c8_V_3_reg_517 <= 5'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        c8_V_3_reg_517 <= add_ln691_1491_reg_1357;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        c8_V_4_reg_431 <= 5'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        c8_V_4_reg_431 <= add_ln691_1493_reg_1266;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        c8_V_reg_592 <= 5'd0;
    end else if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        c8_V_reg_592 <= add_ln691_1481_reg_1425;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_2_reg_329 == 1'd0) | ((icmp_ln4843_fu_741_p2 == 1'd1) & (arb_2_reg_342 == 1'd1))) | ((icmp_ln4784_fu_729_p2 == 1'd1) & (arb_2_reg_342 == 1'd0))))) begin
        intra_trans_en_2_reg_329 <= 1'd1;
    end else if (((icmp_ln890_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        intra_trans_en_2_reg_329 <= intra_trans_en_reg_304;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_304 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd1))) begin
        intra_trans_en_reg_304 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1317_fu_991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        n_V_67_reg_528 <= 2'd0;
    end else if (((icmp_ln878_69_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        n_V_67_reg_528 <= add_ln691_1492_fu_997_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1318_fu_826_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        n_V_68_reg_442 <= 2'd0;
    end else if (((icmp_ln878_70_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        n_V_68_reg_442 <= add_ln691_1494_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1310_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        n_V_reg_603 <= 2'd0;
    end else if (((icmp_ln878_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        n_V_reg_603 <= add_ln691_1482_fu_1124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1317_fu_991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        p_Val2_73_reg_539 <= in_data_V_11_reg_1352;
    end else if (((icmp_ln878_69_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        p_Val2_73_reg_539 <= zext_ln1497_67_fu_1029_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1310_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        p_Val2_74_reg_614 <= reg_623;
    end else if (((icmp_ln878_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        p_Val2_74_reg_614 <= zext_ln1497_fu_1156_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1318_fu_826_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        p_Val2_s_reg_453 <= reg_623;
    end else if (((icmp_ln878_70_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        p_Val2_s_reg_453 <= zext_ln1497_68_fu_864_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln691_1473_reg_1386 <= add_ln691_1473_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln691_1474_reg_1394 <= add_ln691_1474_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln886_reg_1176 == 1'd0))) begin
        add_ln691_1475_reg_1287 <= add_ln691_1475_fu_868_p2;
        tmp_501_cast_reg_1292[6 : 4] <= tmp_501_cast_fu_878_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln691_1476_reg_1300 <= add_ln691_1476_fu_892_p2;
        local_C_ping_V_addr_3_reg_1305 <= zext_ln4832_1_fu_907_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln886_reg_1176 == 1'd0))) begin
        add_ln691_1477_reg_1180 <= add_ln691_1477_fu_673_p2;
        tmp_502_cast_reg_1185[6 : 4] <= tmp_502_cast_fu_683_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1478_reg_1193 <= add_ln691_1478_fu_697_p2;
        local_C_pong_V_addr_reg_1198 <= zext_ln4773_1_fu_712_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln691_1479_reg_1412 <= add_ln691_1479_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_1480_reg_1168 <= add_ln691_1480_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln691_1481_reg_1425 <= add_ln691_1481_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln691_1485_reg_1313 <= add_ln691_1485_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln691_1486_reg_1227 <= add_ln691_1486_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln691_1487_reg_1321 <= add_ln691_1487_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln691_1488_reg_1235 <= add_ln691_1488_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln691_1489_reg_1339 <= add_ln691_1489_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln691_1490_reg_1253 <= add_ln691_1490_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln691_1491_reg_1357 <= add_ln691_1491_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln691_1493_reg_1266 <= add_ln691_1493_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_1160 <= add_ln691_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        c2_V_86_reg_1378 <= c2_V_86_fu_1033_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (intra_trans_en_2_reg_329 == 1'd1) & (arb_2_reg_342 == 1'd1))) begin
        c2_V_89_reg_1214 <= c2_V_89_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (intra_trans_en_2_reg_329 == 1'd1) & (arb_2_reg_342 == 1'd0))) begin
        c2_V_90_reg_1206 <= c2_V_90_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1313_fu_936_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        data_split_V_3_addr_reg_1334 <= idxprom123_fu_956_p1;
        div_i_i3_reg_1329 <= {{c6_V_129_reg_495[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1314_fu_771_p2 == 1'd0))) begin
        data_split_V_4_addr_reg_1248 <= idxprom_fu_791_p1;
        div_i_i4_reg_1243 <= {{c6_V_130_reg_409[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1304_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        data_split_V_addr_reg_1407 <= idxprom174_fu_1083_p1;
        div_i_i_reg_1402 <= {{c6_V_reg_570[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd0))) begin
        icmp_ln886_reg_1176 <= icmp_ln886_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        in_data_V_11_reg_1352 <= local_C_pong_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_623 <= local_C_ping_V_q0;
    end
end

always @ (*) begin
    if (((icmp_ln4886_fu_1039_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln4886_fu_1039_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((icmp_ln878_69_fu_1008_p2 == 1'd1)) begin
            data_split_V_3_address0 = data_split_V_3_addr_reg_1334;
        end else if ((icmp_ln878_69_fu_1008_p2 == 1'd0)) begin
            data_split_V_3_address0 = zext_ln878_67_fu_1003_p1;
        end else begin
            data_split_V_3_address0 = 'bx;
        end
    end else begin
        data_split_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_69_fu_1008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln878_69_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        data_split_V_3_ce0 = 1'b1;
    end else begin
        data_split_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_69_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        data_split_V_3_we0 = 1'b1;
    end else begin
        data_split_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        if ((icmp_ln878_70_fu_843_p2 == 1'd1)) begin
            data_split_V_4_address0 = data_split_V_4_addr_reg_1248;
        end else if ((icmp_ln878_70_fu_843_p2 == 1'd0)) begin
            data_split_V_4_address0 = zext_ln878_68_fu_838_p1;
        end else begin
            data_split_V_4_address0 = 'bx;
        end
    end else begin
        data_split_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_70_fu_843_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln878_70_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        data_split_V_4_ce0 = 1'b1;
    end else begin
        data_split_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_70_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        data_split_V_4_we0 = 1'b1;
    end else begin
        data_split_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((icmp_ln878_fu_1135_p2 == 1'd1)) begin
            data_split_V_address0 = data_split_V_addr_reg_1407;
        end else if ((icmp_ln878_fu_1135_p2 == 1'd0)) begin
            data_split_V_address0 = zext_ln878_fu_1130_p1;
        end else begin
            data_split_V_address0 = 'bx;
        end
    end else begin
        data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_fu_1135_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln878_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        data_split_V_ce0 = 1'b1;
    end else begin
        data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        data_split_V_we0 = 1'b1;
    end else begin
        data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        fifo_C_C_IO_L2_in_7_x024_blk_n = fifo_C_C_IO_L2_in_7_x024_empty_n;
    end else begin
        fifo_C_C_IO_L2_in_7_x024_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_C_C_IO_L2_in_7_x024_read = 1'b1;
    end else begin
        fifo_C_C_IO_L2_in_7_x024_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14))) begin
        fifo_C_PE_0_7_x0136_blk_n = fifo_C_PE_0_7_x0136_full_n;
    end else begin
        fifo_C_PE_0_7_x0136_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((fifo_C_PE_0_7_x0136_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            fifo_C_PE_0_7_x0136_din = data_split_V_q0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            fifo_C_PE_0_7_x0136_din = data_split_V_3_q0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            fifo_C_PE_0_7_x0136_din = data_split_V_4_q0;
        end else begin
            fifo_C_PE_0_7_x0136_din = 'bx;
        end
    end else begin
        fifo_C_PE_0_7_x0136_din = 'bx;
    end
end

always @ (*) begin
    if ((((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        fifo_C_PE_0_7_x0136_write = 1'b1;
    end else begin
        fifo_C_PE_0_7_x0136_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        local_C_ping_V_address0 = tmp_503_cast_fu_1101_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        local_C_ping_V_address0 = local_C_ping_V_addr_3_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_C_ping_V_address0 = tmp_504_cast_fu_809_p1;
    end else begin
        local_C_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10) | ((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        local_C_ping_V_ce0 = 1'b1;
    end else begin
        local_C_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        local_C_ping_V_we0 = 1'b1;
    end else begin
        local_C_ping_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        local_C_pong_V_address0 = tmp_cast_fu_974_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        local_C_pong_V_address0 = local_C_pong_V_addr_reg_1198;
    end else begin
        local_C_pong_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        local_C_pong_V_ce0 = 1'b1;
    end else begin
        local_C_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        local_C_pong_V_we0 = 1'b1;
    end else begin
        local_C_pong_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_phi_mux_arb_2_phi_fu_346_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1302_fu_647_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln890_1306_fu_691_p2 == 1'd1) | (icmp_ln886_reg_1176 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1309_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_2_reg_329 == 1'd0) | ((icmp_ln4843_fu_741_p2 == 1'd1) & (arb_2_reg_342 == 1'd1))) | ((icmp_ln4784_fu_729_p2 == 1'd1) & (arb_2_reg_342 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln4843_fu_741_p2 == 1'd0) & (intra_trans_en_2_reg_329 == 1'd1) & (arb_2_reg_342 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln890_1312_fu_759_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_1314_fu_771_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln890_1316_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln890_1318_fu_826_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln878_70_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((icmp_ln890_1305_fu_886_p2 == 1'd1) | (icmp_ln886_reg_1176 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln890_1308_fu_912_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((fifo_C_C_IO_L2_in_7_x024_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln890_1311_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln890_1313_fu_936_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln890_1315_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln890_1317_fu_991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln878_69_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln4886_fu_1039_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln890_1303_fu_1051_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln890_1304_fu_1063_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln890_1307_fu_1106_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln890_1310_fu_1118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln878_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((fifo_C_PE_0_7_x0136_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i720_cast_fu_661_p2 = ($signed(6'd41) - $signed(p_shl_fu_653_p3));

assign add_ln4773_fu_707_p2 = (tmp_502_cast_reg_1185 + zext_ln4773_fu_703_p1);

assign add_ln4832_fu_902_p2 = (tmp_501_cast_reg_1292 + zext_ln4832_fu_898_p1);

assign add_ln691_1473_fu_1045_p2 = (c5_V_reg_559 + 2'd1);

assign add_ln691_1474_fu_1057_p2 = (c6_V_reg_570 + 6'd1);

assign add_ln691_1475_fu_868_p2 = (c4_V_reg_462 + 4'd1);

assign add_ln691_1476_fu_892_p2 = (c5_V_67_reg_473 + 5'd1);

assign add_ln691_1477_fu_673_p2 = (c4_V_16_reg_354 + 4'd1);

assign add_ln691_1478_fu_697_p2 = (c5_V_68_reg_365 + 5'd1);

assign add_ln691_1479_fu_1088_p2 = (c7_V_reg_581 + 4'd1);

assign add_ln691_1480_fu_641_p2 = (c1_V_reg_318 + 3'd1);

assign add_ln691_1481_fu_1112_p2 = (c8_V_reg_592 + 5'd1);

assign add_ln691_1482_fu_1124_p2 = (n_V_reg_603 + 2'd1);

assign add_ln691_1485_fu_918_p2 = (c5_V_69_reg_484 + 2'd1);

assign add_ln691_1486_fu_753_p2 = (c5_V_70_reg_398 + 2'd1);

assign add_ln691_1487_fu_930_p2 = (c6_V_129_reg_495 + 6'd1);

assign add_ln691_1488_fu_765_p2 = (c6_V_130_reg_409 + 6'd1);

assign add_ln691_1489_fu_961_p2 = (c7_V_67_reg_506 + 4'd1);

assign add_ln691_1490_fu_796_p2 = (c7_V_68_reg_420 + 4'd1);

assign add_ln691_1491_fu_985_p2 = (c8_V_3_reg_517 + 5'd1);

assign add_ln691_1492_fu_997_p2 = (n_V_67_reg_528 + 2'd1);

assign add_ln691_1493_fu_820_p2 = (c8_V_4_reg_431 + 5'd1);

assign add_ln691_1494_fu_832_p2 = (n_V_68_reg_442 + 2'd1);

assign add_ln691_fu_629_p2 = (c0_V_reg_293 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_phi_mux_arb_2_phi_fu_346_p4 = arb_2_reg_342;

assign arb_fu_747_p2 = (arb_2_reg_342 ^ 1'd1);

assign c2_V_86_fu_1033_p2 = (c2_V_reg_548 + 8'd1);

assign c2_V_89_fu_735_p2 = (c2_V_87_reg_387 + 8'd1);

assign c2_V_90_fu_723_p2 = (c2_V_88_reg_376 + 8'd1);

assign data_split_V_3_d0 = p_Val2_73_reg_539[255:0];

assign data_split_V_4_d0 = p_Val2_s_reg_453[255:0];

assign data_split_V_d0 = p_Val2_74_reg_614[255:0];

assign empty_3657_fu_952_p1 = c6_V_129_reg_495[0:0];

assign empty_3658_fu_1079_p1 = c6_V_reg_570[0:0];

assign empty_fu_787_p1 = c6_V_130_reg_409[0:0];

assign icmp_ln4784_fu_729_p2 = ((c2_V_88_reg_376 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln4843_fu_741_p2 = ((c2_V_87_reg_387 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln4886_fu_1039_p2 = ((c2_V_reg_548 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln878_69_fu_1008_p2 = ((n_V_67_reg_528 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_70_fu_843_p2 = ((n_V_68_reg_442 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1135_p2 = ((n_V_reg_603 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_667_p2 = ((add_i_i720_cast_fu_661_p2 < 6'd7) ? 1'b1 : 1'b0);

assign icmp_ln890_1302_fu_647_p2 = ((c1_V_reg_318 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_1303_fu_1051_p2 = ((c5_V_reg_559 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1304_fu_1063_p2 = ((c6_V_reg_570 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1305_fu_886_p2 = ((c4_V_reg_462 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1306_fu_691_p2 = ((c4_V_16_reg_354 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1307_fu_1106_p2 = ((c7_V_reg_581 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1308_fu_912_p2 = ((c5_V_67_reg_473 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1309_fu_717_p2 = ((c5_V_68_reg_365 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1310_fu_1118_p2 = ((c8_V_reg_592 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1311_fu_924_p2 = ((c5_V_69_reg_484 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1312_fu_759_p2 = ((c5_V_70_reg_398 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_1313_fu_936_p2 = ((c6_V_129_reg_495 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1314_fu_771_p2 = ((c6_V_130_reg_409 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1315_fu_979_p2 = ((c7_V_67_reg_506 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1316_fu_814_p2 = ((c7_V_68_reg_420 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1317_fu_991_p2 = ((c8_V_3_reg_517 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1318_fu_826_p2 = ((c8_V_4_reg_431 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_635_p2 = ((c0_V_reg_293 == 3'd4) ? 1'b1 : 1'b0);

assign idxprom123_fu_956_p1 = empty_3657_fu_952_p1;

assign idxprom174_fu_1083_p1 = empty_3658_fu_1079_p1;

assign idxprom_fu_791_p1 = empty_fu_787_p1;

assign p_shl_fu_653_p3 = {{c1_V_reg_318}, {3'd0}};

assign r_69_fu_1019_p4 = {{p_Val2_73_reg_539[511:256]}};

assign r_70_fu_1146_p4 = {{p_Val2_74_reg_614[511:256]}};

assign r_fu_854_p4 = {{p_Val2_s_reg_453[511:256]}};

assign tmp_36_fu_802_p3 = {{c7_V_68_reg_420}, {div_i_i4_reg_1243}};

assign tmp_501_cast_fu_878_p3 = {{trunc_ln4832_fu_874_p1}, {4'd0}};

assign tmp_502_cast_fu_683_p3 = {{trunc_ln4773_fu_679_p1}, {4'd0}};

assign tmp_503_cast_fu_1101_p1 = tmp_s_fu_1094_p3;

assign tmp_504_cast_fu_809_p1 = tmp_36_fu_802_p3;

assign tmp_cast_fu_974_p1 = tmp_fu_967_p3;

assign tmp_fu_967_p3 = {{c7_V_67_reg_506}, {div_i_i3_reg_1329}};

assign tmp_s_fu_1094_p3 = {{c7_V_reg_581}, {div_i_i_reg_1402}};

assign trunc_ln4773_fu_679_p1 = c4_V_16_reg_354[2:0];

assign trunc_ln4832_fu_874_p1 = c4_V_reg_462[2:0];

assign zext_ln1497_67_fu_1029_p1 = r_69_fu_1019_p4;

assign zext_ln1497_68_fu_864_p1 = r_fu_854_p4;

assign zext_ln1497_fu_1156_p1 = r_70_fu_1146_p4;

assign zext_ln4773_1_fu_712_p1 = add_ln4773_fu_707_p2;

assign zext_ln4773_fu_703_p1 = c5_V_68_reg_365;

assign zext_ln4832_1_fu_907_p1 = add_ln4832_fu_902_p2;

assign zext_ln4832_fu_898_p1 = c5_V_67_reg_473;

assign zext_ln878_67_fu_1003_p1 = n_V_67_reg_528;

assign zext_ln878_68_fu_838_p1 = n_V_68_reg_442;

assign zext_ln878_fu_1130_p1 = n_V_reg_603;

always @ (posedge ap_clk) begin
    tmp_502_cast_reg_1185[3:0] <= 4'b0000;
    tmp_501_cast_reg_1292[3:0] <= 4'b0000;
end

endmodule //top_C_IO_L2_in_boundary_x0
