// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_D_drain_IO_L1_out_wrapper_4_2_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_dout,
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n,
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_read,
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_din,
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n,
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_write,
        fifo_D_drain_PE_2_4_x1159_dout,
        fifo_D_drain_PE_2_4_x1159_empty_n,
        fifo_D_drain_PE_2_4_x1159_read
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_dout;
input   fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n;
output   fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_read;
output  [127:0] fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_din;
input   fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n;
output   fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_write;
input  [31:0] fifo_D_drain_PE_2_4_x1159_dout;
input   fifo_D_drain_PE_2_4_x1159_empty_n;
output   fifo_D_drain_PE_2_4_x1159_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_read;
reg[127:0] fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_din;
reg fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_write;
reg fifo_D_drain_PE_2_4_x1159_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_blk_n;
wire    ap_CS_fsm_state14;
reg    fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_blk_n;
wire    ap_CS_fsm_state16;
reg    fifo_D_drain_PE_2_4_x1159_blk_n;
wire    ap_CS_fsm_state6;
wire   [2:0] add_ln691_fu_338_p2;
reg   [2:0] add_ln691_reg_588;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln691_982_fu_350_p2;
reg   [2:0] add_ln691_982_reg_596;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln890_838_fu_376_p2;
reg   [0:0] icmp_ln890_838_reg_604;
wire   [0:0] icmp_ln890_837_fu_356_p2;
wire   [3:0] add_ln691_981_fu_382_p2;
reg   [3:0] add_ln691_981_reg_608;
wire    ap_CS_fsm_state4;
reg   [0:0] tmp_reg_616;
wire   [0:0] icmp_ln890_839_fu_388_p2;
reg   [1:0] data_split_V_addr_94_reg_621;
wire   [4:0] add_ln691_983_fu_411_p2;
reg   [4:0] add_ln691_983_reg_626;
wire    ap_CS_fsm_state5;
reg   [4:0] local_D_V_addr_reg_631;
reg   [31:0] tmp_293_reg_639;
wire   [127:0] local_D_V_q0;
wire   [2:0] add_ln691_984_fu_435_p2;
wire    ap_CS_fsm_state7;
wire   [127:0] zext_ln1497_fu_467_p1;
wire   [0:0] icmp_ln878_fu_446_p2;
wire   [31:0] data_split_V_q1;
reg   [31:0] v2_V_reg_662;
wire    ap_CS_fsm_state9;
wire   [31:0] data_split_V_q0;
reg   [31:0] v2_V_1683_reg_667;
wire   [0:0] icmp_ln870_fu_488_p2;
reg   [0:0] icmp_ln870_reg_675;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln890_840_fu_482_p2;
wire   [4:0] add_ln691_988_fu_494_p2;
reg   [4:0] add_ln691_988_reg_679;
wire    ap_CS_fsm_state12;
wire   [4:0] add_ln691_986_fu_506_p2;
reg   [4:0] add_ln691_986_reg_687;
wire   [4:0] shl_ln890_fu_512_p2;
reg   [4:0] shl_ln890_reg_692;
wire   [2:0] add_ln691_985_fu_524_p2;
wire   [0:0] icmp_ln890_842_fu_518_p2;
wire   [0:0] icmp_ln890_843_fu_500_p2;
wire   [1:0] add_ln691_989_fu_530_p2;
reg   [1:0] add_ln691_989_reg_705;
wire    ap_CS_fsm_state13;
wire   [1:0] add_ln691_987_fu_542_p2;
reg   [1:0] add_ln691_987_reg_713;
wire    ap_CS_fsm_state15;
reg   [4:0] local_D_V_address0;
reg    local_D_V_ce0;
reg    local_D_V_we0;
wire   [127:0] local_D_V_d0;
reg   [1:0] data_split_V_address0;
reg    data_split_V_ce0;
reg    data_split_V_we0;
reg   [31:0] data_split_V_d0;
reg   [1:0] data_split_V_address1;
reg    data_split_V_ce1;
reg   [2:0] c0_V_reg_218;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_229;
wire   [0:0] icmp_ln890_fu_344_p2;
reg   [3:0] c7_V_reg_240;
wire   [0:0] icmp_ln890_841_fu_429_p2;
reg   [4:0] c8_V_reg_251;
wire    ap_CS_fsm_state10;
reg   [2:0] n_V_reg_262;
reg   [127:0] p_Val2_s_reg_273;
reg   [2:0] c4_V_reg_282;
reg   [4:0] c5_V_33_reg_294;
wire   [0:0] icmp_ln890_845_fu_536_p2;
reg   [4:0] c5_V_reg_305;
wire   [0:0] icmp_ln890_844_fu_562_p2;
reg   [1:0] c6_V_97_reg_316;
reg    ap_block_state14;
reg   [1:0] c6_V_reg_327;
wire   [63:0] idxprom_fu_406_p1;
wire   [63:0] zext_ln23985_fu_424_p1;
wire   [63:0] zext_ln878_fu_441_p1;
wire   [63:0] zext_ln24011_1_fu_557_p1;
wire   [31:0] trunc_ln674_fu_452_p1;
wire    ap_CS_fsm_state8;
wire   [5:0] ret_134_fu_362_p3;
wire   [5:0] ret_fu_370_p2;
wire   [1:0] empty_fu_394_p1;
wire   [5:0] tmp_s_fu_417_p3;
wire   [95:0] r_fu_457_p4;
wire   [4:0] zext_ln24011_fu_548_p1;
wire   [4:0] add_ln24011_fu_552_p2;
reg   [15:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
end

top_D_drain_IO_L1_out_boundary_wrapper_0_x0_local_D_V #(
    .DataWidth( 128 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
local_D_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_D_V_address0),
    .ce0(local_D_V_ce0),
    .we0(local_D_V_we0),
    .d0(local_D_V_d0),
    .q0(local_D_V_q0)
);

top_D_drain_IO_L1_out_boundary_wrapper_0_x0_data_split_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_address0),
    .ce0(data_split_V_ce0),
    .we0(data_split_V_we0),
    .d0(data_split_V_d0),
    .q0(data_split_V_q0),
    .address1(data_split_V_address1),
    .ce1(data_split_V_ce1),
    .q1(data_split_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_218 <= 3'd0;
    end else if (((icmp_ln890_837_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c0_V_reg_218 <= add_ln691_reg_588;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln890_838_reg_604 == 1'd0) | (icmp_ln890_840_fu_482_p2 == 1'd1)))) begin
        c1_V_reg_229 <= add_ln691_982_reg_596;
    end else if (((icmp_ln890_fu_344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_V_reg_229 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln890_839_fu_388_p2 == 1'd1))) begin
        c4_V_reg_282 <= 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln890_843_fu_500_p2 == 1'd1) & (icmp_ln870_reg_675 == 1'd0)) | ((icmp_ln890_842_fu_518_p2 == 1'd1) & (icmp_ln870_reg_675 == 1'd1))))) begin
        c4_V_reg_282 <= add_ln691_985_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_838_reg_604 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln890_840_fu_482_p2 == 1'd0) & (icmp_ln870_fu_488_p2 == 1'd0))) begin
        c5_V_33_reg_294 <= 5'd0;
    end else if (((icmp_ln890_845_fu_536_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        c5_V_33_reg_294 <= add_ln691_988_reg_679;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_838_reg_604 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln890_840_fu_482_p2 == 1'd0) & (icmp_ln870_fu_488_p2 == 1'd1))) begin
        c5_V_reg_305 <= 5'd0;
    end else if (((icmp_ln890_844_fu_562_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        c5_V_reg_305 <= add_ln691_986_reg_687;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln890_843_fu_500_p2 == 1'd0) & (icmp_ln870_reg_675 == 1'd0))) begin
        c6_V_97_reg_316 <= 2'd0;
    end else if ((~((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        c6_V_97_reg_316 <= add_ln691_989_reg_705;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln890_842_fu_518_p2 == 1'd0) & (icmp_ln870_reg_675 == 1'd1))) begin
        c6_V_reg_327 <= 2'd0;
    end else if (((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        c6_V_reg_327 <= add_ln691_987_reg_713;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_837_fu_356_p2 == 1'd0) & (icmp_ln890_838_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c7_V_reg_240 <= 4'd0;
    end else if (((icmp_ln890_841_fu_429_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c7_V_reg_240 <= add_ln691_981_reg_608;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln890_839_fu_388_p2 == 1'd0))) begin
        c8_V_reg_251 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        c8_V_reg_251 <= add_ln691_983_reg_626;
    end
end

always @ (posedge ap_clk) begin
    if (((fifo_D_drain_PE_2_4_x1159_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        n_V_reg_262 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd0))) begin
        n_V_reg_262 <= add_ln691_984_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((fifo_D_drain_PE_2_4_x1159_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_s_reg_273 <= local_D_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd0))) begin
        p_Val2_s_reg_273 <= zext_ln1497_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln691_981_reg_608 <= add_ln691_981_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_982_reg_596 <= add_ln691_982_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_983_reg_626 <= add_ln691_983_fu_411_p2;
        local_D_V_addr_reg_631 <= zext_ln23985_fu_424_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln870_reg_675 == 1'd1))) begin
        add_ln691_986_reg_687 <= add_ln691_986_fu_506_p2;
        shl_ln890_reg_692[4 : 1] <= shl_ln890_fu_512_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln691_987_reg_713 <= add_ln691_987_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln870_reg_675 == 1'd0))) begin
        add_ln691_988_reg_679 <= add_ln691_988_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln691_989_reg_705 <= add_ln691_989_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_588 <= add_ln691_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln890_839_fu_388_p2 == 1'd0))) begin
        data_split_V_addr_94_reg_621 <= idxprom_fu_406_p1;
        tmp_reg_616 <= c7_V_reg_240[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_838_reg_604 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln890_840_fu_482_p2 == 1'd0))) begin
        icmp_ln870_reg_675 <= icmp_ln870_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_837_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln890_838_reg_604 <= icmp_ln890_838_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_293_reg_639 <= fifo_D_drain_PE_2_4_x1159_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v2_V_1683_reg_667 <= data_split_V_q0;
        v2_V_reg_662 <= data_split_V_q1;
    end
end

always @ (*) begin
    if (((icmp_ln890_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_split_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_split_V_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd1))) begin
        data_split_V_address0 = data_split_V_addr_94_reg_621;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd0))) begin
        data_split_V_address0 = zext_ln878_fu_441_p1;
    end else begin
        data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_split_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_split_V_address1 = 64'd0;
    end else begin
        data_split_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd0)))) begin
        data_split_V_ce0 = 1'b1;
    end else begin
        data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        data_split_V_ce1 = 1'b1;
    end else begin
        data_split_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((icmp_ln878_fu_446_p2 == 1'd1)) begin
            data_split_V_d0 = tmp_293_reg_639;
        end else if ((icmp_ln878_fu_446_p2 == 1'd0)) begin
            data_split_V_d0 = trunc_ln674_fu_452_p1;
        end else begin
            data_split_V_d0 = 'bx;
        end
    end else begin
        data_split_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd0)))) begin
        data_split_V_we0 = 1'b1;
    end else begin
        data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_blk_n = fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_din = local_D_V_q0;
    end else if ((~((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_din = fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_dout;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_din = 'bx;
    end
end

always @ (*) begin
    if ((((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | (~((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)))) begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_write = 1'b1;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_blk_n = fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_read = 1'b1;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fifo_D_drain_PE_2_4_x1159_blk_n = fifo_D_drain_PE_2_4_x1159_empty_n;
    end else begin
        fifo_D_drain_PE_2_4_x1159_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fifo_D_drain_PE_2_4_x1159_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        fifo_D_drain_PE_2_4_x1159_read = 1'b1;
    end else begin
        fifo_D_drain_PE_2_4_x1159_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        local_D_V_address0 = zext_ln24011_1_fu_557_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_D_V_address0 = local_D_V_addr_reg_631;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        local_D_V_address0 = zext_ln23985_fu_424_p1;
    end else begin
        local_D_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        local_D_V_ce0 = 1'b1;
    end else begin
        local_D_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        local_D_V_we0 = 1'b1;
    end else begin
        local_D_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln890_837_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln890_837_fu_356_p2 == 1'd0) & (icmp_ln890_838_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln890_839_fu_388_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_841_fu_429_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((fifo_D_drain_PE_2_4_x1159_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_446_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln890_838_reg_604 == 1'd0) | (icmp_ln890_840_fu_482_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln890_843_fu_500_p2 == 1'd1) & (icmp_ln870_reg_675 == 1'd0)) | ((icmp_ln890_842_fu_518_p2 == 1'd1) & (icmp_ln870_reg_675 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln890_842_fu_518_p2 == 1'd0) & (icmp_ln870_reg_675 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln890_845_fu_536_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln890_844_fu_562_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24011_fu_552_p2 = (shl_ln890_reg_692 + zext_ln24011_fu_548_p1);

assign add_ln691_981_fu_382_p2 = (c7_V_reg_240 + 4'd1);

assign add_ln691_982_fu_350_p2 = (c1_V_reg_229 + 3'd1);

assign add_ln691_983_fu_411_p2 = (c8_V_reg_251 + 5'd1);

assign add_ln691_984_fu_435_p2 = (n_V_reg_262 + 3'd1);

assign add_ln691_985_fu_524_p2 = (c4_V_reg_282 + 3'd1);

assign add_ln691_986_fu_506_p2 = (c5_V_reg_305 + 5'd1);

assign add_ln691_987_fu_542_p2 = (c6_V_reg_327 + 2'd1);

assign add_ln691_988_fu_494_p2 = (c5_V_33_reg_294 + 5'd1);

assign add_ln691_989_fu_530_p2 = (c6_V_97_reg_316 + 2'd1);

assign add_ln691_fu_338_p2 = (c0_V_reg_218 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((fifo_D_drain_D_drain_IO_L1_out_4_2_x1191_full_n == 1'b0) | (fifo_D_drain_D_drain_IO_L1_out_4_3_x1192_empty_n == 1'b0));
end

assign empty_fu_394_p1 = c7_V_reg_240[1:0];

assign icmp_ln870_fu_488_p2 = ((c4_V_reg_282 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_446_p2 = ((n_V_reg_262 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln890_837_fu_356_p2 = ((c1_V_reg_229 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_838_fu_376_p2 = ((ret_fu_370_p2 < 6'd42) ? 1'b1 : 1'b0);

assign icmp_ln890_839_fu_388_p2 = ((c7_V_reg_240 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_840_fu_482_p2 = ((c4_V_reg_282 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln890_841_fu_429_p2 = ((c8_V_reg_251 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_842_fu_518_p2 = ((c5_V_reg_305 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_843_fu_500_p2 = ((c5_V_33_reg_294 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_844_fu_562_p2 = ((c6_V_reg_327 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_845_fu_536_p2 = ((c6_V_97_reg_316 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_344_p2 = ((c0_V_reg_218 == 3'd4) ? 1'b1 : 1'b0);

assign idxprom_fu_406_p1 = empty_fu_394_p1;

assign local_D_V_d0 = {{{{data_split_V_q1}, {data_split_V_q0}}, {v2_V_1683_reg_667}}, {v2_V_reg_662}};

assign r_fu_457_p4 = {{p_Val2_s_reg_273[127:32]}};

assign ret_134_fu_362_p3 = {{c1_V_reg_229}, {3'd0}};

assign ret_fu_370_p2 = (ret_134_fu_362_p3 | 6'd4);

assign shl_ln890_fu_512_p2 = c5_V_reg_305 << 5'd1;

assign tmp_s_fu_417_p3 = {{c8_V_reg_251}, {tmp_reg_616}};

assign trunc_ln674_fu_452_p1 = p_Val2_s_reg_273[31:0];

assign zext_ln1497_fu_467_p1 = r_fu_457_p4;

assign zext_ln23985_fu_424_p1 = tmp_s_fu_417_p3;

assign zext_ln24011_1_fu_557_p1 = add_ln24011_fu_552_p2;

assign zext_ln24011_fu_548_p1 = c6_V_reg_327;

assign zext_ln878_fu_441_p1 = n_V_reg_262;

always @ (posedge ap_clk) begin
    shl_ln890_reg_692[0] <= 1'b0;
end

endmodule //top_D_drain_IO_L1_out_wrapper_4_2_x1
