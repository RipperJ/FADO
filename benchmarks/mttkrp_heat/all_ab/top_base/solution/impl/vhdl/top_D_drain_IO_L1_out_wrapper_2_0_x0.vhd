-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_D_drain_IO_L1_out_wrapper_2_0_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_read : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_write : OUT STD_LOGIC;
    fifo_D_drain_PE_0_2_x0149_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_D_drain_PE_0_2_x0149_empty_n : IN STD_LOGIC;
    fifo_D_drain_PE_0_2_x0149_read : OUT STD_LOGIC );
end;


architecture behav of top_D_drain_IO_L1_out_wrapper_2_0_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal fifo_D_drain_PE_0_2_x0149_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln691_fu_335_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_reg_585 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln691_1135_fu_347_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_1135_reg_593 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln890_991_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_991_reg_601 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_990_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1134_fu_379_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1134_reg_605 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_reg_613 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_992_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_split_V_addr_179_reg_618 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_1136_fu_408_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_1136_reg_623 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal local_D_V_addr_reg_628 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_361_reg_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_D_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal add_ln691_1137_fu_432_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln1497_fu_464_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_ln878_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_split_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal data_split_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_1751_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln691_1138_fu_479_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln691_1138_reg_669 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln870_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_677 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_993_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1141_fu_497_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_1141_reg_681 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln691_1139_fu_509_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_1139_reg_689 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln890_fu_515_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln890_reg_694 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_1142_fu_527_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_1142_reg_702 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln691_1140_fu_539_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_1140_reg_710 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal local_D_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_D_V_ce0 : STD_LOGIC;
    signal local_D_V_we0 : STD_LOGIC;
    signal local_D_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal data_split_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_split_V_ce0 : STD_LOGIC;
    signal data_split_V_we0 : STD_LOGIC;
    signal data_split_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_split_V_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_split_V_ce1 : STD_LOGIC;
    signal c0_V_reg_216 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c1_V_reg_227 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_V_reg_238 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_994_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c8_V_reg_249 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal n_V_reg_260 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_reg_271 : STD_LOGIC_VECTOR (127 downto 0);
    signal c4_V_reg_280 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_995_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_996_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_V_50_reg_291 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_998_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_V_reg_302 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_997_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_114_reg_313 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state14 : BOOLEAN;
    signal c6_V_reg_324 : STD_LOGIC_VECTOR (1 downto 0);
    signal idxprom_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9832_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9858_1_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln674_fu_449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ret_168_fu_359_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_fu_367_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_fu_391_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_414_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_fu_454_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal zext_ln9858_fu_545_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln9858_fu_549_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component top_D_drain_IO_L1_out_boundary_wrapper_0_x0_local_D_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component top_D_drain_IO_L1_out_boundary_wrapper_0_x0_data_split_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    local_D_V_U : component top_D_drain_IO_L1_out_boundary_wrapper_0_x0_local_D_V
    generic map (
        DataWidth => 128,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_D_V_address0,
        ce0 => local_D_V_ce0,
        we0 => local_D_V_we0,
        d0 => local_D_V_d0,
        q0 => local_D_V_q0);

    data_split_V_U : component top_D_drain_IO_L1_out_boundary_wrapper_0_x0_data_split_V
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_split_V_address0,
        ce0 => data_split_V_ce0,
        we0 => data_split_V_we0,
        d0 => data_split_V_d0,
        q0 => data_split_V_q0,
        address1 => data_split_V_address1,
        ce1 => data_split_V_ce1,
        q1 => data_split_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln890_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c0_V_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c0_V_reg_216 <= ap_const_lv3_0;
            elsif (((icmp_ln890_990_fu_353_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c0_V_reg_216 <= add_ln691_reg_585;
            end if; 
        end if;
    end process;

    c1_V_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln890_991_reg_601 = ap_const_lv1_0) or (icmp_ln890_993_fu_485_p2 = ap_const_lv1_1)))) then 
                c1_V_reg_227 <= add_ln691_1135_reg_593;
            elsif (((icmp_ln890_fu_341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c1_V_reg_227 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    c4_V_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_992_fu_385_p2 = ap_const_lv1_1))) then 
                c4_V_reg_280 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln890_996_fu_503_p2 = ap_const_lv1_1) and (icmp_ln870_reg_677 = ap_const_lv1_0)) or ((icmp_ln890_995_fu_521_p2 = ap_const_lv1_1) and (icmp_ln870_reg_677 = ap_const_lv1_1))))) then 
                c4_V_reg_280 <= add_ln691_1138_reg_669;
            end if; 
        end if;
    end process;

    c5_V_50_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_991_reg_601 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln890_993_fu_485_p2 = ap_const_lv1_0) and (icmp_ln870_fu_491_p2 = ap_const_lv1_0))) then 
                c5_V_50_reg_291 <= ap_const_lv5_0;
            elsif (((icmp_ln890_998_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                c5_V_50_reg_291 <= add_ln691_1141_reg_681;
            end if; 
        end if;
    end process;

    c5_V_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_991_reg_601 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln890_993_fu_485_p2 = ap_const_lv1_0) and (icmp_ln870_fu_491_p2 = ap_const_lv1_1))) then 
                c5_V_reg_302 <= ap_const_lv5_0;
            elsif (((icmp_ln890_997_fu_559_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                c5_V_reg_302 <= add_ln691_1139_reg_689;
            end if; 
        end if;
    end process;

    c6_V_114_reg_313_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_996_fu_503_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln870_reg_677 = ap_const_lv1_0))) then 
                c6_V_114_reg_313 <= ap_const_lv2_0;
            elsif ((not(((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                c6_V_114_reg_313 <= add_ln691_1142_reg_702;
            end if; 
        end if;
    end process;

    c6_V_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_995_fu_521_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln870_reg_677 = ap_const_lv1_1))) then 
                c6_V_reg_324 <= ap_const_lv2_0;
            elsif (((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                c6_V_reg_324 <= add_ln691_1140_reg_710;
            end if; 
        end if;
    end process;

    c7_V_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_990_fu_353_p2 = ap_const_lv1_0) and (icmp_ln890_991_fu_373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c7_V_reg_238 <= ap_const_lv4_0;
            elsif (((icmp_ln890_994_fu_426_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                c7_V_reg_238 <= add_ln691_1134_reg_605;
            end if; 
        end if;
    end process;

    c8_V_reg_249_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_992_fu_385_p2 = ap_const_lv1_0))) then 
                c8_V_reg_249 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                c8_V_reg_249 <= add_ln691_1136_reg_623;
            end if; 
        end if;
    end process;

    n_V_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((fifo_D_drain_PE_0_2_x0149_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                n_V_reg_260 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_0))) then 
                n_V_reg_260 <= add_ln691_1137_fu_432_p2;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((fifo_D_drain_PE_0_2_x0149_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                p_Val2_s_reg_271 <= local_D_V_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_0))) then 
                p_Val2_s_reg_271 <= zext_ln1497_fu_464_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln691_1134_reg_605 <= add_ln691_1134_fu_379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln691_1135_reg_593 <= add_ln691_1135_fu_347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln691_1136_reg_623 <= add_ln691_1136_fu_408_p2;
                local_D_V_addr_reg_628 <= zext_ln9832_fu_421_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_991_reg_601 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                add_ln691_1138_reg_669 <= add_ln691_1138_fu_479_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln870_reg_677 = ap_const_lv1_1))) then
                add_ln691_1139_reg_689 <= add_ln691_1139_fu_509_p2;
                    shl_ln890_reg_694(4 downto 1) <= shl_ln890_fu_515_p2(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln691_1140_reg_710 <= add_ln691_1140_fu_539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln870_reg_677 = ap_const_lv1_0))) then
                add_ln691_1141_reg_681 <= add_ln691_1141_fu_497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                add_ln691_1142_reg_702 <= add_ln691_1142_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_585 <= add_ln691_fu_335_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_992_fu_385_p2 = ap_const_lv1_0))) then
                data_split_V_addr_179_reg_618 <= idxprom_fu_403_p1(2 - 1 downto 0);
                tmp_reg_613 <= c7_V_reg_238(2 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_991_reg_601 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln890_993_fu_485_p2 = ap_const_lv1_0))) then
                icmp_ln870_reg_677 <= icmp_ln870_fu_491_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_990_fu_353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln890_991_reg_601 <= icmp_ln890_991_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_361_reg_636 <= fifo_D_drain_PE_0_2_x0149_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                v2_V_1751_reg_664 <= data_split_V_q0;
                v2_V_reg_659 <= data_split_V_q1;
            end if;
        end if;
    end process;
    shl_ln890_reg_694(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n, fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n, fifo_D_drain_PE_0_2_x0149_empty_n, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln890_991_fu_373_p2, icmp_ln890_991_reg_601, icmp_ln890_990_fu_353_p2, ap_CS_fsm_state4, icmp_ln890_992_fu_385_p2, ap_CS_fsm_state5, ap_CS_fsm_state7, icmp_ln878_fu_443_p2, ap_CS_fsm_state11, icmp_ln870_reg_677, icmp_ln890_993_fu_485_p2, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state15, icmp_ln890_fu_341_p2, icmp_ln890_994_fu_426_p2, icmp_ln890_995_fu_521_p2, icmp_ln890_996_fu_503_p2, icmp_ln890_998_fu_533_p2, icmp_ln890_997_fu_559_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln890_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_990_fu_353_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln890_990_fu_353_p2 = ap_const_lv1_0) and (icmp_ln890_991_fu_373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_992_fu_385_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln890_994_fu_426_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((fifo_D_drain_PE_0_2_x0149_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln890_991_reg_601 = ap_const_lv1_0) or (icmp_ln890_993_fu_485_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (((icmp_ln890_996_fu_503_p2 = ap_const_lv1_1) and (icmp_ln870_reg_677 = ap_const_lv1_0)) or ((icmp_ln890_995_fu_521_p2 = ap_const_lv1_1) and (icmp_ln870_reg_677 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((icmp_ln890_995_fu_521_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln870_reg_677 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln890_998_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if ((not(((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln890_997_fu_559_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln691_1134_fu_379_p2 <= std_logic_vector(unsigned(c7_V_reg_238) + unsigned(ap_const_lv4_1));
    add_ln691_1135_fu_347_p2 <= std_logic_vector(unsigned(c1_V_reg_227) + unsigned(ap_const_lv3_1));
    add_ln691_1136_fu_408_p2 <= std_logic_vector(unsigned(c8_V_reg_249) + unsigned(ap_const_lv5_1));
    add_ln691_1137_fu_432_p2 <= std_logic_vector(unsigned(n_V_reg_260) + unsigned(ap_const_lv3_1));
    add_ln691_1138_fu_479_p2 <= std_logic_vector(unsigned(c4_V_reg_280) + unsigned(ap_const_lv3_1));
    add_ln691_1139_fu_509_p2 <= std_logic_vector(unsigned(c5_V_reg_302) + unsigned(ap_const_lv5_1));
    add_ln691_1140_fu_539_p2 <= std_logic_vector(unsigned(c6_V_reg_324) + unsigned(ap_const_lv2_1));
    add_ln691_1141_fu_497_p2 <= std_logic_vector(unsigned(c5_V_50_reg_291) + unsigned(ap_const_lv5_1));
    add_ln691_1142_fu_527_p2 <= std_logic_vector(unsigned(c6_V_114_reg_313) + unsigned(ap_const_lv2_1));
    add_ln691_fu_335_p2 <= std_logic_vector(unsigned(c0_V_reg_216) + unsigned(ap_const_lv3_1));
    add_ln9858_fu_549_p2 <= std_logic_vector(unsigned(shl_ln890_reg_694) + unsigned(zext_ln9858_fu_545_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state14_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n, fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n)
    begin
                ap_block_state14 <= ((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln890_fu_341_p2)
    begin
        if (((icmp_ln890_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln890_fu_341_p2)
    begin
        if (((icmp_ln890_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_split_V_address0_assign_proc : process(data_split_V_addr_179_reg_618, ap_CS_fsm_state7, icmp_ln878_fu_443_p2, ap_CS_fsm_state9, zext_ln878_fu_438_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_split_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            data_split_V_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_1))) then 
            data_split_V_address0 <= data_split_V_addr_179_reg_618;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_0))) then 
            data_split_V_address0 <= zext_ln878_fu_438_p1(2 - 1 downto 0);
        else 
            data_split_V_address0 <= "XX";
        end if; 
    end process;


    data_split_V_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_split_V_address1 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            data_split_V_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            data_split_V_address1 <= "XX";
        end if; 
    end process;


    data_split_V_ce0_assign_proc : process(ap_CS_fsm_state7, icmp_ln878_fu_443_p2, ap_CS_fsm_state9, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_0)))) then 
            data_split_V_ce0 <= ap_const_logic_1;
        else 
            data_split_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_split_V_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            data_split_V_ce1 <= ap_const_logic_1;
        else 
            data_split_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_split_V_d0_assign_proc : process(tmp_361_reg_636, ap_CS_fsm_state7, icmp_ln878_fu_443_p2, trunc_ln674_fu_449_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
            if ((icmp_ln878_fu_443_p2 = ap_const_lv1_1)) then 
                data_split_V_d0 <= tmp_361_reg_636;
            elsif ((icmp_ln878_fu_443_p2 = ap_const_lv1_0)) then 
                data_split_V_d0 <= trunc_ln674_fu_449_p1;
            else 
                data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_split_V_we0_assign_proc : process(ap_CS_fsm_state7, icmp_ln878_fu_443_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln878_fu_443_p2 = ap_const_lv1_0)))) then 
            data_split_V_we0 <= ap_const_logic_1;
        else 
            data_split_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_391_p1 <= c7_V_reg_238(2 - 1 downto 0);

    fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_blk_n <= fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n;
        else 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_din_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_dout, fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n, fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n, ap_CS_fsm_state14, ap_CS_fsm_state16, local_D_V_q0)
    begin
        if (((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_din <= local_D_V_q0;
        elsif ((not(((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_din <= fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_dout;
        else 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_write_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n, fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_write <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_blk_n <= fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n;
        else 
            fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_read_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n, fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n, ap_CS_fsm_state14)
    begin
        if ((not(((fifo_D_drain_D_drain_IO_L1_out_2_0_x0181_full_n = ap_const_logic_0) or (fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_read <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L1_out_2_1_x0182_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_PE_0_2_x0149_blk_n_assign_proc : process(fifo_D_drain_PE_0_2_x0149_empty_n, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            fifo_D_drain_PE_0_2_x0149_blk_n <= fifo_D_drain_PE_0_2_x0149_empty_n;
        else 
            fifo_D_drain_PE_0_2_x0149_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_PE_0_2_x0149_read_assign_proc : process(fifo_D_drain_PE_0_2_x0149_empty_n, ap_CS_fsm_state6)
    begin
        if (((fifo_D_drain_PE_0_2_x0149_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fifo_D_drain_PE_0_2_x0149_read <= ap_const_logic_1;
        else 
            fifo_D_drain_PE_0_2_x0149_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln870_fu_491_p2 <= "1" when (c4_V_reg_280 = ap_const_lv3_0) else "0";
    icmp_ln878_fu_443_p2 <= "1" when (n_V_reg_260 = ap_const_lv3_4) else "0";
    icmp_ln890_990_fu_353_p2 <= "1" when (c1_V_reg_227 = ap_const_lv3_6) else "0";
    icmp_ln890_991_fu_373_p2 <= "1" when (unsigned(ret_fu_367_p2) < unsigned(ap_const_lv6_2A)) else "0";
    icmp_ln890_992_fu_385_p2 <= "1" when (c7_V_reg_238 = ap_const_lv4_8) else "0";
    icmp_ln890_993_fu_485_p2 <= "1" when (c4_V_reg_280 = ap_const_lv3_4) else "0";
    icmp_ln890_994_fu_426_p2 <= "1" when (c8_V_reg_249 = ap_const_lv5_10) else "0";
    icmp_ln890_995_fu_521_p2 <= "1" when (c5_V_reg_302 = ap_const_lv5_10) else "0";
    icmp_ln890_996_fu_503_p2 <= "1" when (c5_V_50_reg_291 = ap_const_lv5_10) else "0";
    icmp_ln890_997_fu_559_p2 <= "1" when (c6_V_reg_324 = ap_const_lv2_2) else "0";
    icmp_ln890_998_fu_533_p2 <= "1" when (c6_V_114_reg_313 = ap_const_lv2_2) else "0";
    icmp_ln890_fu_341_p2 <= "1" when (c0_V_reg_216 = ap_const_lv3_4) else "0";
    idxprom_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_391_p1),64));

    local_D_V_address0_assign_proc : process(ap_CS_fsm_state5, local_D_V_addr_reg_628, ap_CS_fsm_state15, ap_CS_fsm_state10, zext_ln9832_fu_421_p1, zext_ln9858_1_fu_554_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            local_D_V_address0 <= zext_ln9858_1_fu_554_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            local_D_V_address0 <= local_D_V_addr_reg_628;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            local_D_V_address0 <= zext_ln9832_fu_421_p1(5 - 1 downto 0);
        else 
            local_D_V_address0 <= "XXXXX";
        end if; 
    end process;


    local_D_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            local_D_V_ce0 <= ap_const_logic_1;
        else 
            local_D_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_D_V_d0 <= (((data_split_V_q1 & data_split_V_q0) & v2_V_1751_reg_664) & v2_V_reg_659);

    local_D_V_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            local_D_V_we0 <= ap_const_logic_1;
        else 
            local_D_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_fu_454_p4 <= p_Val2_s_reg_271(127 downto 32);
    ret_168_fu_359_p3 <= (c1_V_reg_227 & ap_const_lv3_0);
    ret_fu_367_p2 <= (ret_168_fu_359_p3 or ap_const_lv6_2);
    shl_ln890_fu_515_p2 <= std_logic_vector(shift_left(unsigned(c5_V_reg_302),to_integer(unsigned('0' & ap_const_lv5_1(5-1 downto 0)))));
    tmp_s_fu_414_p3 <= (c8_V_reg_249 & tmp_reg_613);
    trunc_ln674_fu_449_p1 <= p_Val2_s_reg_271(32 - 1 downto 0);
    zext_ln1497_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_454_p4),128));
    zext_ln878_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_reg_260),64));
    zext_ln9832_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_414_p3),64));
    zext_ln9858_1_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9858_fu_549_p2),64));
    zext_ln9858_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c6_V_reg_324),5));
end behav;
