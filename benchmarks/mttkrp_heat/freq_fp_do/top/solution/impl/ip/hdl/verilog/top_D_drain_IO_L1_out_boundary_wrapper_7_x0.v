// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_D_drain_IO_L1_out_boundary_wrapper_7_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din,
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n,
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_write,
        fifo_D_drain_PE_3_7_x0172_dout,
        fifo_D_drain_PE_3_7_x0172_empty_n,
        fifo_D_drain_PE_3_7_x0172_read
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_pp0_stage0 = 11'd4;
parameter    ap_ST_fsm_pp0_stage1 = 11'd8;
parameter    ap_ST_fsm_pp0_stage2 = 11'd16;
parameter    ap_ST_fsm_pp0_stage3 = 11'd32;
parameter    ap_ST_fsm_pp0_stage4 = 11'd64;
parameter    ap_ST_fsm_state10 = 11'd128;
parameter    ap_ST_fsm_pp1_stage0 = 11'd256;
parameter    ap_ST_fsm_pp1_stage1 = 11'd512;
parameter    ap_ST_fsm_state14 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [127:0] fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din;
input   fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n;
output   fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_write;
input  [31:0] fifo_D_drain_PE_3_7_x0172_dout;
input   fifo_D_drain_PE_3_7_x0172_empty_n;
output   fifo_D_drain_PE_3_7_x0172_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[127:0] fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din;
reg fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_write;
reg fifo_D_drain_PE_3_7_x0172_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_blk_n;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln890_948_reg_597;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    fifo_D_drain_PE_3_7_x0172_blk_n;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage3;
reg   [0:0] icmp_ln890_946_reg_542;
reg   [7:0] indvar_flatten_reg_241;
reg   [3:0] c7_V_reg_252;
reg   [4:0] c8_V_reg_263;
reg   [4:0] c5_V_reg_274;
wire   [4:0] add_ln890_58_fu_285_p2;
reg   [4:0] add_ln890_58_reg_519;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_291_p2;
wire   [2:0] select_ln11503_fu_303_p3;
reg   [2:0] select_ln11503_reg_528;
wire   [0:0] icmp_ln890_945_fu_325_p2;
wire   [7:0] add_ln890_fu_331_p2;
reg   [7:0] add_ln890_reg_537;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_946_fu_337_p2;
reg   [0:0] icmp_ln890_946_reg_542_pp0_iter1_reg;
wire   [4:0] select_ln890_fu_355_p3;
reg   [4:0] select_ln890_reg_546;
wire   [3:0] select_ln890_26_fu_363_p3;
reg   [3:0] select_ln890_26_reg_551;
wire   [1:0] trunc_ln890_fu_379_p1;
reg   [1:0] trunc_ln890_reg_556;
reg   [4:0] local_D_V_addr_reg_561;
reg   [4:0] local_D_V_addr_reg_561_pp0_iter1_reg;
reg   [31:0] p_Result_2_reg_567;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] p_Result_3_reg_572;
wire   [4:0] add_ln691_1038_fu_436_p2;
reg   [4:0] add_ln691_1038_reg_577;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] data_split_V_q0;
reg   [31:0] v2_V_reg_582;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] data_split_V_q1;
reg   [31:0] v2_V_1807_reg_587;
wire   [4:0] add_ln691_1039_fu_452_p2;
reg   [4:0] add_ln691_1039_reg_592;
wire    ap_block_state11_pp1_stage0_iter0;
reg    ap_block_state13_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_948_fu_458_p2;
wire   [127:0] local_D_V_q0;
reg   [127:0] local_D_V_load_1_reg_611;
reg    ap_block_state12_pp1_stage1_iter0;
reg    ap_block_pp1_stage1_11001;
wire   [2:0] add_ln691_1040_fu_492_p2;
wire    ap_CS_fsm_state14;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state10;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_block_pp1_stage1_subdone;
reg   [4:0] local_D_V_address0;
reg    local_D_V_ce0;
reg   [4:0] local_D_V_address1;
reg    local_D_V_ce1;
reg    local_D_V_we1;
wire   [127:0] local_D_V_d1;
wire   [127:0] local_D_V_q1;
reg   [1:0] data_split_V_address0;
reg    data_split_V_ce0;
reg    data_split_V_we0;
reg   [31:0] data_split_V_d0;
reg   [1:0] data_split_V_address1;
reg    data_split_V_ce1;
reg    data_split_V_we1;
reg   [31:0] data_split_V_d1;
reg   [4:0] indvar_flatten8_reg_219;
reg    ap_block_state1;
reg   [2:0] c1_V_reg_230;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_245_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_c7_V_phi_fu_256_p4;
reg   [4:0] ap_phi_mux_c8_V_phi_fu_267_p4;
reg   [4:0] ap_phi_mux_c5_V_phi_fu_278_p4;
wire   [63:0] zext_ln11521_fu_391_p1;
wire   [63:0] zext_ln890_fu_432_p1;
wire   [63:0] zext_ln11547_fu_472_p1;
wire   [63:0] tmp_76_fu_483_p3;
reg    ap_block_state6_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage0_01001;
wire    ap_block_pp0_stage1;
wire   [31:0] trunc_ln674_fu_396_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage4;
wire   [0:0] icmp_ln89057_fu_297_p2;
wire   [5:0] ret_172_fu_311_p3;
wire   [5:0] ret_fu_319_p2;
wire   [0:0] icmp_ln890_947_fu_349_p2;
wire   [3:0] add_ln691_fu_343_p2;
wire   [0:0] tmp_402_fu_371_p3;
wire   [5:0] tmp_s_fu_383_p3;
wire   [5:0] tmp_fu_464_p3;
wire   [5:0] or_ln11547_fu_477_p2;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_346;
reg    ap_condition_351;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

top_D_drain_IO_L1_out_boundary_wrapper_0_x0_local_D_V #(
    .DataWidth( 128 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
local_D_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_D_V_address0),
    .ce0(local_D_V_ce0),
    .q0(local_D_V_q0),
    .address1(local_D_V_address1),
    .ce1(local_D_V_ce1),
    .we1(local_D_V_we1),
    .d1(local_D_V_d1),
    .q1(local_D_V_q1)
);

top_D_drain_IO_L1_out_boundary_wrapper_0_x0_data_split_V #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_address0),
    .ce0(data_split_V_ce0),
    .we0(data_split_V_we0),
    .d0(data_split_V_d0),
    .q0(data_split_V_q0),
    .address1(data_split_V_address1),
    .ce1(data_split_V_ce1),
    .we1(data_split_V_we1),
    .d1(data_split_V_d1),
    .q1(data_split_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_291_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_945_fu_325_p2 == 1'd1) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_945_fu_325_p2 == 1'd1) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state11))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        c1_V_reg_230 <= add_ln691_1040_fu_492_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c1_V_reg_230 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        c5_V_reg_274 <= 5'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c5_V_reg_274 <= add_ln691_1039_reg_592;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_945_fu_325_p2 == 1'd1) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
        c7_V_reg_252 <= 4'd0;
    end else if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        c7_V_reg_252 <= select_ln890_26_reg_551;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_945_fu_325_p2 == 1'd1) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
        c8_V_reg_263 <= 5'd0;
    end else if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        c8_V_reg_263 <= add_ln691_1038_reg_577;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvar_flatten8_reg_219 <= add_ln890_58_reg_519;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten8_reg_219 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_945_fu_325_p2 == 1'd1) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
        indvar_flatten_reg_241 <= 8'd0;
    end else if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_241 <= add_ln890_reg_537;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln691_1038_reg_577 <= add_ln691_1038_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln691_1039_reg_592 <= add_ln691_1039_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_58_reg_519 <= add_ln890_58_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln890_reg_537 <= add_ln890_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_946_reg_542 <= icmp_ln890_946_fu_337_p2;
        icmp_ln890_946_reg_542_pp0_iter1_reg <= icmp_ln890_946_reg_542;
        local_D_V_addr_reg_561_pp0_iter1_reg <= local_D_V_addr_reg_561;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_948_reg_597 <= icmp_ln890_948_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_946_fu_337_p2 == 1'd0))) begin
        local_D_V_addr_reg_561 <= zext_ln11521_fu_391_p1;
        select_ln890_reg_546 <= select_ln890_fu_355_p3;
        trunc_ln890_reg_556 <= trunc_ln890_fu_379_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        local_D_V_load_1_reg_611 <= local_D_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_2_reg_567 <= {{local_D_V_q0[95:64]}};
        p_Result_3_reg_572 <= {{local_D_V_q0[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
        select_ln11503_reg_528 <= select_ln11503_fu_303_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_946_fu_337_p2 == 1'd0))) begin
        select_ln890_26_reg_551 <= select_ln890_26_fu_363_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v2_V_1807_reg_587 <= data_split_V_q1;
        v2_V_reg_582 <= data_split_V_q0;
    end
end

always @ (*) begin
    if ((icmp_ln890_946_fu_337_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_948_fu_458_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_291_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c5_V_phi_fu_278_p4 = add_ln691_1039_reg_592;
    end else begin
        ap_phi_mux_c5_V_phi_fu_278_p4 = c5_V_reg_274;
    end
end

always @ (*) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_c7_V_phi_fu_256_p4 = select_ln890_26_reg_551;
    end else begin
        ap_phi_mux_c7_V_phi_fu_256_p4 = c7_V_reg_252;
    end
end

always @ (*) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_c8_V_phi_fu_267_p4 = add_ln691_1038_reg_577;
    end else begin
        ap_phi_mux_c8_V_phi_fu_267_p4 = c8_V_reg_263;
    end
end

always @ (*) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_245_p4 = add_ln890_reg_537;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_245_p4 = indvar_flatten_reg_241;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_291_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        data_split_V_address0 = 64'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        data_split_V_address0 = zext_ln890_fu_432_p1;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        data_split_V_address0 = 64'd3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_split_V_address0 = 64'd1;
    end else begin
        data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        data_split_V_address1 = 64'd1;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        data_split_V_address1 = 64'd2;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_split_V_address1 = 64'd0;
    end else begin
        data_split_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        data_split_V_ce0 = 1'b1;
    end else begin
        data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        data_split_V_ce1 = 1'b1;
    end else begin
        data_split_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_split_V_d0 = fifo_D_drain_PE_3_7_x0172_dout;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_split_V_d0 = p_Result_3_reg_572;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_split_V_d0 = {{local_D_V_q0[63:32]}};
        end else begin
            data_split_V_d0 = 'bx;
        end
    end else begin
        data_split_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_split_V_d1 = p_Result_2_reg_567;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_split_V_d1 = trunc_ln674_fu_396_p1;
        end else begin
            data_split_V_d1 = 'bx;
        end
    end else begin
        data_split_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_split_V_we0 = 1'b1;
    end else begin
        data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_split_V_we1 = 1'b1;
    end else begin
        data_split_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_blk_n = fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln890_948_reg_597 == 1'd0)) begin
        if ((1'b1 == ap_condition_351)) begin
            fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din = local_D_V_load_1_reg_611;
        end else if ((1'b1 == ap_condition_346)) begin
            fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din = local_D_V_q1;
        end else begin
            fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din = 'bx;
        end
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln890_948_reg_597 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_write = 1'b1;
    end else begin
        fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        fifo_D_drain_PE_3_7_x0172_blk_n = fifo_D_drain_PE_3_7_x0172_empty_n;
    end else begin
        fifo_D_drain_PE_3_7_x0172_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        fifo_D_drain_PE_3_7_x0172_read = 1'b1;
    end else begin
        fifo_D_drain_PE_3_7_x0172_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_D_V_address0 = tmp_76_fu_483_p3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_D_V_address0 = zext_ln11521_fu_391_p1;
    end else begin
        local_D_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_D_V_address1 = zext_ln11547_fu_472_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        local_D_V_address1 = local_D_V_addr_reg_561_pp0_iter1_reg;
    end else begin
        local_D_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        local_D_V_ce0 = 1'b1;
    end else begin
        local_D_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        local_D_V_ce1 = 1'b1;
    end else begin
        local_D_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln890_946_reg_542_pp0_iter1_reg == 1'd0))) begin
        local_D_V_we1 = 1'b1;
    end else begin
        local_D_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_291_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_945_fu_325_p2 == 1'd1) & (icmp_ln890_fu_291_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_946_fu_337_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_946_fu_337_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln890_948_fu_458_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln890_948_fu_458_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_1038_fu_436_p2 = (select_ln890_reg_546 + 5'd1);

assign add_ln691_1039_fu_452_p2 = (ap_phi_mux_c5_V_phi_fu_278_p4 + 5'd1);

assign add_ln691_1040_fu_492_p2 = (select_ln11503_reg_528 + 3'd1);

assign add_ln691_fu_343_p2 = (ap_phi_mux_c7_V_phi_fu_256_p4 + 4'd1);

assign add_ln890_58_fu_285_p2 = (indvar_flatten8_reg_219 + 5'd1);

assign add_ln890_fu_331_p2 = (ap_phi_mux_indvar_flatten_phi_fu_245_p4 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (fifo_D_drain_PE_3_7_x0172_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((icmp_ln890_946_reg_542 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (fifo_D_drain_PE_3_7_x0172_empty_n == 1'b0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln890_948_reg_597 == 1'd0) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((icmp_ln890_948_reg_597 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((icmp_ln890_948_reg_597 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((icmp_ln890_948_reg_597 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp1_stage1_iter0 = ((icmp_ln890_948_reg_597 == 1'd0) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp1_stage0_iter1 = ((icmp_ln890_948_reg_597 == 1'd0) & (fifo_D_drain_D_drain_IO_L1_out_7_3_x0204_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage3_iter0 = ((icmp_ln890_946_reg_542 == 1'd0) & (fifo_D_drain_PE_3_7_x0172_empty_n == 1'b0));
end

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_346 = ((1'b0 == ap_block_pp1_stage1_01001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1));
end

always @ (*) begin
    ap_condition_351 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign icmp_ln89057_fu_297_p2 = ((c1_V_reg_230 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln890_945_fu_325_p2 = ((ret_fu_319_p2 < 6'd42) ? 1'b1 : 1'b0);

assign icmp_ln890_946_fu_337_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_245_p4 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln890_947_fu_349_p2 = ((ap_phi_mux_c8_V_phi_fu_267_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_948_fu_458_p2 = ((ap_phi_mux_c5_V_phi_fu_278_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_291_p2 = ((indvar_flatten8_reg_219 == 5'd24) ? 1'b1 : 1'b0);

assign local_D_V_d1 = {{{{data_split_V_q0}, {data_split_V_q1}}, {v2_V_1807_reg_587}}, {v2_V_reg_582}};

assign or_ln11547_fu_477_p2 = (tmp_fu_464_p3 | 6'd1);

assign ret_172_fu_311_p3 = {{select_ln11503_fu_303_p3}, {3'd0}};

assign ret_fu_319_p2 = (ret_172_fu_311_p3 | 6'd6);

assign select_ln11503_fu_303_p3 = ((icmp_ln89057_fu_297_p2[0:0] == 1'b1) ? 3'd0 : c1_V_reg_230);

assign select_ln890_26_fu_363_p3 = ((icmp_ln890_947_fu_349_p2[0:0] == 1'b1) ? add_ln691_fu_343_p2 : ap_phi_mux_c7_V_phi_fu_256_p4);

assign select_ln890_fu_355_p3 = ((icmp_ln890_947_fu_349_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_c8_V_phi_fu_267_p4);

assign tmp_402_fu_371_p3 = select_ln890_26_fu_363_p3[32'd2];

assign tmp_76_fu_483_p3 = {{58'd0}, {or_ln11547_fu_477_p2}};

assign tmp_fu_464_p3 = {{ap_phi_mux_c5_V_phi_fu_278_p4}, {1'd0}};

assign tmp_s_fu_383_p3 = {{select_ln890_fu_355_p3}, {tmp_402_fu_371_p3}};

assign trunc_ln674_fu_396_p1 = local_D_V_q0[31:0];

assign trunc_ln890_fu_379_p1 = select_ln890_26_fu_363_p3[1:0];

assign zext_ln11521_fu_391_p1 = tmp_s_fu_383_p3;

assign zext_ln11547_fu_472_p1 = tmp_fu_464_p3;

assign zext_ln890_fu_432_p1 = trunc_ln890_reg_556;

endmodule //top_D_drain_IO_L1_out_boundary_wrapper_7_x0
