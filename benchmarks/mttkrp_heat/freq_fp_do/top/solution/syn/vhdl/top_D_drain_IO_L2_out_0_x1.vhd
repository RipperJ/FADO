-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_D_drain_IO_L2_out_0_x1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_1_x1206_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_1_x1206_read : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_0_x1205_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L2_out_0_x1205_write : OUT STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n : IN STD_LOGIC;
    fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_read : OUT STD_LOGIC );
end;


architecture behav of top_D_drain_IO_L2_out_0_x1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_D_drain_D_drain_IO_L2_out_1_x1206_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln890_590_reg_307 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_D_drain_D_drain_IO_L2_out_0_x1205_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln890_589_reg_316 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_blk_n : STD_LOGIC;
    signal indvar_flatten31_reg_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten11_reg_155 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln890_fu_166_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln890_reg_262 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln25742_fu_184_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln25742_reg_270 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln890_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_i_i100_cast_fu_200_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_i_i100_cast_reg_275 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln25746_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal c3_15_fu_212_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c3_15_reg_284 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln886_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25751_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_fu_233_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln890_30_fu_238_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln890_590_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln890_29_fu_250_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln890_589_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state7 : STD_LOGIC;
    signal indvar_flatten39_reg_111 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c1_V_reg_122 : STD_LOGIC_VECTOR (2 downto 0);
    signal c3_reg_133 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln89044_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl_fu_192_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln886_fu_218_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln890_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_0) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_0) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_1) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state7);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_1) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c1_V_reg_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln25746_fu_206_p2 = ap_const_lv1_1) or (icmp_ln886_fu_222_p2 = ap_const_lv1_1)))) then 
                c1_V_reg_122 <= add_ln691_fu_233_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c1_V_reg_122 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    c3_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                c3_reg_133 <= c3_15_reg_284;
            elsif (((icmp_ln890_fu_172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c3_reg_133 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_1) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then 
                indvar_flatten11_reg_155 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_589_fu_256_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten11_reg_155 <= add_ln890_29_fu_250_p2;
            end if; 
        end if;
    end process;

    indvar_flatten31_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_0) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then 
                indvar_flatten31_reg_144 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_590_fu_244_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten31_reg_144 <= add_ln890_30_fu_238_p2;
            end if; 
        end if;
    end process;

    indvar_flatten39_reg_111_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln25746_fu_206_p2 = ap_const_lv1_1) or (icmp_ln886_fu_222_p2 = ap_const_lv1_1)))) then 
                indvar_flatten39_reg_111 <= add_ln890_reg_262;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten39_reg_111 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_fu_172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    add_i_i100_cast_reg_275(5 downto 3) <= add_i_i100_cast_fu_200_p2(5 downto 3);
                select_ln25742_reg_270 <= select_ln25742_fu_184_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln890_reg_262 <= add_ln890_fu_166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                c3_15_reg_284 <= c3_15_fu_212_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln890_589_reg_316 <= icmp_ln890_589_fu_256_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln890_590_reg_307 <= icmp_ln890_590_fu_244_p2;
            end if;
        end if;
    end process;
    add_i_i100_cast_reg_275(2 downto 0) <= "001";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln890_fu_172_p2, icmp_ln25746_fu_206_p2, ap_CS_fsm_state3, icmp_ln886_fu_222_p2, icmp_ln25751_fu_227_p2, ap_enable_reg_pp0_iter0, icmp_ln890_590_fu_244_p2, ap_enable_reg_pp1_iter0, icmp_ln890_589_fu_256_p2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln890_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln25746_fu_206_p2 = ap_const_lv1_1) or (icmp_ln886_fu_222_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln25746_fu_206_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln25751_fu_227_p2 = ap_const_lv1_1) and (icmp_ln886_fu_222_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln890_590_fu_244_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln890_590_fu_244_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln890_589_fu_256_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln890_589_fu_256_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_i_i100_cast_fu_200_p2 <= std_logic_vector(signed(ap_const_lv6_29) - signed(p_shl_fu_192_p3));
    add_ln691_fu_233_p2 <= std_logic_vector(unsigned(select_ln25742_reg_270) + unsigned(ap_const_lv3_1));
    add_ln890_29_fu_250_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_155) + unsigned(ap_const_lv8_1));
    add_ln890_30_fu_238_p2 <= std_logic_vector(unsigned(indvar_flatten31_reg_144) + unsigned(ap_const_lv8_1));
    add_ln890_fu_166_p2 <= std_logic_vector(unsigned(indvar_flatten39_reg_111) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n, fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, ap_enable_reg_pp0_iter1, icmp_ln890_590_reg_307)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0)) or ((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n, fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, ap_enable_reg_pp0_iter1, icmp_ln890_590_reg_307)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0)) or ((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n, fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, ap_enable_reg_pp0_iter1, icmp_ln890_590_reg_307)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0)) or ((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n, ap_enable_reg_pp1_iter1, icmp_ln890_589_reg_316)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n = ap_const_logic_0)) or ((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n, ap_enable_reg_pp1_iter1, icmp_ln890_589_reg_316)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n = ap_const_logic_0)) or ((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n, ap_enable_reg_pp1_iter1, icmp_ln890_589_reg_316)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n = ap_const_logic_0)) or ((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n, fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, icmp_ln890_590_reg_307)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0)) or ((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp1_stage0_iter1_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n, icmp_ln890_589_reg_316)
    begin
                ap_block_state8_pp1_stage0_iter1 <= (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n = ap_const_logic_0)) or ((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln890_590_fu_244_p2)
    begin
        if ((icmp_ln890_590_fu_244_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state7_assign_proc : process(icmp_ln890_589_fu_256_p2)
    begin
        if ((icmp_ln890_589_fu_256_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln890_fu_172_p2)
    begin
        if (((icmp_ln890_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln890_fu_172_p2)
    begin
        if (((icmp_ln890_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c3_15_fu_212_p2 <= std_logic_vector(unsigned(c3_reg_133) + unsigned(ap_const_lv4_1));

    fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln890_589_reg_316)
    begin
        if (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_blk_n <= fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_empty_n;
        else 
            fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln890_589_reg_316, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_read <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_0_x1205_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_590_reg_307, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln890_589_reg_316)
    begin
        if ((((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_blk_n <= fifo_D_drain_D_drain_IO_L2_out_0_x1205_full_n;
        else 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_0_x1205_din_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_1_x1206_dout, fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln890_590_reg_307, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln890_589_reg_316, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001)
    begin
        if (((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_din <= fifo_D_drain_D_drain_IO_L1_out_0_0_x1173_dout;
        elsif (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_din <= fifo_D_drain_D_drain_IO_L2_out_1_x1206_dout;
        else 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_0_x1205_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln890_590_reg_307, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln890_589_reg_316, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln890_589_reg_316 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_write <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L2_out_0_x1205_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_1_x1206_blk_n_assign_proc : process(fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_590_reg_307)
    begin
        if (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_D_drain_D_drain_IO_L2_out_1_x1206_blk_n <= fifo_D_drain_D_drain_IO_L2_out_1_x1206_empty_n;
        else 
            fifo_D_drain_D_drain_IO_L2_out_1_x1206_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_D_drain_D_drain_IO_L2_out_1_x1206_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln890_590_reg_307, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln890_590_reg_307 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_D_drain_D_drain_IO_L2_out_1_x1206_read <= ap_const_logic_1;
        else 
            fifo_D_drain_D_drain_IO_L2_out_1_x1206_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln25746_fu_206_p2 <= "1" when (c3_reg_133 = ap_const_lv4_8) else "0";
    icmp_ln25751_fu_227_p2 <= "1" when (c3_reg_133 = ap_const_lv4_0) else "0";
    icmp_ln886_fu_222_p2 <= "1" when (unsigned(zext_ln886_fu_218_p1) > unsigned(add_i_i100_cast_reg_275)) else "0";
    icmp_ln89044_fu_178_p2 <= "1" when (c1_V_reg_122 = ap_const_lv3_6) else "0";
    icmp_ln890_589_fu_256_p2 <= "1" when (indvar_flatten11_reg_155 = ap_const_lv8_80) else "0";
    icmp_ln890_590_fu_244_p2 <= "1" when (indvar_flatten31_reg_144 = ap_const_lv8_80) else "0";
    icmp_ln890_fu_172_p2 <= "1" when (indvar_flatten39_reg_111 = ap_const_lv5_18) else "0";
    p_shl_fu_192_p3 <= (select_ln25742_fu_184_p3 & ap_const_lv3_0);
    select_ln25742_fu_184_p3 <= 
        ap_const_lv3_0 when (icmp_ln89044_fu_178_p2(0) = '1') else 
        c1_V_reg_122;
    zext_ln886_fu_218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c3_reg_133),6));
end behav;
