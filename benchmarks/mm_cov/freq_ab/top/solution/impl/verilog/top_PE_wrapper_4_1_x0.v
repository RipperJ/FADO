// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_PE_wrapper_4_1_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_PE_4_1_x057_dout,
        fifo_A_PE_4_1_x057_empty_n,
        fifo_A_PE_4_1_x057_read,
        fifo_A_PE_4_2_x058_din,
        fifo_A_PE_4_2_x058_full_n,
        fifo_A_PE_4_2_x058_write,
        fifo_B_PE_4_1_x0105_dout,
        fifo_B_PE_4_1_x0105_empty_n,
        fifo_B_PE_4_1_x0105_read,
        fifo_B_PE_5_1_x0106_din,
        fifo_B_PE_5_1_x0106_full_n,
        fifo_B_PE_5_1_x0106_write,
        fifo_C_drain_PE_4_1_x0176_din,
        fifo_C_drain_PE_4_1_x0176_full_n,
        fifo_C_drain_PE_4_1_x0176_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state11 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_A_PE_4_1_x057_dout;
input   fifo_A_PE_4_1_x057_empty_n;
output   fifo_A_PE_4_1_x057_read;
output  [511:0] fifo_A_PE_4_2_x058_din;
input   fifo_A_PE_4_2_x058_full_n;
output   fifo_A_PE_4_2_x058_write;
input  [511:0] fifo_B_PE_4_1_x0105_dout;
input   fifo_B_PE_4_1_x0105_empty_n;
output   fifo_B_PE_4_1_x0105_read;
output  [511:0] fifo_B_PE_5_1_x0106_din;
input   fifo_B_PE_5_1_x0106_full_n;
output   fifo_B_PE_5_1_x0106_write;
output  [15:0] fifo_C_drain_PE_4_1_x0176_din;
input   fifo_C_drain_PE_4_1_x0176_full_n;
output   fifo_C_drain_PE_4_1_x0176_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_PE_4_1_x057_read;
reg fifo_A_PE_4_2_x058_write;
reg fifo_B_PE_4_1_x0105_read;
reg fifo_B_PE_5_1_x0106_write;
reg fifo_C_drain_PE_4_1_x0176_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_PE_4_1_x057_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_reg_1577;
reg    fifo_A_PE_4_2_x058_blk_n;
reg    fifo_B_PE_4_1_x0105_blk_n;
reg    fifo_B_PE_5_1_x0106_blk_n;
reg    fifo_C_drain_PE_4_1_x0176_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] select_ln7586_2_reg_2053;
reg   [0:0] select_ln7586_2_reg_2053_pp0_iter7_reg;
reg   [19:0] indvar_flatten73_reg_283;
reg   [16:0] indvar_flatten39_reg_294;
reg   [12:0] indvar_flatten13_reg_305;
reg   [7:0] indvar_flatten_reg_316;
reg   [3:0] c6_V_reg_327;
reg   [3:0] c7_V_reg_338;
reg   [5:0] c2_V_reg_349;
wire   [19:0] add_ln890_93_fu_360_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
reg    ap_block_state10_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_fu_366_p2;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter1_reg;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter2_reg;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter3_reg;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter4_reg;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter5_reg;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter6_reg;
reg   [0:0] icmp_ln890_reg_1577_pp0_iter7_reg;
wire  signed [15:0] v2_V_3721_fu_372_p1;
reg  signed [15:0] v2_V_3721_reg_1581;
reg  signed [15:0] v2_V_3721_reg_1581_pp0_iter2_reg;
reg  signed [15:0] v2_V_3721_reg_1581_pp0_iter3_reg;
reg  signed [15:0] v2_V_3722_reg_1586;
reg  signed [15:0] v2_V_3724_reg_1596;
reg  signed [15:0] v2_V_3726_reg_1606;
reg  signed [15:0] v2_V_3728_reg_1616;
reg  signed [15:0] v2_V_3730_reg_1626;
reg  signed [15:0] v2_V_3732_reg_1636;
reg  signed [15:0] v2_V_3735_reg_1651;
reg  signed [15:0] v2_V_3735_reg_1651_pp0_iter2_reg;
reg  signed [15:0] v2_V_3736_reg_1656;
reg  signed [15:0] v2_V_3738_reg_1666;
reg  signed [15:0] v2_V_3740_reg_1676;
reg  signed [15:0] v2_V_3742_reg_1686;
reg  signed [15:0] v2_V_3744_reg_1696;
reg  signed [15:0] v2_V_3746_reg_1706;
reg  signed [15:0] v2_V_3748_reg_1716;
reg  signed [15:0] v2_V_3751_reg_1731;
reg  signed [15:0] v1_V_31_reg_1736;
wire  signed [15:0] v2_V_fu_686_p1;
reg  signed [15:0] v2_V_reg_1741;
reg  signed [15:0] v2_V_reg_1741_pp0_iter2_reg;
reg  signed [15:0] v2_V_reg_1741_pp0_iter3_reg;
reg  signed [15:0] v2_V_3691_reg_1746;
reg  signed [15:0] v2_V_3693_reg_1756;
reg  signed [15:0] v2_V_3695_reg_1766;
reg  signed [15:0] v2_V_3697_reg_1776;
reg  signed [15:0] v2_V_3699_reg_1786;
reg  signed [15:0] v2_V_3701_reg_1796;
reg  signed [15:0] v2_V_3704_reg_1811;
reg  signed [15:0] v2_V_3704_reg_1811_pp0_iter2_reg;
reg  signed [15:0] v2_V_3705_reg_1816;
reg  signed [15:0] v2_V_3707_reg_1826;
reg  signed [15:0] v2_V_3709_reg_1836;
reg  signed [15:0] v2_V_3711_reg_1846;
reg  signed [15:0] v2_V_3713_reg_1856;
reg  signed [15:0] v2_V_3715_reg_1866;
reg  signed [15:0] v2_V_3717_reg_1876;
reg  signed [15:0] v2_V_3720_reg_1891;
reg  signed [15:0] v1_V_reg_1896;
wire   [0:0] icmp_ln890_91_fu_1000_p2;
reg   [0:0] icmp_ln890_91_reg_1901;
reg   [0:0] icmp_ln890_91_reg_1901_pp0_iter4_reg;
reg   [0:0] icmp_ln890_91_reg_1901_pp0_iter5_reg;
wire   [16:0] select_ln890_155_fu_1012_p3;
reg    ap_enable_reg_pp0_iter3;
wire   [0:0] xor_ln7584_fu_1020_p2;
reg   [0:0] xor_ln7584_reg_1915;
wire   [0:0] and_ln7584_3_fu_1055_p2;
reg   [0:0] and_ln7584_3_reg_1920;
reg   [0:0] and_ln7584_3_reg_1920_pp0_iter5_reg;
wire   [0:0] or_ln7585_fu_1061_p2;
reg   [0:0] or_ln7585_reg_1925;
wire   [0:0] or_ln7585_2_fu_1072_p2;
reg   [0:0] or_ln7585_2_reg_1930;
wire   [0:0] and_ln7585_2_fu_1083_p2;
reg   [0:0] and_ln7585_2_reg_1935;
reg   [0:0] and_ln7585_2_reg_1935_pp0_iter5_reg;
wire   [3:0] select_ln890_152_fu_1146_p3;
reg   [3:0] select_ln890_152_reg_1942;
reg    ap_enable_reg_pp0_iter4;
wire   [2:0] empty_fu_1154_p1;
reg   [2:0] empty_reg_1948;
wire  signed [15:0] grp_fu_1368_p2;
wire  signed [15:0] grp_fu_1374_p2;
wire  signed [15:0] grp_fu_1380_p2;
wire  signed [15:0] grp_fu_1386_p2;
wire  signed [15:0] grp_fu_1392_p2;
wire  signed [15:0] grp_fu_1398_p2;
wire  signed [15:0] grp_fu_1404_p2;
wire  signed [15:0] grp_fu_1410_p2;
wire  signed [15:0] grp_fu_1416_p2;
wire  signed [15:0] grp_fu_1422_p2;
wire  signed [15:0] grp_fu_1428_p2;
wire  signed [15:0] grp_fu_1434_p2;
wire  signed [15:0] grp_fu_1440_p2;
wire  signed [15:0] grp_fu_1446_p2;
wire  signed [15:0] grp_fu_1452_p2;
wire   [3:0] add_ln691_65_fu_1158_p2;
wire   [7:0] select_ln890_153_fu_1170_p3;
wire   [12:0] select_ln890_154_fu_1184_p3;
wire   [0:0] cmp_i_i135998_fu_1192_p2;
reg   [0:0] cmp_i_i135998_reg_2043;
wire   [0:0] cmp_i_i1359_mid1_fu_1227_p2;
reg   [0:0] cmp_i_i1359_mid1_reg_2048;
wire   [0:0] select_ln7586_2_fu_1239_p3;
reg   [0:0] select_ln7586_2_reg_2053_pp0_iter6_reg;
wire   [5:0] select_ln890_fu_1246_p3;
reg    ap_enable_reg_pp0_iter5;
reg   [5:0] local_C_addr_reg_2062;
reg   [5:0] local_C_addr_reg_2062_pp0_iter6_reg;
reg   [5:0] local_C_addr_reg_2062_pp0_iter7_reg;
wire   [15:0] add_ln7627_6_fu_1282_p2;
reg   [15:0] add_ln7627_6_reg_2068;
reg   [15:0] add_ln7627_6_reg_2068_pp0_iter6_reg;
reg   [15:0] add_ln7627_6_reg_2068_pp0_iter7_reg;
wire   [15:0] add_ln7627_13_fu_1296_p2;
reg   [15:0] add_ln7627_13_reg_2073;
reg   [15:0] add_ln7627_13_reg_2073_pp0_iter6_reg;
reg   [15:0] add_ln7627_13_reg_2073_pp0_iter7_reg;
wire  signed [15:0] grp_fu_1458_p3;
reg  signed [15:0] add_ln7627_16_reg_2078;
reg  signed [15:0] add_ln7627_16_reg_2078_pp0_iter6_reg;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_20_fu_1302_p2;
reg   [15:0] add_ln7627_20_reg_2083;
reg   [15:0] add_ln7627_20_reg_2083_pp0_iter6_reg;
wire  signed [15:0] grp_fu_1478_p3;
reg  signed [15:0] add_ln7627_22_reg_2088;
wire  signed [15:0] grp_fu_1484_p3;
reg  signed [15:0] add_ln7627_23_reg_2093;
wire  signed [15:0] grp_fu_1490_p3;
reg  signed [15:0] add_ln7627_25_reg_2098;
wire  signed [15:0] grp_fu_1552_p3;
wire   [15:0] add_ln7627_29_fu_1337_p2;
reg   [15:0] add_ln7627_29_reg_2113;
wire   [15:0] add_ln7627_30_fu_1352_p2;
reg   [15:0] add_ln7627_30_reg_2118;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter6;
reg    ap_condition_pp0_exit_iter5_state7;
reg    ap_enable_reg_pp0_iter7;
wire   [5:0] local_C_address0;
reg    local_C_ce0;
wire   [15:0] local_C_q0;
reg    local_C_ce1;
reg    local_C_we1;
reg   [3:0] ap_phi_mux_c6_V_phi_fu_331_p4;
wire   [63:0] p_cast_fu_1269_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] add_ln7627_31_fu_1361_p2;
wire   [16:0] add_ln890_92_fu_1006_p2;
wire   [0:0] icmp_ln890101_fu_1025_p2;
wire   [0:0] icmp_ln890_92_fu_1037_p2;
wire   [0:0] icmp_ln890_93_fu_1049_p2;
wire   [0:0] xor_ln7585_fu_1066_p2;
wire   [0:0] and_ln7584_1_fu_1031_p2;
wire   [0:0] and_ln7584_2_fu_1043_p2;
wire   [0:0] or_ln7586_fu_1089_p2;
wire   [0:0] or_ln7586_1_fu_1095_p2;
wire   [0:0] and_ln7585_1_fu_1077_p2;
wire   [0:0] xor_ln7586_fu_1108_p2;
wire   [3:0] select_ln7586_fu_1100_p3;
wire   [0:0] and_ln7586_fu_1114_p2;
wire   [0:0] or_ln890_fu_1126_p2;
wire   [0:0] or_ln890_31_fu_1132_p2;
wire   [3:0] add_ln691_64_fu_1120_p2;
wire   [3:0] select_ln890_151_fu_1138_p3;
wire   [7:0] add_ln890_fu_1164_p2;
wire   [12:0] add_ln890_91_fu_1178_p2;
wire   [0:0] cmp_i_i97_fu_1198_p2;
wire   [0:0] and_ln7584_fu_1204_p2;
wire   [5:0] select_ln7585_fu_1209_p3;
wire   [5:0] add_ln691_fu_1221_p2;
wire   [0:0] cmp_i_i_mid1_fu_1233_p2;
wire   [0:0] and_ln7585_fu_1216_p2;
wire   [5:0] tmp_49_cast_fu_1256_p3;
wire   [5:0] zext_ln890_fu_1253_p1;
wire   [5:0] empty_1304_fu_1263_p2;
wire  signed [15:0] grp_fu_1538_p3;
wire  signed [15:0] grp_fu_1545_p3;
wire  signed [15:0] grp_fu_1531_p3;
wire  signed [15:0] grp_fu_1524_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_5_fu_1278_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_2_fu_1274_p2;
wire  signed [15:0] grp_fu_1503_p3;
wire  signed [15:0] grp_fu_1496_p3;
wire  signed [15:0] grp_fu_1517_p3;
wire  signed [15:0] grp_fu_1510_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_12_fu_1292_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_9_fu_1288_p2;
wire  signed [15:0] grp_fu_1471_p3;
wire  signed [15:0] grp_fu_1464_p3;
wire   [0:0] or_ln7584_fu_1306_p2;
wire   [0:0] or_ln7585_1_fu_1310_p2;
wire   [0:0] select_ln7586_1_fu_1315_p3;
wire  signed [15:0] grp_fu_1558_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_28_fu_1333_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_24_fu_1329_p2;
wire  signed [15:0] grp_fu_1565_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln7627_17_fu_1343_p2;
wire   [15:0] add_ln7627_21_fu_1347_p2;
wire   [15:0] add_ln7627_14_fu_1357_p2;
wire  signed [15:0] grp_fu_1368_p0;
wire  signed [15:0] grp_fu_1368_p1;
wire  signed [15:0] grp_fu_1374_p0;
wire  signed [15:0] grp_fu_1374_p1;
wire  signed [15:0] grp_fu_1380_p0;
wire  signed [15:0] grp_fu_1380_p1;
wire  signed [15:0] grp_fu_1386_p0;
wire  signed [15:0] grp_fu_1386_p1;
wire  signed [15:0] grp_fu_1392_p0;
wire  signed [15:0] grp_fu_1392_p1;
wire  signed [15:0] grp_fu_1398_p0;
wire  signed [15:0] grp_fu_1398_p1;
wire  signed [15:0] grp_fu_1404_p0;
wire  signed [15:0] grp_fu_1404_p1;
wire  signed [15:0] grp_fu_1410_p0;
wire  signed [15:0] grp_fu_1410_p1;
wire  signed [15:0] grp_fu_1416_p0;
wire  signed [15:0] grp_fu_1416_p1;
wire  signed [15:0] grp_fu_1422_p0;
wire  signed [15:0] grp_fu_1422_p1;
wire  signed [15:0] grp_fu_1428_p0;
wire  signed [15:0] grp_fu_1428_p1;
wire  signed [15:0] grp_fu_1434_p0;
wire  signed [15:0] grp_fu_1434_p1;
wire  signed [15:0] grp_fu_1440_p0;
wire  signed [15:0] grp_fu_1440_p1;
wire  signed [15:0] grp_fu_1446_p0;
wire  signed [15:0] grp_fu_1446_p1;
wire  signed [15:0] grp_fu_1452_p0;
wire  signed [15:0] grp_fu_1452_p1;
wire   [15:0] grp_fu_1565_p2;
reg    grp_fu_1368_ce;
reg    grp_fu_1374_ce;
reg    grp_fu_1380_ce;
reg    grp_fu_1386_ce;
reg    grp_fu_1392_ce;
reg    grp_fu_1398_ce;
reg    grp_fu_1404_ce;
reg    grp_fu_1410_ce;
reg    grp_fu_1416_ce;
reg    grp_fu_1422_ce;
reg    grp_fu_1428_ce;
reg    grp_fu_1434_ce;
reg    grp_fu_1440_ce;
reg    grp_fu_1446_ce;
reg    grp_fu_1452_ce;
reg    grp_fu_1458_ce;
reg    grp_fu_1464_ce;
reg    grp_fu_1471_ce;
reg    grp_fu_1478_ce;
reg    grp_fu_1484_ce;
reg    grp_fu_1490_ce;
reg    grp_fu_1496_ce;
reg    grp_fu_1503_ce;
reg    grp_fu_1510_ce;
reg    grp_fu_1517_ce;
reg    grp_fu_1524_ce;
reg    grp_fu_1531_ce;
reg    grp_fu_1538_ce;
reg    grp_fu_1545_ce;
reg    grp_fu_1552_ce;
reg    grp_fu_1558_ce;
reg    grp_fu_1565_ce;
wire    ap_CS_fsm_state11;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

top_PE_wrapper_0_0_x0_local_C #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_address0),
    .ce0(local_C_ce0),
    .q0(local_C_q0),
    .address1(local_C_addr_reg_2062_pp0_iter7_reg),
    .ce1(local_C_ce1),
    .we1(local_C_we1),
    .d1(add_ln7627_31_fu_1361_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1301(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1368_p0),
    .din1(grp_fu_1368_p1),
    .ce(grp_fu_1368_ce),
    .dout(grp_fu_1368_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1302(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1374_p0),
    .din1(grp_fu_1374_p1),
    .ce(grp_fu_1374_ce),
    .dout(grp_fu_1374_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1303(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1380_p0),
    .din1(grp_fu_1380_p1),
    .ce(grp_fu_1380_ce),
    .dout(grp_fu_1380_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1304(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1386_p0),
    .din1(grp_fu_1386_p1),
    .ce(grp_fu_1386_ce),
    .dout(grp_fu_1386_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1305(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1392_p0),
    .din1(grp_fu_1392_p1),
    .ce(grp_fu_1392_ce),
    .dout(grp_fu_1392_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1306(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1398_p0),
    .din1(grp_fu_1398_p1),
    .ce(grp_fu_1398_ce),
    .dout(grp_fu_1398_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1307(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1404_p0),
    .din1(grp_fu_1404_p1),
    .ce(grp_fu_1404_ce),
    .dout(grp_fu_1404_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1308(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1410_p0),
    .din1(grp_fu_1410_p1),
    .ce(grp_fu_1410_ce),
    .dout(grp_fu_1410_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1309(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1416_p0),
    .din1(grp_fu_1416_p1),
    .ce(grp_fu_1416_ce),
    .dout(grp_fu_1416_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1310(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1422_p0),
    .din1(grp_fu_1422_p1),
    .ce(grp_fu_1422_ce),
    .dout(grp_fu_1422_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1311(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1428_p0),
    .din1(grp_fu_1428_p1),
    .ce(grp_fu_1428_ce),
    .dout(grp_fu_1428_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1312(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1434_p0),
    .din1(grp_fu_1434_p1),
    .ce(grp_fu_1434_ce),
    .dout(grp_fu_1434_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1313(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1440_p0),
    .din1(grp_fu_1440_p1),
    .ce(grp_fu_1440_ce),
    .dout(grp_fu_1440_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1314(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1446_p0),
    .din1(grp_fu_1446_p1),
    .ce(grp_fu_1446_ce),
    .dout(grp_fu_1446_p2)
);

top_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U1315(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1452_p0),
    .din1(grp_fu_1452_p1),
    .ce(grp_fu_1452_ce),
    .dout(grp_fu_1452_p2)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1316(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3691_reg_1746),
    .din1(v2_V_3722_reg_1586),
    .din2(grp_fu_1368_p2),
    .ce(grp_fu_1458_ce),
    .dout(grp_fu_1458_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1317(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3693_reg_1756),
    .din1(v2_V_3724_reg_1596),
    .din2(grp_fu_1374_p2),
    .ce(grp_fu_1464_ce),
    .dout(grp_fu_1464_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1318(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3695_reg_1766),
    .din1(v2_V_3726_reg_1606),
    .din2(grp_fu_1380_p2),
    .ce(grp_fu_1471_ce),
    .dout(grp_fu_1471_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1319(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3697_reg_1776),
    .din1(v2_V_3728_reg_1616),
    .din2(grp_fu_1386_p2),
    .ce(grp_fu_1478_ce),
    .dout(grp_fu_1478_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1320(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3699_reg_1786),
    .din1(v2_V_3730_reg_1626),
    .din2(grp_fu_1392_p2),
    .ce(grp_fu_1484_ce),
    .dout(grp_fu_1484_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1321(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3701_reg_1796),
    .din1(v2_V_3732_reg_1636),
    .din2(grp_fu_1398_p2),
    .ce(grp_fu_1490_ce),
    .dout(grp_fu_1490_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1322(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3705_reg_1816),
    .din1(v2_V_3736_reg_1656),
    .din2(grp_fu_1410_p2),
    .ce(grp_fu_1496_ce),
    .dout(grp_fu_1496_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1323(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3707_reg_1826),
    .din1(v2_V_3738_reg_1666),
    .din2(grp_fu_1416_p2),
    .ce(grp_fu_1503_ce),
    .dout(grp_fu_1503_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1324(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3709_reg_1836),
    .din1(v2_V_3740_reg_1676),
    .din2(grp_fu_1422_p2),
    .ce(grp_fu_1510_ce),
    .dout(grp_fu_1510_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1325(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3711_reg_1846),
    .din1(v2_V_3742_reg_1686),
    .din2(grp_fu_1428_p2),
    .ce(grp_fu_1517_ce),
    .dout(grp_fu_1517_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1326(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3713_reg_1856),
    .din1(v2_V_3744_reg_1696),
    .din2(grp_fu_1434_p2),
    .ce(grp_fu_1524_ce),
    .dout(grp_fu_1524_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1327(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3715_reg_1866),
    .din1(v2_V_3746_reg_1706),
    .din2(grp_fu_1440_p2),
    .ce(grp_fu_1531_ce),
    .dout(grp_fu_1531_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1328(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3717_reg_1876),
    .din1(v2_V_3748_reg_1716),
    .din2(grp_fu_1446_p2),
    .ce(grp_fu_1538_ce),
    .dout(grp_fu_1538_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1329(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3720_reg_1891),
    .din1(v2_V_3751_reg_1731),
    .din2(grp_fu_1452_p2),
    .ce(grp_fu_1545_ce),
    .dout(grp_fu_1545_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1330(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v1_V_reg_1896),
    .din1(v1_V_31_reg_1736),
    .din2(grp_fu_1404_p2),
    .ce(grp_fu_1552_ce),
    .dout(grp_fu_1552_p3)
);

top_mac_muladd_16s_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16s_16_4_1_U1331(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_3704_reg_1811_pp0_iter2_reg),
    .din1(v2_V_3735_reg_1651_pp0_iter2_reg),
    .din2(grp_fu_1552_p3),
    .ce(grp_fu_1558_ce),
    .dout(grp_fu_1558_p3)
);

top_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U1332(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_reg_1741_pp0_iter3_reg),
    .din1(v2_V_3721_reg_1581_pp0_iter3_reg),
    .din2(grp_fu_1565_p2),
    .ce(grp_fu_1565_ce),
    .dout(grp_fu_1565_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter5_state7)) begin
                ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter4;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        c2_V_reg_349 <= select_ln890_fu_1246_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c2_V_reg_349 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        c6_V_reg_327 <= select_ln890_152_reg_1942;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c6_V_reg_327 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter3_reg == 1'd0))) begin
        c7_V_reg_338 <= add_ln691_65_fu_1158_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c7_V_reg_338 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter3_reg == 1'd0))) begin
        indvar_flatten13_reg_305 <= select_ln890_154_fu_1184_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_305 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter2_reg == 1'd0))) begin
        indvar_flatten39_reg_294 <= select_ln890_155_fu_1012_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten39_reg_294 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_366_p2 == 1'd0))) begin
        indvar_flatten73_reg_283 <= add_ln890_93_fu_360_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten73_reg_283 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter3_reg == 1'd0))) begin
        indvar_flatten_reg_316 <= select_ln890_153_fu_1170_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_316 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        add_ln7627_13_reg_2073 <= add_ln7627_13_fu_1296_p2;
        add_ln7627_20_reg_2083 <= add_ln7627_20_fu_1302_p2;
        add_ln7627_6_reg_2068 <= add_ln7627_6_fu_1282_p2;
        local_C_addr_reg_2062 <= p_cast_fu_1269_p1;
        select_ln7586_2_reg_2053 <= select_ln7586_2_fu_1239_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln7627_13_reg_2073_pp0_iter6_reg <= add_ln7627_13_reg_2073;
        add_ln7627_13_reg_2073_pp0_iter7_reg <= add_ln7627_13_reg_2073_pp0_iter6_reg;
        add_ln7627_16_reg_2078_pp0_iter6_reg <= add_ln7627_16_reg_2078;
        add_ln7627_20_reg_2083_pp0_iter6_reg <= add_ln7627_20_reg_2083;
        add_ln7627_6_reg_2068_pp0_iter6_reg <= add_ln7627_6_reg_2068;
        add_ln7627_6_reg_2068_pp0_iter7_reg <= add_ln7627_6_reg_2068_pp0_iter6_reg;
        and_ln7584_3_reg_1920_pp0_iter5_reg <= and_ln7584_3_reg_1920;
        and_ln7585_2_reg_1935_pp0_iter5_reg <= and_ln7585_2_reg_1935;
        icmp_ln890_91_reg_1901_pp0_iter4_reg <= icmp_ln890_91_reg_1901;
        icmp_ln890_91_reg_1901_pp0_iter5_reg <= icmp_ln890_91_reg_1901_pp0_iter4_reg;
        icmp_ln890_reg_1577_pp0_iter2_reg <= icmp_ln890_reg_1577_pp0_iter1_reg;
        icmp_ln890_reg_1577_pp0_iter3_reg <= icmp_ln890_reg_1577_pp0_iter2_reg;
        icmp_ln890_reg_1577_pp0_iter4_reg <= icmp_ln890_reg_1577_pp0_iter3_reg;
        icmp_ln890_reg_1577_pp0_iter5_reg <= icmp_ln890_reg_1577_pp0_iter4_reg;
        icmp_ln890_reg_1577_pp0_iter6_reg <= icmp_ln890_reg_1577_pp0_iter5_reg;
        icmp_ln890_reg_1577_pp0_iter7_reg <= icmp_ln890_reg_1577_pp0_iter6_reg;
        local_C_addr_reg_2062_pp0_iter6_reg <= local_C_addr_reg_2062;
        local_C_addr_reg_2062_pp0_iter7_reg <= local_C_addr_reg_2062_pp0_iter6_reg;
        select_ln7586_2_reg_2053_pp0_iter6_reg <= select_ln7586_2_reg_2053;
        select_ln7586_2_reg_2053_pp0_iter7_reg <= select_ln7586_2_reg_2053_pp0_iter6_reg;
        v2_V_3704_reg_1811_pp0_iter2_reg <= v2_V_3704_reg_1811;
        v2_V_3721_reg_1581_pp0_iter2_reg <= v2_V_3721_reg_1581;
        v2_V_3721_reg_1581_pp0_iter3_reg <= v2_V_3721_reg_1581_pp0_iter2_reg;
        v2_V_3735_reg_1651_pp0_iter2_reg <= v2_V_3735_reg_1651;
        v2_V_reg_1741_pp0_iter2_reg <= v2_V_reg_1741;
        v2_V_reg_1741_pp0_iter3_reg <= v2_V_reg_1741_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        add_ln7627_16_reg_2078 <= grp_fu_1458_p3;
        add_ln7627_22_reg_2088 <= grp_fu_1478_p3;
        add_ln7627_23_reg_2093 <= grp_fu_1484_p3;
        add_ln7627_25_reg_2098 <= grp_fu_1490_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter5_reg == 1'd0))) begin
        add_ln7627_29_reg_2113 <= add_ln7627_29_fu_1337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter6_reg == 1'd0))) begin
        add_ln7627_30_reg_2118 <= add_ln7627_30_fu_1352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter3_reg == 1'd0))) begin
        and_ln7584_3_reg_1920 <= and_ln7584_3_fu_1055_p2;
        and_ln7585_2_reg_1935 <= and_ln7585_2_fu_1083_p2;
        empty_reg_1948 <= empty_fu_1154_p1;
        or_ln7585_2_reg_1930 <= or_ln7585_2_fu_1072_p2;
        or_ln7585_reg_1925 <= or_ln7585_fu_1061_p2;
        xor_ln7584_reg_1915 <= xor_ln7584_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln7585_2_reg_1935) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        cmp_i_i135998_reg_2043 <= cmp_i_i135998_fu_1192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln7585_2_reg_1935) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        cmp_i_i1359_mid1_reg_2048 <= cmp_i_i1359_mid1_fu_1227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter2_reg == 1'd0))) begin
        icmp_ln890_91_reg_1901 <= icmp_ln890_91_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_reg_1577 <= icmp_ln890_fu_366_p2;
        icmp_ln890_reg_1577_pp0_iter1_reg <= icmp_ln890_reg_1577;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter3_reg == 1'd0))) begin
        select_ln890_152_reg_1942 <= select_ln890_152_fu_1146_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v1_V_31_reg_1736 <= {{fifo_A_PE_4_1_x057_dout[511:496]}};
        v1_V_reg_1896 <= {{fifo_B_PE_4_1_x0105_dout[511:496]}};
        v2_V_3691_reg_1746 <= {{fifo_B_PE_4_1_x0105_dout[31:16]}};
        v2_V_3693_reg_1756 <= {{fifo_B_PE_4_1_x0105_dout[63:48]}};
        v2_V_3695_reg_1766 <= {{fifo_B_PE_4_1_x0105_dout[95:80]}};
        v2_V_3697_reg_1776 <= {{fifo_B_PE_4_1_x0105_dout[127:112]}};
        v2_V_3699_reg_1786 <= {{fifo_B_PE_4_1_x0105_dout[159:144]}};
        v2_V_3701_reg_1796 <= {{fifo_B_PE_4_1_x0105_dout[191:176]}};
        v2_V_3704_reg_1811 <= {{fifo_B_PE_4_1_x0105_dout[239:224]}};
        v2_V_3705_reg_1816 <= {{fifo_B_PE_4_1_x0105_dout[255:240]}};
        v2_V_3707_reg_1826 <= {{fifo_B_PE_4_1_x0105_dout[287:272]}};
        v2_V_3709_reg_1836 <= {{fifo_B_PE_4_1_x0105_dout[319:304]}};
        v2_V_3711_reg_1846 <= {{fifo_B_PE_4_1_x0105_dout[351:336]}};
        v2_V_3713_reg_1856 <= {{fifo_B_PE_4_1_x0105_dout[383:368]}};
        v2_V_3715_reg_1866 <= {{fifo_B_PE_4_1_x0105_dout[415:400]}};
        v2_V_3717_reg_1876 <= {{fifo_B_PE_4_1_x0105_dout[447:432]}};
        v2_V_3720_reg_1891 <= {{fifo_B_PE_4_1_x0105_dout[495:480]}};
        v2_V_3721_reg_1581 <= v2_V_3721_fu_372_p1;
        v2_V_3722_reg_1586 <= {{fifo_A_PE_4_1_x057_dout[31:16]}};
        v2_V_3724_reg_1596 <= {{fifo_A_PE_4_1_x057_dout[63:48]}};
        v2_V_3726_reg_1606 <= {{fifo_A_PE_4_1_x057_dout[95:80]}};
        v2_V_3728_reg_1616 <= {{fifo_A_PE_4_1_x057_dout[127:112]}};
        v2_V_3730_reg_1626 <= {{fifo_A_PE_4_1_x057_dout[159:144]}};
        v2_V_3732_reg_1636 <= {{fifo_A_PE_4_1_x057_dout[191:176]}};
        v2_V_3735_reg_1651 <= {{fifo_A_PE_4_1_x057_dout[239:224]}};
        v2_V_3736_reg_1656 <= {{fifo_A_PE_4_1_x057_dout[255:240]}};
        v2_V_3738_reg_1666 <= {{fifo_A_PE_4_1_x057_dout[287:272]}};
        v2_V_3740_reg_1676 <= {{fifo_A_PE_4_1_x057_dout[319:304]}};
        v2_V_3742_reg_1686 <= {{fifo_A_PE_4_1_x057_dout[351:336]}};
        v2_V_3744_reg_1696 <= {{fifo_A_PE_4_1_x057_dout[383:368]}};
        v2_V_3746_reg_1706 <= {{fifo_A_PE_4_1_x057_dout[415:400]}};
        v2_V_3748_reg_1716 <= {{fifo_A_PE_4_1_x057_dout[447:432]}};
        v2_V_3751_reg_1731 <= {{fifo_A_PE_4_1_x057_dout[495:480]}};
        v2_V_reg_1741 <= v2_V_fu_686_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_condition_pp0_exit_iter5_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter5_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_366_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln890_reg_1577_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_c6_V_phi_fu_331_p4 = select_ln890_152_reg_1942;
    end else begin
        ap_phi_mux_c6_V_phi_fu_331_p4 = c6_V_reg_327;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_4_1_x057_blk_n = fifo_A_PE_4_1_x057_empty_n;
    end else begin
        fifo_A_PE_4_1_x057_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_4_1_x057_read = 1'b1;
    end else begin
        fifo_A_PE_4_1_x057_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_4_2_x058_blk_n = fifo_A_PE_4_2_x058_full_n;
    end else begin
        fifo_A_PE_4_2_x058_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_4_2_x058_write = 1'b1;
    end else begin
        fifo_A_PE_4_2_x058_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_4_1_x0105_blk_n = fifo_B_PE_4_1_x0105_empty_n;
    end else begin
        fifo_B_PE_4_1_x0105_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_4_1_x0105_read = 1'b1;
    end else begin
        fifo_B_PE_4_1_x0105_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_5_1_x0106_blk_n = fifo_B_PE_5_1_x0106_full_n;
    end else begin
        fifo_B_PE_5_1_x0106_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_1577 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_5_1_x0106_write = 1'b1;
    end else begin
        fifo_B_PE_5_1_x0106_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln7586_2_reg_2053_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_C_drain_PE_4_1_x0176_blk_n = fifo_C_drain_PE_4_1_x0176_full_n;
    end else begin
        fifo_C_drain_PE_4_1_x0176_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln7586_2_reg_2053_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_C_drain_PE_4_1_x0176_write = 1'b1;
    end else begin
        fifo_C_drain_PE_4_1_x0176_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1368_ce = 1'b1;
    end else begin
        grp_fu_1368_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1374_ce = 1'b1;
    end else begin
        grp_fu_1374_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1380_ce = 1'b1;
    end else begin
        grp_fu_1380_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1386_ce = 1'b1;
    end else begin
        grp_fu_1386_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1392_ce = 1'b1;
    end else begin
        grp_fu_1392_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1398_ce = 1'b1;
    end else begin
        grp_fu_1398_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1404_ce = 1'b1;
    end else begin
        grp_fu_1404_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1410_ce = 1'b1;
    end else begin
        grp_fu_1410_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1416_ce = 1'b1;
    end else begin
        grp_fu_1416_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1422_ce = 1'b1;
    end else begin
        grp_fu_1422_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1428_ce = 1'b1;
    end else begin
        grp_fu_1428_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1434_ce = 1'b1;
    end else begin
        grp_fu_1434_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1440_ce = 1'b1;
    end else begin
        grp_fu_1440_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1446_ce = 1'b1;
    end else begin
        grp_fu_1446_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1452_ce = 1'b1;
    end else begin
        grp_fu_1452_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1458_ce = 1'b1;
    end else begin
        grp_fu_1458_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1464_ce = 1'b1;
    end else begin
        grp_fu_1464_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1471_ce = 1'b1;
    end else begin
        grp_fu_1471_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1478_ce = 1'b1;
    end else begin
        grp_fu_1478_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1484_ce = 1'b1;
    end else begin
        grp_fu_1484_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1490_ce = 1'b1;
    end else begin
        grp_fu_1490_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1496_ce = 1'b1;
    end else begin
        grp_fu_1496_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1503_ce = 1'b1;
    end else begin
        grp_fu_1503_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1510_ce = 1'b1;
    end else begin
        grp_fu_1510_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1517_ce = 1'b1;
    end else begin
        grp_fu_1517_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1524_ce = 1'b1;
    end else begin
        grp_fu_1524_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1531_ce = 1'b1;
    end else begin
        grp_fu_1531_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1538_ce = 1'b1;
    end else begin
        grp_fu_1538_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1545_ce = 1'b1;
    end else begin
        grp_fu_1545_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1552_ce = 1'b1;
    end else begin
        grp_fu_1552_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1558_ce = 1'b1;
    end else begin
        grp_fu_1558_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1565_ce = 1'b1;
    end else begin
        grp_fu_1565_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_ce1 = 1'b1;
    end else begin
        local_C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln890_reg_1577_pp0_iter7_reg == 1'd0))) begin
        local_C_we1 = 1'b1;
    end else begin
        local_C_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0)) & ~((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_64_fu_1120_p2 = (select_ln7586_fu_1100_p3 + 4'd1);

assign add_ln691_65_fu_1158_p2 = (select_ln890_151_fu_1138_p3 + 4'd1);

assign add_ln691_fu_1221_p2 = (select_ln7585_fu_1209_p3 + 6'd1);

assign add_ln7627_12_fu_1292_p2 = ($signed(grp_fu_1517_p3) + $signed(grp_fu_1510_p3));

assign add_ln7627_13_fu_1296_p2 = (add_ln7627_12_fu_1292_p2 + add_ln7627_9_fu_1288_p2);

assign add_ln7627_14_fu_1357_p2 = (add_ln7627_13_reg_2073_pp0_iter7_reg + add_ln7627_6_reg_2068_pp0_iter7_reg);

assign add_ln7627_17_fu_1343_p2 = ($signed(add_ln7627_16_reg_2078_pp0_iter6_reg) + $signed(grp_fu_1565_p3));

assign add_ln7627_20_fu_1302_p2 = ($signed(grp_fu_1471_p3) + $signed(grp_fu_1464_p3));

assign add_ln7627_21_fu_1347_p2 = (add_ln7627_20_reg_2083_pp0_iter6_reg + add_ln7627_17_fu_1343_p2);

assign add_ln7627_24_fu_1329_p2 = ($signed(add_ln7627_23_reg_2093) + $signed(add_ln7627_22_reg_2088));

assign add_ln7627_28_fu_1333_p2 = ($signed(grp_fu_1558_p3) + $signed(add_ln7627_25_reg_2098));

assign add_ln7627_29_fu_1337_p2 = (add_ln7627_28_fu_1333_p2 + add_ln7627_24_fu_1329_p2);

assign add_ln7627_2_fu_1274_p2 = ($signed(grp_fu_1538_p3) + $signed(grp_fu_1545_p3));

assign add_ln7627_30_fu_1352_p2 = (add_ln7627_29_reg_2113 + add_ln7627_21_fu_1347_p2);

assign add_ln7627_31_fu_1361_p2 = (add_ln7627_30_reg_2118 + add_ln7627_14_fu_1357_p2);

assign add_ln7627_5_fu_1278_p2 = ($signed(grp_fu_1531_p3) + $signed(grp_fu_1524_p3));

assign add_ln7627_6_fu_1282_p2 = (add_ln7627_5_fu_1278_p2 + add_ln7627_2_fu_1274_p2);

assign add_ln7627_9_fu_1288_p2 = ($signed(grp_fu_1503_p3) + $signed(grp_fu_1496_p3));

assign add_ln890_91_fu_1178_p2 = (indvar_flatten13_reg_305 + 13'd1);

assign add_ln890_92_fu_1006_p2 = (indvar_flatten39_reg_294 + 17'd1);

assign add_ln890_93_fu_360_p2 = (indvar_flatten73_reg_283 + 20'd1);

assign add_ln890_fu_1164_p2 = (indvar_flatten_reg_316 + 8'd1);

assign and_ln7584_1_fu_1031_p2 = (xor_ln7584_fu_1020_p2 & icmp_ln890101_fu_1025_p2);

assign and_ln7584_2_fu_1043_p2 = (xor_ln7584_fu_1020_p2 & icmp_ln890_92_fu_1037_p2);

assign and_ln7584_3_fu_1055_p2 = (xor_ln7584_fu_1020_p2 & icmp_ln890_93_fu_1049_p2);

assign and_ln7584_fu_1204_p2 = (xor_ln7584_reg_1915 & cmp_i_i97_fu_1198_p2);

assign and_ln7585_1_fu_1077_p2 = (or_ln7585_2_fu_1072_p2 & and_ln7584_1_fu_1031_p2);

assign and_ln7585_2_fu_1083_p2 = (or_ln7585_2_fu_1072_p2 & and_ln7584_2_fu_1043_p2);

assign and_ln7585_fu_1216_p2 = (or_ln7585_2_reg_1930 & and_ln7584_fu_1204_p2);

assign and_ln7586_fu_1114_p2 = (xor_ln7586_fu_1108_p2 & and_ln7585_1_fu_1077_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((select_ln7586_2_reg_2053_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (fifo_C_drain_PE_4_1_x0176_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_4_1_x0105_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_1_x057_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_2_x058_full_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_5_1_x0106_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((select_ln7586_2_reg_2053_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (fifo_C_drain_PE_4_1_x0176_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_4_1_x0105_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_1_x057_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_2_x058_full_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_5_1_x0106_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((select_ln7586_2_reg_2053_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (fifo_C_drain_PE_4_1_x0176_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_4_1_x0105_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_1_x057_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_2_x058_full_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_5_1_x0106_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter8 = ((select_ln7586_2_reg_2053_pp0_iter7_reg == 1'd1) & (fifo_C_drain_PE_4_1_x0176_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_4_1_x0105_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_1_x057_empty_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_A_PE_4_2_x058_full_n == 1'b0)) | ((icmp_ln890_reg_1577 == 1'd0) & (fifo_B_PE_5_1_x0106_full_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cmp_i_i135998_fu_1192_p2 = ((c2_V_reg_349 == 6'd0) ? 1'b1 : 1'b0);

assign cmp_i_i1359_mid1_fu_1227_p2 = ((add_ln691_fu_1221_p2 == 6'd0) ? 1'b1 : 1'b0);

assign cmp_i_i97_fu_1198_p2 = ((c2_V_reg_349 == 6'd31) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_1233_p2 = ((add_ln691_fu_1221_p2 == 6'd31) ? 1'b1 : 1'b0);

assign empty_1304_fu_1263_p2 = (tmp_49_cast_fu_1256_p3 + zext_ln890_fu_1253_p1);

assign empty_fu_1154_p1 = select_ln890_151_fu_1138_p3[2:0];

assign fifo_A_PE_4_2_x058_din = fifo_A_PE_4_1_x057_dout;

assign fifo_B_PE_5_1_x0106_din = fifo_B_PE_4_1_x0105_dout;

assign fifo_C_drain_PE_4_1_x0176_din = add_ln7627_31_fu_1361_p2;

assign grp_fu_1368_p0 = {{fifo_B_PE_4_1_x0105_dout[47:32]}};

assign grp_fu_1368_p1 = {{fifo_A_PE_4_1_x057_dout[47:32]}};

assign grp_fu_1374_p0 = {{fifo_B_PE_4_1_x0105_dout[79:64]}};

assign grp_fu_1374_p1 = {{fifo_A_PE_4_1_x057_dout[79:64]}};

assign grp_fu_1380_p0 = {{fifo_B_PE_4_1_x0105_dout[111:96]}};

assign grp_fu_1380_p1 = {{fifo_A_PE_4_1_x057_dout[111:96]}};

assign grp_fu_1386_p0 = {{fifo_B_PE_4_1_x0105_dout[143:128]}};

assign grp_fu_1386_p1 = {{fifo_A_PE_4_1_x057_dout[143:128]}};

assign grp_fu_1392_p0 = {{fifo_B_PE_4_1_x0105_dout[175:160]}};

assign grp_fu_1392_p1 = {{fifo_A_PE_4_1_x057_dout[175:160]}};

assign grp_fu_1398_p0 = {{fifo_B_PE_4_1_x0105_dout[207:192]}};

assign grp_fu_1398_p1 = {{fifo_A_PE_4_1_x057_dout[207:192]}};

assign grp_fu_1404_p0 = {{fifo_B_PE_4_1_x0105_dout[223:208]}};

assign grp_fu_1404_p1 = {{fifo_A_PE_4_1_x057_dout[223:208]}};

assign grp_fu_1410_p0 = {{fifo_B_PE_4_1_x0105_dout[271:256]}};

assign grp_fu_1410_p1 = {{fifo_A_PE_4_1_x057_dout[271:256]}};

assign grp_fu_1416_p0 = {{fifo_B_PE_4_1_x0105_dout[303:288]}};

assign grp_fu_1416_p1 = {{fifo_A_PE_4_1_x057_dout[303:288]}};

assign grp_fu_1422_p0 = {{fifo_B_PE_4_1_x0105_dout[335:320]}};

assign grp_fu_1422_p1 = {{fifo_A_PE_4_1_x057_dout[335:320]}};

assign grp_fu_1428_p0 = {{fifo_B_PE_4_1_x0105_dout[367:352]}};

assign grp_fu_1428_p1 = {{fifo_A_PE_4_1_x057_dout[367:352]}};

assign grp_fu_1434_p0 = {{fifo_B_PE_4_1_x0105_dout[399:384]}};

assign grp_fu_1434_p1 = {{fifo_A_PE_4_1_x057_dout[399:384]}};

assign grp_fu_1440_p0 = {{fifo_B_PE_4_1_x0105_dout[431:416]}};

assign grp_fu_1440_p1 = {{fifo_A_PE_4_1_x057_dout[431:416]}};

assign grp_fu_1446_p0 = {{fifo_B_PE_4_1_x0105_dout[463:448]}};

assign grp_fu_1446_p1 = {{fifo_A_PE_4_1_x057_dout[463:448]}};

assign grp_fu_1452_p0 = {{fifo_B_PE_4_1_x0105_dout[479:464]}};

assign grp_fu_1452_p1 = {{fifo_A_PE_4_1_x057_dout[479:464]}};

assign grp_fu_1565_p2 = ((select_ln7586_1_fu_1315_p3[0:0] == 1'b1) ? 16'd0 : local_C_q0);

assign icmp_ln890101_fu_1025_p2 = ((c7_V_reg_338 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_91_fu_1000_p2 = ((indvar_flatten39_reg_294 == 17'd32768) ? 1'b1 : 1'b0);

assign icmp_ln890_92_fu_1037_p2 = ((indvar_flatten_reg_316 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_93_fu_1049_p2 = ((indvar_flatten13_reg_305 == 13'd2048) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_366_p2 = ((indvar_flatten73_reg_283 == 20'd524288) ? 1'b1 : 1'b0);

assign local_C_address0 = p_cast_fu_1269_p1;

assign or_ln7584_fu_1306_p2 = (icmp_ln890_91_reg_1901_pp0_iter5_reg | cmp_i_i135998_reg_2043);

assign or_ln7585_1_fu_1310_p2 = (or_ln7584_fu_1306_p2 | and_ln7584_3_reg_1920_pp0_iter5_reg);

assign or_ln7585_2_fu_1072_p2 = (xor_ln7585_fu_1066_p2 | icmp_ln890_91_reg_1901);

assign or_ln7585_fu_1061_p2 = (icmp_ln890_91_reg_1901 | and_ln7584_3_fu_1055_p2);

assign or_ln7586_1_fu_1095_p2 = (or_ln7586_fu_1089_p2 | icmp_ln890_91_reg_1901);

assign or_ln7586_fu_1089_p2 = (and_ln7585_2_fu_1083_p2 | and_ln7584_3_fu_1055_p2);

assign or_ln890_31_fu_1132_p2 = (or_ln890_fu_1126_p2 | or_ln7585_fu_1061_p2);

assign or_ln890_fu_1126_p2 = (and_ln7586_fu_1114_p2 | and_ln7585_2_fu_1083_p2);

assign p_cast_fu_1269_p1 = empty_1304_fu_1263_p2;

assign select_ln7585_fu_1209_p3 = ((or_ln7585_reg_1925[0:0] == 1'b1) ? 6'd0 : c2_V_reg_349);

assign select_ln7586_1_fu_1315_p3 = ((and_ln7585_2_reg_1935_pp0_iter5_reg[0:0] == 1'b1) ? cmp_i_i1359_mid1_reg_2048 : or_ln7585_1_fu_1310_p2);

assign select_ln7586_2_fu_1239_p3 = ((and_ln7585_2_reg_1935[0:0] == 1'b1) ? cmp_i_i_mid1_fu_1233_p2 : and_ln7585_fu_1216_p2);

assign select_ln7586_fu_1100_p3 = ((or_ln7586_1_fu_1095_p2[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_c6_V_phi_fu_331_p4);

assign select_ln890_151_fu_1138_p3 = ((or_ln890_31_fu_1132_p2[0:0] == 1'b1) ? 4'd0 : c7_V_reg_338);

assign select_ln890_152_fu_1146_p3 = ((and_ln7586_fu_1114_p2[0:0] == 1'b1) ? add_ln691_64_fu_1120_p2 : select_ln7586_fu_1100_p3);

assign select_ln890_153_fu_1170_p3 = ((or_ln7586_1_fu_1095_p2[0:0] == 1'b1) ? 8'd1 : add_ln890_fu_1164_p2);

assign select_ln890_154_fu_1184_p3 = ((or_ln7585_fu_1061_p2[0:0] == 1'b1) ? 13'd1 : add_ln890_91_fu_1178_p2);

assign select_ln890_155_fu_1012_p3 = ((icmp_ln890_91_fu_1000_p2[0:0] == 1'b1) ? 17'd1 : add_ln890_92_fu_1006_p2);

assign select_ln890_fu_1246_p3 = ((and_ln7585_2_reg_1935[0:0] == 1'b1) ? add_ln691_fu_1221_p2 : select_ln7585_fu_1209_p3);

assign tmp_49_cast_fu_1256_p3 = {{empty_reg_1948}, {3'd0}};

assign v2_V_3721_fu_372_p1 = fifo_A_PE_4_1_x057_dout[15:0];

assign v2_V_fu_686_p1 = fifo_B_PE_4_1_x0105_dout[15:0];

assign xor_ln7584_fu_1020_p2 = (icmp_ln890_91_reg_1901 ^ 1'd1);

assign xor_ln7585_fu_1066_p2 = (icmp_ln890_93_fu_1049_p2 ^ 1'd1);

assign xor_ln7586_fu_1108_p2 = (1'd1 ^ and_ln7585_2_fu_1083_p2);

assign zext_ln890_fu_1253_p1 = select_ln890_152_reg_1942;

endmodule //top_PE_wrapper_4_1_x0
