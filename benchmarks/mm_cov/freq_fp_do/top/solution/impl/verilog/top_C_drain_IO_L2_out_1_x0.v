// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_drain_IO_L2_out_1_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_dout,
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n,
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_read,
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_din,
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n,
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_write,
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_dout,
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n,
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_state5 = 5'd8;
parameter    ap_ST_fsm_pp1_stage0 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] fifo_C_drain_C_drain_IO_L2_out_2_x0294_dout;
input   fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n;
output   fifo_C_drain_C_drain_IO_L2_out_2_x0294_read;
output  [127:0] fifo_C_drain_C_drain_IO_L2_out_1_x0293_din;
input   fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n;
output   fifo_C_drain_C_drain_IO_L2_out_1_x0293_write;
input  [127:0] fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_dout;
input   fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n;
output   fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_C_drain_IO_L2_out_2_x0294_read;
reg[127:0] fifo_C_drain_C_drain_IO_L2_out_1_x0293_din;
reg fifo_C_drain_C_drain_IO_L2_out_1_x0293_write;
reg fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_338_reg_279;
reg    fifo_C_drain_C_drain_IO_L2_out_1_x0293_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_337_reg_298;
reg    fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_blk_n;
reg   [6:0] indvar_flatten7_reg_131;
reg   [6:0] indvar_flatten_reg_142;
wire   [10:0] add_ln890_18_fu_153_p2;
reg   [10:0] add_ln890_18_reg_251;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_159_p2;
wire   [0:0] icmp_ln890_336_fu_165_p2;
reg   [0:0] icmp_ln890_336_reg_260;
wire   [3:0] select_ln17237_fu_195_p3;
reg   [3:0] select_ln17237_reg_265;
wire   [0:0] icmp_ln870_fu_203_p2;
wire   [6:0] add_ln890_16_fu_209_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_338_fu_215_p2;
wire   [3:0] add_ln691_fu_221_p2;
wire    ap_CS_fsm_state5;
wire   [7:0] select_ln890_fu_232_p3;
wire   [6:0] add_ln890_fu_239_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_block_state7_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_337_fu_245_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg   [10:0] indvar_flatten27_reg_97;
reg    ap_block_state1;
reg   [7:0] indvar_flatten15_reg_108;
reg   [3:0] c3_V_reg_120;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln89035_fu_177_p2;
wire   [0:0] xor_ln17236_fu_171_p2;
wire   [0:0] and_ln17236_fu_183_p2;
wire   [0:0] or_ln17237_fu_189_p2;
wire   [7:0] add_ln890_17_fu_226_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_fu_159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln870_fu_203_p2 == 1'd0) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln870_fu_203_p2 == 1'd0) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln870_fu_203_p2 == 1'd1) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln870_fu_203_p2 == 1'd1) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c3_V_reg_120 <= add_ln691_fu_221_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c3_V_reg_120 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten15_reg_108 <= select_ln890_fu_232_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten15_reg_108 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten27_reg_97 <= add_ln890_18_reg_251;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten27_reg_97 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_203_p2 == 1'd0) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten7_reg_131 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_338_fu_215_p2 == 1'd0))) begin
        indvar_flatten7_reg_131 <= add_ln890_16_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_203_p2 == 1'd1) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_142 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_337_fu_245_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_reg_142 <= add_ln890_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_18_reg_251 <= add_ln890_18_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln890_336_reg_260 <= icmp_ln890_336_fu_165_p2;
        select_ln17237_reg_265 <= select_ln17237_fu_195_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_337_reg_298 <= icmp_ln890_337_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_338_reg_279 <= icmp_ln890_338_fu_215_p2;
    end
end

always @ (*) begin
    if ((icmp_ln890_338_fu_215_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_337_fu_245_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_fu_159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_fu_159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_337_reg_298 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_blk_n = fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_337_reg_298 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_read = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln890_337_reg_298 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln890_338_reg_279 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_blk_n = fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_337_reg_298 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_din = fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_dout;
    end else if (((icmp_ln890_338_reg_279 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_din = fifo_C_drain_C_drain_IO_L2_out_2_x0294_dout;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln890_337_reg_298 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln890_338_reg_279 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_write = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_1_x0293_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_338_reg_279 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n = fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_338_reg_279 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_read = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_2_x0294_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln870_fu_203_p2 == 1'd1) & (icmp_ln890_fu_159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_338_fu_215_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_338_fu_215_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln890_337_fu_245_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln890_337_fu_245_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_fu_221_p2 = (select_ln17237_reg_265 + 4'd1);

assign add_ln890_16_fu_209_p2 = (indvar_flatten7_reg_131 + 7'd1);

assign add_ln890_17_fu_226_p2 = (indvar_flatten15_reg_108 + 8'd1);

assign add_ln890_18_fu_153_p2 = (indvar_flatten27_reg_97 + 11'd1);

assign add_ln890_fu_239_p2 = (indvar_flatten_reg_142 + 7'd1);

assign and_ln17236_fu_183_p2 = (xor_ln17236_fu_171_p2 & icmp_ln89035_fu_177_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0)) | ((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0)) | ((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0)) | ((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n == 1'b0)) | ((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n == 1'b0)) | ((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n == 1'b0)) | ((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0)) | ((icmp_ln890_338_reg_279 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_2_x0294_empty_n == 1'b0)));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = (((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L1_out_1_0_x0236_empty_n == 1'b0)) | ((icmp_ln890_337_reg_298 == 1'd0) & (fifo_C_drain_C_drain_IO_L2_out_1_x0293_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign icmp_ln870_fu_203_p2 = ((select_ln17237_fu_195_p3 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln89035_fu_177_p2 = ((c3_V_reg_120 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_336_fu_165_p2 = ((indvar_flatten15_reg_108 == 8'd112) ? 1'b1 : 1'b0);

assign icmp_ln890_337_fu_245_p2 = ((indvar_flatten_reg_142 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_338_fu_215_p2 = ((indvar_flatten7_reg_131 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_159_p2 = ((indvar_flatten27_reg_97 == 11'd1792) ? 1'b1 : 1'b0);

assign or_ln17237_fu_189_p2 = (icmp_ln890_336_fu_165_p2 | and_ln17236_fu_183_p2);

assign select_ln17237_fu_195_p3 = ((or_ln17237_fu_189_p2[0:0] == 1'b1) ? 4'd1 : c3_V_reg_120);

assign select_ln890_fu_232_p3 = ((icmp_ln890_336_reg_260[0:0] == 1'b1) ? 8'd1 : add_ln890_17_fu_226_p2);

assign xor_ln17236_fu_171_p2 = (icmp_ln890_336_fu_165_p2 ^ 1'd1);

endmodule //top_C_drain_IO_L2_out_1_x0
