// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_drain_IO_L1_out_boundary_wrapper_1_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_din,
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_full_n,
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_write,
        fifo_C_drain_PE_7_1_x0179_dout,
        fifo_C_drain_PE_7_1_x0179_empty_n,
        fifo_C_drain_PE_7_1_x0179_read
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [127:0] fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_din;
input   fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_full_n;
output   fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_write;
input  [15:0] fifo_C_drain_PE_7_1_x0179_dout;
input   fifo_C_drain_PE_7_1_x0179_empty_n;
output   fifo_C_drain_PE_7_1_x0179_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_write;
reg fifo_C_drain_PE_7_1_x0179_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_blk_n;
wire    ap_CS_fsm_state14;
reg    fifo_C_drain_PE_7_1_x0179_blk_n;
wire    ap_CS_fsm_state6;
wire   [4:0] add_ln691_fu_282_p2;
reg   [4:0] add_ln691_reg_452;
wire    ap_CS_fsm_state2;
wire   [4:0] add_ln691_1398_fu_294_p2;
reg   [4:0] add_ln691_1398_reg_460;
wire    ap_CS_fsm_state3;
wire   [3:0] add_ln691_1400_fu_306_p2;
reg   [3:0] add_ln691_1400_reg_468;
wire    ap_CS_fsm_state4;
reg   [2:0] data_split_V_addr_reg_476;
wire   [0:0] icmp_ln890_1273_fu_312_p2;
wire   [3:0] add_ln691_1401_fu_327_p2;
reg   [3:0] add_ln691_1401_reg_481;
wire    ap_CS_fsm_state5;
reg   [2:0] local_C_V_0_addr_126_reg_489;
wire   [0:0] icmp_ln890_1275_fu_338_p2;
reg   [15:0] tmp_reg_494;
wire   [127:0] local_C_V_0_q0;
wire   [3:0] add_ln691_1402_fu_344_p2;
wire    ap_CS_fsm_state7;
wire   [127:0] zext_ln1497_fu_376_p1;
wire   [0:0] icmp_ln878_fu_355_p2;
wire   [15:0] data_split_V_q1;
reg   [15:0] v2_V_reg_517;
wire    ap_CS_fsm_state9;
wire   [15:0] data_split_V_q0;
reg   [15:0] v2_V_16999_reg_522;
reg   [15:0] v2_V_17000_reg_527;
wire    ap_CS_fsm_state10;
reg   [15:0] v2_V_17001_reg_532;
reg   [15:0] v2_V_17002_reg_537;
wire    ap_CS_fsm_state11;
reg   [15:0] v2_V_17003_reg_542;
wire   [3:0] add_ln691_1399_fu_395_p2;
reg   [3:0] add_ln691_1399_reg_547;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln890_1274_fu_406_p2;
reg   [2:0] local_C_V_0_address0;
reg    local_C_V_0_ce0;
reg    local_C_V_0_we0;
wire   [127:0] local_C_V_0_d0;
reg   [2:0] data_split_V_address0;
reg    data_split_V_ce0;
reg    data_split_V_we0;
reg   [15:0] data_split_V_d0;
reg   [2:0] data_split_V_address1;
reg    data_split_V_ce1;
reg   [4:0] c0_V_reg_207;
wire   [0:0] icmp_ln890_1272_fu_300_p2;
reg    ap_block_state1;
reg   [4:0] c1_V_reg_218;
wire   [0:0] icmp_ln890_fu_288_p2;
reg   [3:0] c6_V_reg_229;
reg   [3:0] c7_V_reg_240;
wire    ap_CS_fsm_state12;
reg   [3:0] n_V_reg_251;
reg   [127:0] p_Val2_s_reg_262;
reg   [3:0] c5_V_reg_271;
wire   [63:0] idxprom_fu_322_p1;
wire   [63:0] zext_ln890_190_fu_333_p1;
wire   [63:0] zext_ln878_fu_350_p1;
wire   [63:0] zext_ln890_fu_401_p1;
wire   [15:0] trunc_ln674_fu_361_p1;
wire    ap_CS_fsm_state8;
wire   [2:0] empty_fu_318_p1;
wire   [111:0] r_fu_366_p4;
reg   [13:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
end

top_C_drain_IO_L1_out_boundary_wrapper_0_x0_local_C_V_0 #(
    .DataWidth( 128 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_C_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_V_0_address0),
    .ce0(local_C_V_0_ce0),
    .we0(local_C_V_0_we0),
    .d0(local_C_V_0_d0),
    .q0(local_C_V_0_q0)
);

top_C_drain_IO_L1_out_boundary_wrapper_0_x0_data_split_V #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_split_V_address0),
    .ce0(data_split_V_ce0),
    .we0(data_split_V_we0),
    .d0(data_split_V_d0),
    .q0(data_split_V_q0),
    .address1(data_split_V_address1),
    .ce1(data_split_V_ce1),
    .q1(data_split_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_288_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_207 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1272_fu_300_p2 == 1'd1))) begin
        c0_V_reg_207 <= add_ln691_reg_452;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln890_1274_fu_406_p2 == 1'd1))) begin
        c1_V_reg_218 <= add_ln691_1398_reg_460;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_288_p2 == 1'd0))) begin
        c1_V_reg_218 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1273_fu_312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c5_V_reg_271 <= 4'd0;
    end else if (((fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        c5_V_reg_271 <= add_ln691_1399_reg_547;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1272_fu_300_p2 == 1'd0))) begin
        c6_V_reg_229 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln890_1275_fu_338_p2 == 1'd1))) begin
        c6_V_reg_229 <= add_ln691_1400_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1273_fu_312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c7_V_reg_240 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c7_V_reg_240 <= add_ln691_1401_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((fifo_C_drain_PE_7_1_x0179_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        n_V_reg_251 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd0))) begin
        n_V_reg_251 <= add_ln691_1402_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((fifo_C_drain_PE_7_1_x0179_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_s_reg_262 <= local_C_V_0_q0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd0))) begin
        p_Val2_s_reg_262 <= zext_ln1497_fu_376_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_1398_reg_460 <= add_ln691_1398_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln691_1399_reg_547 <= add_ln691_1399_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln691_1400_reg_468 <= add_ln691_1400_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1401_reg_481 <= add_ln691_1401_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_452 <= add_ln691_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1273_fu_312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        data_split_V_addr_reg_476 <= idxprom_fu_322_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln890_1275_fu_338_p2 == 1'd0))) begin
        local_C_V_0_addr_126_reg_489 <= zext_ln890_190_fu_333_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_reg_494 <= fifo_C_drain_PE_7_1_x0179_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v2_V_16999_reg_522 <= data_split_V_q0;
        v2_V_reg_517 <= data_split_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v2_V_17000_reg_527 <= data_split_V_q0;
        v2_V_17001_reg_532 <= data_split_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v2_V_17002_reg_537 <= data_split_V_q0;
        v2_V_17003_reg_542 <= data_split_V_q1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_288_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_288_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_split_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_split_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_split_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_split_V_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd1))) begin
        data_split_V_address0 = data_split_V_addr_reg_476;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd0))) begin
        data_split_V_address0 = zext_ln878_fu_350_p1;
    end else begin
        data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_split_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_split_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_split_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_split_V_address1 = 64'd0;
    end else begin
        data_split_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd0)))) begin
        data_split_V_ce0 = 1'b1;
    end else begin
        data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        data_split_V_ce1 = 1'b1;
    end else begin
        data_split_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if ((icmp_ln878_fu_355_p2 == 1'd1)) begin
            data_split_V_d0 = tmp_reg_494;
        end else if ((icmp_ln878_fu_355_p2 == 1'd0)) begin
            data_split_V_d0 = trunc_ln674_fu_361_p1;
        end else begin
            data_split_V_d0 = 'bx;
        end
    end else begin
        data_split_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd0)))) begin
        data_split_V_we0 = 1'b1;
    end else begin
        data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_blk_n = fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_full_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_write = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fifo_C_drain_PE_7_1_x0179_blk_n = fifo_C_drain_PE_7_1_x0179_empty_n;
    end else begin
        fifo_C_drain_PE_7_1_x0179_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fifo_C_drain_PE_7_1_x0179_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        fifo_C_drain_PE_7_1_x0179_read = 1'b1;
    end else begin
        fifo_C_drain_PE_7_1_x0179_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        local_C_V_0_address0 = zext_ln890_fu_401_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_C_V_0_address0 = local_C_V_0_addr_126_reg_489;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        local_C_V_0_address0 = zext_ln890_190_fu_333_p1;
    end else begin
        local_C_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        local_C_V_0_ce0 = 1'b1;
    end else begin
        local_C_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_C_V_0_we0 = 1'b1;
    end else begin
        local_C_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_288_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_1272_fu_300_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln890_1273_fu_312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln890_1275_fu_338_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((fifo_C_drain_PE_7_1_x0179_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_fu_355_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln890_1274_fu_406_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_1398_fu_294_p2 = (c1_V_reg_218 + 5'd1);

assign add_ln691_1399_fu_395_p2 = (c5_V_reg_271 + 4'd1);

assign add_ln691_1400_fu_306_p2 = (c6_V_reg_229 + 4'd1);

assign add_ln691_1401_fu_327_p2 = (c7_V_reg_240 + 4'd1);

assign add_ln691_1402_fu_344_p2 = (n_V_reg_251 + 4'd1);

assign add_ln691_fu_282_p2 = (c0_V_reg_207 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign empty_fu_318_p1 = c6_V_reg_229[2:0];

assign fifo_C_drain_C_drain_IO_L1_out_1_7_x0243_din = local_C_V_0_q0;

assign icmp_ln878_fu_355_p2 = ((n_V_reg_251 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1272_fu_300_p2 = ((c1_V_reg_218 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1273_fu_312_p2 = ((c6_V_reg_229 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1274_fu_406_p2 = ((c5_V_reg_271 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1275_fu_338_p2 = ((c7_V_reg_240 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_288_p2 = ((c0_V_reg_207 == 5'd16) ? 1'b1 : 1'b0);

assign idxprom_fu_322_p1 = empty_fu_318_p1;

assign local_C_V_0_d0 = {{{{{{{{data_split_V_q1}, {data_split_V_q0}}, {v2_V_17003_reg_542}}, {v2_V_17002_reg_537}}, {v2_V_17001_reg_532}}, {v2_V_17000_reg_527}}, {v2_V_16999_reg_522}}, {v2_V_reg_517}};

assign r_fu_366_p4 = {{p_Val2_s_reg_262[127:16]}};

assign trunc_ln674_fu_361_p1 = p_Val2_s_reg_262[15:0];

assign zext_ln1497_fu_376_p1 = r_fu_366_p4;

assign zext_ln878_fu_350_p1 = n_V_reg_251;

assign zext_ln890_190_fu_333_p1 = c7_V_reg_240;

assign zext_ln890_fu_401_p1 = c5_V_reg_271;

endmodule //top_C_drain_IO_L1_out_boundary_wrapper_1_x0
