// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_A_IO_L2_in_boundary_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_7_x011_dout,
        fifo_A_A_IO_L2_in_7_x011_empty_n,
        fifo_A_A_IO_L2_in_7_x011_read,
        fifo_A_PE_7_0_x083_din,
        fifo_A_PE_7_0_x083_full_n,
        fifo_A_PE_7_0_x083_write
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_pp0_stage0 = 13'd4;
parameter    ap_ST_fsm_state6 = 13'd8;
parameter    ap_ST_fsm_pp1_stage0 = 13'd16;
parameter    ap_ST_fsm_state11 = 13'd32;
parameter    ap_ST_fsm_pp2_stage0 = 13'd64;
parameter    ap_ST_fsm_state15 = 13'd128;
parameter    ap_ST_fsm_pp3_stage0 = 13'd256;
parameter    ap_ST_fsm_state20 = 13'd512;
parameter    ap_ST_fsm_state21 = 13'd1024;
parameter    ap_ST_fsm_state22 = 13'd2048;
parameter    ap_ST_fsm_state23 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_A_A_IO_L2_in_7_x011_dout;
input   fifo_A_A_IO_L2_in_7_x011_empty_n;
output   fifo_A_A_IO_L2_in_7_x011_read;
output  [511:0] fifo_A_PE_7_0_x083_din;
input   fifo_A_PE_7_0_x083_full_n;
output   fifo_A_PE_7_0_x083_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_A_IO_L2_in_7_x011_read;
reg[511:0] fifo_A_PE_7_0_x083_din;
reg fifo_A_PE_7_0_x083_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_A_IO_L2_in_7_x011_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_1565_reg_611;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln890_1564_reg_659;
reg    fifo_A_PE_7_0_x083_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_1568_reg_620;
reg   [0:0] icmp_ln890_1568_reg_620_pp1_iter2_reg;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln890_1567_reg_668;
reg   [0:0] icmp_ln890_1567_reg_668_pp3_iter2_reg;
wire    ap_CS_fsm_state23;
reg   [3:0] c4_V_39_reg_233;
reg   [3:0] c4_V_39_reg_233_pp0_iter1_reg;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [6:0] indvar_flatten_reg_245;
reg   [3:0] c7_V_22_reg_256;
reg   [3:0] c4_V_reg_267;
reg   [3:0] c4_V_reg_267_pp2_iter1_reg;
wire    ap_block_state12_pp2_stage0_iter0;
reg    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_state14_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [6:0] indvar_flatten7_reg_279;
reg   [3:0] c7_V_21_reg_290;
reg   [511:0] reg_323;
wire   [511:0] local_A_ping_V_q0;
reg   [511:0] reg_329;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
reg    ap_block_state10_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln890_1568_reg_620_pp1_iter1_reg;
wire    ap_CS_fsm_state22;
wire   [13:0] add_ln890_394_fu_334_p2;
reg   [13:0] add_ln890_394_reg_577;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_340_p2;
wire   [0:0] icmp_ln890_1562_fu_346_p2;
reg   [0:0] icmp_ln890_1562_reg_586;
wire   [0:0] and_ln1257_1_fu_376_p2;
reg   [0:0] and_ln1257_1_reg_592;
wire   [0:0] or_ln1258_fu_382_p2;
reg   [0:0] or_ln1258_reg_597;
wire   [0:0] and_ln1258_fu_400_p2;
reg   [0:0] and_ln1258_reg_601;
wire   [3:0] add_ln691_1684_fu_406_p2;
reg   [3:0] add_ln691_1684_reg_606;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln890_1565_fu_412_p2;
reg   [0:0] icmp_ln890_1565_reg_611_pp0_iter1_reg;
wire   [6:0] add_ln890_392_fu_423_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln890_1568_fu_429_p2;
wire   [3:0] select_ln1280_fu_441_p3;
reg   [3:0] select_ln1280_reg_624;
wire   [3:0] add_ln691_1688_fu_449_p2;
wire   [0:0] arb_fu_459_p2;
wire    ap_CS_fsm_state11;
wire   [5:0] select_ln691_fu_474_p3;
wire   [10:0] select_ln890_fu_488_p3;
wire   [3:0] add_ln691_fu_495_p2;
reg   [3:0] add_ln691_reg_654;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln890_1564_fu_501_p2;
reg   [0:0] icmp_ln890_1564_reg_659_pp2_iter1_reg;
wire   [6:0] add_ln890_fu_512_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state16_pp3_stage0_iter0;
wire    ap_block_state17_pp3_stage0_iter1;
wire    ap_block_state18_pp3_stage0_iter2;
reg    ap_block_state19_pp3_stage0_iter3;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln890_1567_fu_518_p2;
reg   [0:0] icmp_ln890_1567_reg_668_pp3_iter1_reg;
wire   [3:0] select_ln1311_fu_530_p3;
reg   [3:0] select_ln1311_reg_672;
wire   [3:0] add_ln691_1687_fu_538_p2;
wire   [511:0] local_A_pong_V_q0;
reg   [511:0] local_A_pong_V_load_reg_687;
reg    ap_enable_reg_pp3_iter2;
wire   [3:0] add_ln691_1685_fu_548_p2;
reg   [3:0] add_ln691_1685_reg_692;
wire    ap_CS_fsm_state20;
wire   [3:0] add_ln691_1686_fu_560_p2;
reg   [3:0] add_ln691_1686_reg_700;
wire    ap_CS_fsm_state21;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state15;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state16;
reg    ap_enable_reg_pp3_iter1;
reg   [2:0] local_A_ping_V_address0;
reg    local_A_ping_V_ce0;
wire   [2:0] local_A_ping_V_address1;
reg    local_A_ping_V_ce1;
reg    local_A_ping_V_we1;
wire   [2:0] local_A_pong_V_address0;
reg    local_A_pong_V_ce0;
wire   [2:0] local_A_pong_V_address1;
reg    local_A_pong_V_ce1;
reg    local_A_pong_V_we1;
reg   [13:0] indvar_flatten29_reg_174;
reg    ap_block_state1;
reg   [10:0] indvar_flatten15_reg_185;
reg   [5:0] c2_V_reg_197;
reg   [0:0] intra_trans_en_reg_209;
reg   [0:0] arb_18_reg_222;
reg   [3:0] ap_phi_mux_c4_V_39_phi_fu_237_p4;
reg   [3:0] ap_phi_mux_c4_V_phi_fu_271_p4;
reg   [3:0] c6_V_reg_301;
wire   [0:0] icmp_ln890_1566_fu_571_p2;
reg   [3:0] c7_V_reg_312;
wire   [0:0] icmp_ln890_1563_fu_554_p2;
wire   [63:0] zext_ln890_234_fu_418_p1;
wire   [63:0] zext_ln890_236_fu_455_p1;
wire   [63:0] zext_ln890_233_fu_507_p1;
wire   [63:0] zext_ln890_235_fu_544_p1;
wire   [63:0] zext_ln890_fu_566_p1;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_pp3_stage0_01001;
wire   [0:0] xor_ln1257_fu_358_p2;
wire   [0:0] icmp_ln89069_fu_370_p2;
wire   [0:0] or_ln1257_fu_352_p2;
wire   [0:0] xor_ln1258_fu_388_p2;
wire   [0:0] and_ln1257_fu_364_p2;
wire   [0:0] or_ln1258_1_fu_394_p2;
wire   [0:0] icmp_ln890_1570_fu_435_p2;
wire   [0:0] or_ln691_fu_470_p2;
wire   [5:0] add_ln691_1689_fu_464_p2;
wire   [10:0] add_ln890_393_fu_482_p2;
wire   [0:0] icmp_ln890_1569_fu_524_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
end

top_A_IO_L2_in_boundary_x0_local_A_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_A_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_ping_V_address0),
    .ce0(local_A_ping_V_ce0),
    .q0(local_A_ping_V_q0),
    .address1(local_A_ping_V_address1),
    .ce1(local_A_ping_V_ce1),
    .we1(local_A_ping_V_we1),
    .d1(reg_323)
);

top_A_IO_L2_in_boundary_x0_local_A_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_A_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_pong_V_address0),
    .ce0(local_A_pong_V_ce0),
    .q0(local_A_pong_V_q0),
    .address1(local_A_pong_V_address1),
    .ce1(local_A_pong_V_ce1),
    .we1(local_A_pong_V_we1),
    .d1(reg_323)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_1563_fu_554_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd0 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'd0 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (or_ln1258_reg_597 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (or_ln1258_reg_597 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state12))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state12)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'd1 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state15) & (or_ln1258_reg_597 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state16)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state16);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if (((1'b1 == ap_CS_fsm_state15) & (or_ln1258_reg_597 == 1'd1))) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        arb_18_reg_222 <= arb_fu_459_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_18_reg_222 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        c2_V_reg_197 <= select_ln691_fu_474_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c2_V_reg_197 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
        c4_V_39_reg_233 <= 4'd0;
    end else if (((icmp_ln890_1565_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c4_V_39_reg_233 <= add_ln691_1684_reg_606;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
        c4_V_reg_267 <= 4'd0;
    end else if (((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c4_V_reg_267 <= add_ln691_reg_654;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd1))) begin
        c6_V_reg_301 <= 4'd0;
    end else if (((icmp_ln890_1566_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        c6_V_reg_301 <= add_ln691_1685_reg_692;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (or_ln1258_reg_597 == 1'd1))) begin
        c7_V_21_reg_290 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln890_1567_fu_518_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c7_V_21_reg_290 <= add_ln691_1687_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (or_ln1258_reg_597 == 1'd1))) begin
        c7_V_22_reg_256 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln890_1568_fu_429_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c7_V_22_reg_256 <= add_ln691_1688_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1563_fu_554_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        c7_V_reg_312 <= 4'd0;
    end else if (((fifo_A_PE_7_0_x083_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        c7_V_reg_312 <= add_ln691_1686_reg_700;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten15_reg_185 <= select_ln890_fu_488_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten15_reg_185 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten29_reg_174 <= add_ln890_394_reg_577;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten29_reg_174 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (or_ln1258_reg_597 == 1'd1))) begin
        indvar_flatten7_reg_279 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln890_1567_fu_518_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten7_reg_279 <= add_ln890_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (or_ln1258_reg_597 == 1'd1))) begin
        indvar_flatten_reg_245 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln890_1568_fu_429_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_245 <= add_ln890_392_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        intra_trans_en_reg_209 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_209 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln691_1684_reg_606 <= add_ln691_1684_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln691_1685_reg_692 <= add_ln691_1685_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln691_1686_reg_700 <= add_ln691_1686_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln691_reg_654 <= add_ln691_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_394_reg_577 <= add_ln890_394_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
        and_ln1257_1_reg_592 <= and_ln1257_1_fu_376_p2;
        and_ln1258_reg_601 <= and_ln1258_fu_400_p2;
        icmp_ln890_1562_reg_586 <= icmp_ln890_1562_fu_346_p2;
        or_ln1258_reg_597 <= or_ln1258_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c4_V_39_reg_233_pp0_iter1_reg <= c4_V_39_reg_233;
        icmp_ln890_1565_reg_611 <= icmp_ln890_1565_fu_412_p2;
        icmp_ln890_1565_reg_611_pp0_iter1_reg <= icmp_ln890_1565_reg_611;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c4_V_reg_267_pp2_iter1_reg <= c4_V_reg_267;
        icmp_ln890_1564_reg_659 <= icmp_ln890_1564_fu_501_p2;
        icmp_ln890_1564_reg_659_pp2_iter1_reg <= icmp_ln890_1564_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln890_1567_reg_668 <= icmp_ln890_1567_fu_518_p2;
        icmp_ln890_1567_reg_668_pp3_iter1_reg <= icmp_ln890_1567_reg_668;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln890_1567_reg_668_pp3_iter2_reg <= icmp_ln890_1567_reg_668_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_1568_reg_620 <= icmp_ln890_1568_fu_429_p2;
        icmp_ln890_1568_reg_620_pp1_iter1_reg <= icmp_ln890_1568_reg_620;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln890_1568_reg_620_pp1_iter2_reg <= icmp_ln890_1568_reg_620_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln890_1567_reg_668_pp3_iter1_reg == 1'd0))) begin
        local_A_pong_V_load_reg_687 <= local_A_pong_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln890_1565_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_323 <= fifo_A_A_IO_L2_in_7_x011_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln890_1568_reg_620_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        reg_329 <= local_A_ping_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln890_1568_fu_429_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln1280_reg_624 <= select_ln1280_fu_441_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln890_1567_fu_518_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln1311_reg_672 <= select_ln1311_fu_530_p3;
    end
end

always @ (*) begin
    if ((icmp_ln890_1565_fu_412_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1568_fu_429_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1564_fu_501_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1567_fu_518_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1563_fu_554_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1565_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c4_V_39_phi_fu_237_p4 = add_ln691_1684_reg_606;
    end else begin
        ap_phi_mux_c4_V_39_phi_fu_237_p4 = c4_V_39_reg_233;
    end
end

always @ (*) begin
    if (((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_c4_V_phi_fu_271_p4 = add_ln691_reg_654;
    end else begin
        ap_phi_mux_c4_V_phi_fu_271_p4 = c4_V_reg_267;
    end
end

always @ (*) begin
    if (((icmp_ln890_1563_fu_554_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln890_1565_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fifo_A_A_IO_L2_in_7_x011_blk_n = fifo_A_A_IO_L2_in_7_x011_empty_n;
    end else begin
        fifo_A_A_IO_L2_in_7_x011_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln890_1565_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fifo_A_A_IO_L2_in_7_x011_read = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_7_x011_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        fifo_A_PE_7_0_x083_blk_n = fifo_A_PE_7_0_x083_full_n;
    end else begin
        fifo_A_PE_7_0_x083_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        fifo_A_PE_7_0_x083_din = local_A_pong_V_load_reg_687;
    end else if ((((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001)) | ((fifo_A_PE_7_0_x083_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)))) begin
        fifo_A_PE_7_0_x083_din = reg_329;
    end else begin
        fifo_A_PE_7_0_x083_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((fifo_A_PE_7_0_x083_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)))) begin
        fifo_A_PE_7_0_x083_write = 1'b1;
    end else begin
        fifo_A_PE_7_0_x083_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        local_A_ping_V_address0 = zext_ln890_fu_566_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_A_ping_V_address0 = zext_ln890_236_fu_455_p1;
    end else begin
        local_A_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        local_A_ping_V_ce0 = 1'b1;
    end else begin
        local_A_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        local_A_ping_V_ce1 = 1'b1;
    end else begin
        local_A_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln890_1564_reg_659_pp2_iter1_reg == 1'd0))) begin
        local_A_ping_V_we1 = 1'b1;
    end else begin
        local_A_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        local_A_pong_V_ce0 = 1'b1;
    end else begin
        local_A_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_A_pong_V_ce1 = 1'b1;
    end else begin
        local_A_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln890_1565_reg_611_pp0_iter1_reg == 1'd0))) begin
        local_A_pong_V_we1 = 1'b1;
    end else begin
        local_A_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((1'd1 == and_ln1258_fu_400_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_340_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_1565_fu_412_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_1565_fu_412_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (or_ln1258_reg_597 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_1568_fu_429_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_1568_fu_429_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln890_1564_fu_501_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln890_1564_fu_501_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (or_ln1258_reg_597 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln890_1567_fu_518_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln890_1567_fu_518_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln890_1563_fu_554_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln890_1566_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((fifo_A_PE_7_0_x083_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_1684_fu_406_p2 = (ap_phi_mux_c4_V_39_phi_fu_237_p4 + 4'd1);

assign add_ln691_1685_fu_548_p2 = (c6_V_reg_301 + 4'd1);

assign add_ln691_1686_fu_560_p2 = (c7_V_reg_312 + 4'd1);

assign add_ln691_1687_fu_538_p2 = (select_ln1311_fu_530_p3 + 4'd1);

assign add_ln691_1688_fu_449_p2 = (select_ln1280_fu_441_p3 + 4'd1);

assign add_ln691_1689_fu_464_p2 = (c2_V_reg_197 + 6'd1);

assign add_ln691_fu_495_p2 = (ap_phi_mux_c4_V_phi_fu_271_p4 + 4'd1);

assign add_ln890_392_fu_423_p2 = (indvar_flatten_reg_245 + 7'd1);

assign add_ln890_393_fu_482_p2 = (indvar_flatten15_reg_185 + 11'd1);

assign add_ln890_394_fu_334_p2 = (indvar_flatten29_reg_174 + 14'd1);

assign add_ln890_fu_512_p2 = (indvar_flatten7_reg_279 + 7'd1);

assign and_ln1257_1_fu_376_p2 = (xor_ln1257_fu_358_p2 & icmp_ln89069_fu_370_p2);

assign and_ln1257_fu_364_p2 = (xor_ln1257_fu_358_p2 & arb_18_reg_222);

assign and_ln1258_fu_400_p2 = (or_ln1258_1_fu_394_p2 & and_ln1257_fu_364_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln890_1565_reg_611 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (fifo_A_A_IO_L2_in_7_x011_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln890_1565_reg_611 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (fifo_A_A_IO_L2_in_7_x011_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (fifo_A_A_IO_L2_in_7_x011_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln890_1564_reg_659 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (fifo_A_A_IO_L2_in_7_x011_empty_n == 1'b0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter3 = ((icmp_ln890_1568_reg_620_pp1_iter2_reg == 1'd0) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp2_stage0_iter1 = ((icmp_ln890_1564_reg_659 == 1'd0) & (fifo_A_A_IO_L2_in_7_x011_empty_n == 1'b0));
end

assign ap_block_state14_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp3_stage0_iter3 = ((icmp_ln890_1567_reg_668_pp3_iter2_reg == 1'd0) & (fifo_A_PE_7_0_x083_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln890_1565_reg_611 == 1'd0) & (fifo_A_A_IO_L2_in_7_x011_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign arb_fu_459_p2 = (1'd1 ^ and_ln1258_reg_601);

assign icmp_ln89069_fu_370_p2 = ((c2_V_reg_197 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1562_fu_346_p2 = ((indvar_flatten15_reg_185 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1563_fu_554_p2 = ((c6_V_reg_301 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1564_fu_501_p2 = ((ap_phi_mux_c4_V_phi_fu_271_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1565_fu_412_p2 = ((ap_phi_mux_c4_V_39_phi_fu_237_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1566_fu_571_p2 = ((c7_V_reg_312 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1567_fu_518_p2 = ((indvar_flatten7_reg_279 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_1568_fu_429_p2 = ((indvar_flatten_reg_245 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_1569_fu_524_p2 = ((c7_V_21_reg_290 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1570_fu_435_p2 = ((c7_V_22_reg_256 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_340_p2 = ((indvar_flatten29_reg_174 == 14'd8192) ? 1'b1 : 1'b0);

assign local_A_ping_V_address1 = zext_ln890_233_fu_507_p1;

assign local_A_pong_V_address0 = zext_ln890_235_fu_544_p1;

assign local_A_pong_V_address1 = zext_ln890_234_fu_418_p1;

assign or_ln1257_fu_352_p2 = (intra_trans_en_reg_209 | icmp_ln890_1562_fu_346_p2);

assign or_ln1258_1_fu_394_p2 = (xor_ln1258_fu_388_p2 | icmp_ln890_1562_fu_346_p2);

assign or_ln1258_fu_382_p2 = (or_ln1257_fu_352_p2 | and_ln1257_1_fu_376_p2);

assign or_ln691_fu_470_p2 = (icmp_ln890_1562_reg_586 | and_ln1257_1_reg_592);

assign select_ln1280_fu_441_p3 = ((icmp_ln890_1570_fu_435_p2[0:0] == 1'b1) ? 4'd0 : c7_V_22_reg_256);

assign select_ln1311_fu_530_p3 = ((icmp_ln890_1569_fu_524_p2[0:0] == 1'b1) ? 4'd0 : c7_V_21_reg_290);

assign select_ln691_fu_474_p3 = ((or_ln691_fu_470_p2[0:0] == 1'b1) ? 6'd1 : add_ln691_1689_fu_464_p2);

assign select_ln890_fu_488_p3 = ((icmp_ln890_1562_reg_586[0:0] == 1'b1) ? 11'd1 : add_ln890_393_fu_482_p2);

assign xor_ln1257_fu_358_p2 = (icmp_ln890_1562_fu_346_p2 ^ 1'd1);

assign xor_ln1258_fu_388_p2 = (icmp_ln89069_fu_370_p2 ^ 1'd1);

assign zext_ln890_233_fu_507_p1 = c4_V_reg_267_pp2_iter1_reg;

assign zext_ln890_234_fu_418_p1 = c4_V_39_reg_233_pp0_iter1_reg;

assign zext_ln890_235_fu_544_p1 = select_ln1311_reg_672;

assign zext_ln890_236_fu_455_p1 = select_ln1280_reg_624;

assign zext_ln890_fu_566_p1 = c7_V_reg_312;

endmodule //top_A_IO_L2_in_boundary_x0
