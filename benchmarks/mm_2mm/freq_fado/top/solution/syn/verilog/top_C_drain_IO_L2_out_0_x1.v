// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_drain_IO_L2_out_0_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_dout,
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n,
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_read,
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_din,
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n,
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_write,
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_dout,
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n,
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_read
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] fifo_C_drain_C_drain_IO_L2_out_1_x1293_dout;
input   fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n;
output   fifo_C_drain_C_drain_IO_L2_out_1_x1293_read;
output  [127:0] fifo_C_drain_C_drain_IO_L2_out_0_x1292_din;
input   fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n;
output   fifo_C_drain_C_drain_IO_L2_out_0_x1292_write;
input  [127:0] fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_dout;
input   fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n;
output   fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_C_drain_IO_L2_out_1_x1293_read;
reg[127:0] fifo_C_drain_C_drain_IO_L2_out_0_x1292_din;
reg fifo_C_drain_C_drain_IO_L2_out_0_x1292_write;
reg fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_drain_C_drain_IO_L2_out_1_x1293_blk_n;
wire    ap_CS_fsm_state7;
reg    fifo_C_drain_C_drain_IO_L2_out_0_x1292_blk_n;
wire    ap_CS_fsm_state9;
reg    fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_blk_n;
wire   [4:0] add_ln691_fu_158_p2;
reg   [4:0] add_ln691_reg_248;
wire    ap_CS_fsm_state2;
wire   [4:0] add_ln691_537_fu_170_p2;
reg   [4:0] add_ln691_537_reg_256;
wire    ap_CS_fsm_state3;
wire   [3:0] add_ln691_538_fu_182_p2;
reg   [3:0] add_ln691_538_reg_264;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln870_fu_194_p2;
reg   [0:0] icmp_ln870_reg_272;
wire   [0:0] icmp_ln890_537_fu_188_p2;
wire   [3:0] add_ln691_541_fu_200_p2;
reg   [3:0] add_ln691_541_reg_276;
wire    ap_CS_fsm_state5;
wire   [3:0] add_ln691_539_fu_212_p2;
reg   [3:0] add_ln691_539_reg_284;
wire   [3:0] add_ln691_542_fu_224_p2;
reg   [3:0] add_ln691_542_reg_292;
wire    ap_CS_fsm_state6;
wire   [3:0] add_ln691_540_fu_236_p2;
reg   [3:0] add_ln691_540_reg_300;
wire    ap_CS_fsm_state8;
reg   [4:0] c0_V_reg_81;
wire   [0:0] icmp_ln890_536_fu_176_p2;
reg    ap_block_state1;
reg   [4:0] c1_V_reg_92;
wire   [0:0] icmp_ln890_fu_164_p2;
reg   [3:0] c3_V_reg_103;
wire   [0:0] icmp_ln890_538_fu_218_p2;
wire   [0:0] icmp_ln890_539_fu_206_p2;
reg   [3:0] c4_V_13_reg_114;
wire   [0:0] icmp_ln890_541_fu_230_p2;
reg   [3:0] c4_V_reg_125;
wire   [0:0] icmp_ln890_540_fu_242_p2;
reg   [3:0] c5_V_13_reg_136;
reg    ap_block_state7;
reg   [3:0] c5_V_reg_147;
reg    ap_block_state9;
reg   [8:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_164_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_81 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_536_fu_176_p2 == 1'd1))) begin
        c0_V_reg_81 <= add_ln691_reg_248;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_164_p2 == 1'd0))) begin
        c1_V_reg_92 <= 5'd0;
    end else if (((icmp_ln890_537_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_V_reg_92 <= add_ln691_537_reg_256;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln870_reg_272 == 1'd1) & (icmp_ln890_538_fu_218_p2 == 1'd1)) | ((icmp_ln870_reg_272 == 1'd0) & (icmp_ln890_539_fu_206_p2 == 1'd1))))) begin
        c3_V_reg_103 <= add_ln691_538_reg_264;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_536_fu_176_p2 == 1'd0))) begin
        c3_V_reg_103 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_537_fu_188_p2 == 1'd0) & (icmp_ln870_fu_194_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_13_reg_114 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_541_fu_230_p2 == 1'd1))) begin
        c4_V_13_reg_114 <= add_ln691_541_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_537_fu_188_p2 == 1'd0) & (icmp_ln870_fu_194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_reg_125 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln890_540_fu_242_p2 == 1'd1))) begin
        c4_V_reg_125 <= add_ln691_539_reg_284;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_272 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln890_539_fu_206_p2 == 1'd0))) begin
        c5_V_13_reg_136 <= 4'd0;
    end else if ((~((fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        c5_V_13_reg_136 <= add_ln691_542_reg_292;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_272 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln890_538_fu_218_p2 == 1'd0))) begin
        c5_V_reg_147 <= 4'd0;
    end else if ((~((fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        c5_V_reg_147 <= add_ln691_540_reg_300;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_537_reg_256 <= add_ln691_537_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln691_538_reg_264 <= add_ln691_538_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_272 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln691_539_reg_284 <= add_ln691_539_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln691_540_reg_300 <= add_ln691_540_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_272 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln691_541_reg_276 <= add_ln691_541_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln691_542_reg_292 <= add_ln691_542_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_248 <= add_ln691_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_537_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        icmp_ln870_reg_272 <= icmp_ln870_fu_194_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_164_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_164_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_blk_n = fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_read = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_blk_n = fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_din = fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_dout;
    end else if ((~((fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_din = fifo_C_drain_C_drain_IO_L2_out_1_x1293_dout;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_din = 'bx;
    end
end

always @ (*) begin
    if (((~((fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)))) begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_write = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_0_x1292_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_blk_n = fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_read = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L2_out_1_x1293_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_164_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln890_536_fu_176_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln890_537_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln870_reg_272 == 1'd1) & (icmp_ln890_538_fu_218_p2 == 1'd1)) | ((icmp_ln870_reg_272 == 1'd0) & (icmp_ln890_539_fu_206_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln870_reg_272 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln890_538_fu_218_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln890_541_fu_230_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln890_540_fu_242_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_537_fu_170_p2 = (c1_V_reg_92 + 5'd1);

assign add_ln691_538_fu_182_p2 = (c3_V_reg_103 + 4'd1);

assign add_ln691_539_fu_212_p2 = (c4_V_reg_125 + 4'd1);

assign add_ln691_540_fu_236_p2 = (c5_V_reg_147 + 4'd1);

assign add_ln691_541_fu_200_p2 = (c4_V_13_reg_114 + 4'd1);

assign add_ln691_542_fu_224_p2 = (c5_V_13_reg_136 + 4'd1);

assign add_ln691_fu_158_p2 = (c0_V_reg_81 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_1_x1293_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9 = ((fifo_C_drain_C_drain_IO_L1_out_0_0_x1228_empty_n == 1'b0) | (fifo_C_drain_C_drain_IO_L2_out_0_x1292_full_n == 1'b0));
end

assign icmp_ln870_fu_194_p2 = ((c3_V_reg_103 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln890_536_fu_176_p2 = ((c1_V_reg_92 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_537_fu_188_p2 = ((c3_V_reg_103 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_538_fu_218_p2 = ((c4_V_reg_125 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_539_fu_206_p2 = ((c4_V_13_reg_114 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_540_fu_242_p2 = ((c5_V_reg_147 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_541_fu_230_p2 = ((c5_V_13_reg_136 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_164_p2 = ((c0_V_reg_81 == 5'd16) ? 1'b1 : 1'b0);

endmodule //top_C_drain_IO_L2_out_0_x1
