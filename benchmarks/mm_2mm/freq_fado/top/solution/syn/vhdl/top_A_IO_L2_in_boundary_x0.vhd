-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_A_IO_L2_in_boundary_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_A_A_IO_L2_in_7_x011_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_A_IO_L2_in_7_x011_empty_n : IN STD_LOGIC;
    fifo_A_A_IO_L2_in_7_x011_read : OUT STD_LOGIC;
    fifo_A_PE_7_0_x083_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_PE_7_0_x083_full_n : IN STD_LOGIC;
    fifo_A_PE_7_0_x083_write : OUT STD_LOGIC );
end;


architecture behav of top_A_IO_L2_in_boundary_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_A_A_IO_L2_in_7_x011_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln890_1565_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln890_1564_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_A_PE_7_0_x083_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln890_1568_reg_620 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1568_reg_620_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln890_1567_reg_668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1567_reg_668_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal c4_V_39_reg_233 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_39_reg_233_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_reg_245 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_22_reg_256 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_reg_267 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_reg_267_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state12_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal indvar_flatten7_reg_279 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_21_reg_290 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_323 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_ping_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal reg_329 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln890_1568_reg_620_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal add_ln890_394_fu_334_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln890_394_reg_577 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln890_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1562_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1562_reg_586 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1257_1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1257_1_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1258_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1258_reg_597 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1258_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1258_reg_601 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1684_fu_406_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1684_reg_606 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln890_1565_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1565_reg_611_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln890_392_fu_423_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln890_1568_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1280_fu_441_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1280_reg_624 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1688_fu_449_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal arb_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal select_ln691_fu_474_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_fu_488_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_fu_495_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_reg_654 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal icmp_ln890_1564_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1564_reg_659_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln890_fu_512_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state16_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state17_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state19_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln890_1567_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1567_reg_668_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1311_fu_530_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1311_reg_672 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1687_fu_538_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal local_A_pong_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_pong_V_load_reg_687 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal add_ln691_1685_fu_548_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1685_reg_692 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal add_ln691_1686_fu_560_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1686_reg_700 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state16 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal local_A_ping_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_ping_V_ce0 : STD_LOGIC;
    signal local_A_ping_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_ping_V_ce1 : STD_LOGIC;
    signal local_A_ping_V_we1 : STD_LOGIC;
    signal local_A_pong_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_pong_V_ce0 : STD_LOGIC;
    signal local_A_pong_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_pong_V_ce1 : STD_LOGIC;
    signal local_A_pong_V_we1 : STD_LOGIC;
    signal indvar_flatten29_reg_174 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal indvar_flatten15_reg_185 : STD_LOGIC_VECTOR (10 downto 0);
    signal c2_V_reg_197 : STD_LOGIC_VECTOR (5 downto 0);
    signal intra_trans_en_reg_209 : STD_LOGIC_VECTOR (0 downto 0);
    signal arb_18_reg_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_c4_V_39_phi_fu_237_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_c4_V_phi_fu_271_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal c6_V_reg_301 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1566_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_V_reg_312 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1563_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln890_234_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_236_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_233_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_235_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal xor_ln1257_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89069_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1257_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1258_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1257_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1258_1_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1570_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln691_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1689_fu_464_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln890_393_fu_482_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln890_1569_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_A_IO_L2_in_boundary_x0_local_A_ping_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    local_A_ping_V_U : component top_A_IO_L2_in_boundary_x0_local_A_ping_V
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_ping_V_address0,
        ce0 => local_A_ping_V_ce0,
        q0 => local_A_ping_V_q0,
        address1 => local_A_ping_V_address1,
        ce1 => local_A_ping_V_ce1,
        we1 => local_A_ping_V_we1,
        d1 => reg_323);

    local_A_pong_V_U : component top_A_IO_L2_in_boundary_x0_local_A_ping_V
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_pong_V_address0,
        ce0 => local_A_pong_V_ce0,
        q0 => local_A_pong_V_q0,
        address1 => local_A_pong_V_address1,
        ce1 => local_A_pong_V_ce1,
        we1 => local_A_pong_V_we1,
        d1 => reg_323);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln890_1563_fu_554_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_0 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_lv1_0 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state7);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state12))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state12)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_lv1_1 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state16) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state16)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state16);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    arb_18_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                arb_18_reg_222 <= arb_fu_459_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                arb_18_reg_222 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    c2_V_reg_197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                c2_V_reg_197 <= select_ln691_fu_474_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c2_V_reg_197 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    c4_V_39_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then 
                c4_V_39_reg_233 <= ap_const_lv4_0;
            elsif (((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c4_V_39_reg_233 <= add_ln691_1684_reg_606;
            end if; 
        end if;
    end process;

    c4_V_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then 
                c4_V_reg_267 <= ap_const_lv4_0;
            elsif (((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                c4_V_reg_267 <= add_ln691_reg_654;
            end if; 
        end if;
    end process;

    c6_V_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_1))) then 
                c6_V_reg_301 <= ap_const_lv4_0;
            elsif (((icmp_ln890_1566_fu_571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                c6_V_reg_301 <= add_ln691_1685_reg_692;
            end if; 
        end if;
    end process;

    c7_V_21_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                c7_V_21_reg_290 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln890_1567_fu_518_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                c7_V_21_reg_290 <= add_ln691_1687_fu_538_p2;
            end if; 
        end if;
    end process;

    c7_V_22_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                c7_V_22_reg_256 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_1568_fu_429_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                c7_V_22_reg_256 <= add_ln691_1688_fu_449_p2;
            end if; 
        end if;
    end process;

    c7_V_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_1563_fu_554_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                c7_V_reg_312 <= ap_const_lv4_0;
            elsif (((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                c7_V_reg_312 <= add_ln691_1686_reg_700;
            end if; 
        end if;
    end process;

    indvar_flatten15_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                indvar_flatten15_reg_185 <= select_ln890_fu_488_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten15_reg_185 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten29_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                indvar_flatten29_reg_174 <= add_ln890_394_reg_577;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten29_reg_174 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten7_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                indvar_flatten7_reg_279 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln890_1567_fu_518_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten7_reg_279 <= add_ln890_fu_512_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (or_ln1258_reg_597 = ap_const_lv1_1))) then 
                indvar_flatten_reg_245 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_1568_fu_429_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten_reg_245 <= add_ln890_392_fu_423_p2;
            end if; 
        end if;
    end process;

    intra_trans_en_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                intra_trans_en_reg_209 <= ap_const_lv1_1;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                intra_trans_en_reg_209 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln691_1684_reg_606 <= add_ln691_1684_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                add_ln691_1685_reg_692 <= add_ln691_1685_fu_548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                add_ln691_1686_reg_700 <= add_ln691_1686_fu_560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln691_reg_654 <= add_ln691_fu_495_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln890_394_reg_577 <= add_ln890_394_fu_334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then
                and_ln1257_1_reg_592 <= and_ln1257_1_fu_376_p2;
                and_ln1258_reg_601 <= and_ln1258_fu_400_p2;
                icmp_ln890_1562_reg_586 <= icmp_ln890_1562_fu_346_p2;
                or_ln1258_reg_597 <= or_ln1258_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                c4_V_39_reg_233_pp0_iter1_reg <= c4_V_39_reg_233;
                icmp_ln890_1565_reg_611 <= icmp_ln890_1565_fu_412_p2;
                icmp_ln890_1565_reg_611_pp0_iter1_reg <= icmp_ln890_1565_reg_611;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                c4_V_reg_267_pp2_iter1_reg <= c4_V_reg_267;
                icmp_ln890_1564_reg_659 <= icmp_ln890_1564_fu_501_p2;
                icmp_ln890_1564_reg_659_pp2_iter1_reg <= icmp_ln890_1564_reg_659;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln890_1567_reg_668 <= icmp_ln890_1567_fu_518_p2;
                icmp_ln890_1567_reg_668_pp3_iter1_reg <= icmp_ln890_1567_reg_668;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln890_1567_reg_668_pp3_iter2_reg <= icmp_ln890_1567_reg_668_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln890_1568_reg_620 <= icmp_ln890_1568_fu_429_p2;
                icmp_ln890_1568_reg_620_pp1_iter1_reg <= icmp_ln890_1568_reg_620;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln890_1568_reg_620_pp1_iter2_reg <= icmp_ln890_1568_reg_620_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln890_1567_reg_668_pp3_iter1_reg = ap_const_lv1_0))) then
                local_A_pong_V_load_reg_687 <= local_A_pong_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_323 <= fifo_A_A_IO_L2_in_7_x011_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_1568_reg_620_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then
                reg_329 <= local_A_ping_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_1568_fu_429_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln1280_reg_624 <= select_ln1280_fu_441_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln890_1567_fu_518_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                select_ln1311_reg_672 <= select_ln1311_fu_530_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp3_iter3, ap_CS_fsm_state23, ap_enable_reg_pp1_iter2, ap_CS_fsm_state2, icmp_ln890_fu_340_p2, or_ln1258_reg_597, and_ln1258_fu_400_p2, ap_enable_reg_pp0_iter0, icmp_ln890_1565_fu_412_p2, ap_enable_reg_pp1_iter0, icmp_ln890_1568_fu_429_p2, ap_enable_reg_pp2_iter0, icmp_ln890_1564_fu_501_p2, ap_enable_reg_pp3_iter0, icmp_ln890_1567_fu_518_p2, ap_enable_reg_pp3_iter2, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_CS_fsm_state6, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter2, ap_CS_fsm_state15, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, icmp_ln890_1566_fu_571_p2, icmp_ln890_1563_fu_554_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_lv1_1 = and_ln1258_fu_400_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_340_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_1565_fu_412_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_1565_fu_412_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (or_ln1258_reg_597 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln890_1568_fu_429_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln890_1568_fu_429_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln890_1564_fu_501_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln890_1564_fu_501_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln1258_reg_597 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (icmp_ln890_1567_fu_518_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (icmp_ln890_1567_fu_518_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln890_1563_fu_554_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln890_1566_fu_571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln691_1684_fu_406_p2 <= std_logic_vector(unsigned(ap_phi_mux_c4_V_39_phi_fu_237_p4) + unsigned(ap_const_lv4_1));
    add_ln691_1685_fu_548_p2 <= std_logic_vector(unsigned(c6_V_reg_301) + unsigned(ap_const_lv4_1));
    add_ln691_1686_fu_560_p2 <= std_logic_vector(unsigned(c7_V_reg_312) + unsigned(ap_const_lv4_1));
    add_ln691_1687_fu_538_p2 <= std_logic_vector(unsigned(select_ln1311_fu_530_p3) + unsigned(ap_const_lv4_1));
    add_ln691_1688_fu_449_p2 <= std_logic_vector(unsigned(select_ln1280_fu_441_p3) + unsigned(ap_const_lv4_1));
    add_ln691_1689_fu_464_p2 <= std_logic_vector(unsigned(c2_V_reg_197) + unsigned(ap_const_lv6_1));
    add_ln691_fu_495_p2 <= std_logic_vector(unsigned(ap_phi_mux_c4_V_phi_fu_271_p4) + unsigned(ap_const_lv4_1));
    add_ln890_392_fu_423_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_245) + unsigned(ap_const_lv7_1));
    add_ln890_393_fu_482_p2 <= std_logic_vector(unsigned(indvar_flatten15_reg_185) + unsigned(ap_const_lv11_1));
    add_ln890_394_fu_334_p2 <= std_logic_vector(unsigned(indvar_flatten29_reg_174) + unsigned(ap_const_lv14_1));
    add_ln890_fu_512_p2 <= std_logic_vector(unsigned(indvar_flatten7_reg_279) + unsigned(ap_const_lv7_1));
    and_ln1257_1_fu_376_p2 <= (xor_ln1257_fu_358_p2 and icmp_ln89069_fu_370_p2);
    and_ln1257_fu_364_p2 <= (xor_ln1257_fu_358_p2 and arb_18_reg_222);
    and_ln1258_fu_400_p2 <= (or_ln1258_1_fu_394_p2 and and_ln1257_fu_364_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(5);
    ap_CS_fsm_state15 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(9);
    ap_CS_fsm_state21 <= ap_CS_fsm(10);
    ap_CS_fsm_state22 <= ap_CS_fsm(11);
    ap_CS_fsm_state23 <= ap_CS_fsm(12);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp0_iter1, icmp_ln890_1565_reg_611)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp0_iter1, icmp_ln890_1565_reg_611)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter3, icmp_ln890_1568_reg_620_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_01001 <= ((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter3, icmp_ln890_1568_reg_620_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter3, icmp_ln890_1568_reg_620_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp2_iter1, icmp_ln890_1564_reg_659)
    begin
                ap_block_pp2_stage0_11001 <= ((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp2_iter1, icmp_ln890_1564_reg_659)
    begin
                ap_block_pp2_stage0_subdone <= ((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp3_iter3, icmp_ln890_1567_reg_668_pp3_iter2_reg)
    begin
                ap_block_pp3_stage0_01001 <= ((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp3_iter3, icmp_ln890_1567_reg_668_pp3_iter2_reg)
    begin
                ap_block_pp3_stage0_11001 <= ((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp3_iter3, icmp_ln890_1567_reg_668_pp3_iter2_reg)
    begin
                ap_block_pp3_stage0_subdone <= ((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp1_stage0_iter3_assign_proc : process(fifo_A_PE_7_0_x083_full_n, icmp_ln890_1568_reg_620_pp1_iter2_reg)
    begin
                ap_block_state10_pp1_stage0_iter3 <= ((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;

        ap_block_state12_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp2_stage0_iter1_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, icmp_ln890_1564_reg_659)
    begin
                ap_block_state13_pp2_stage0_iter1 <= ((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_state14_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp3_stage0_iter3_assign_proc : process(fifo_A_PE_7_0_x083_full_n, icmp_ln890_1567_reg_668_pp3_iter2_reg)
    begin
                ap_block_state19_pp3_stage0_iter3 <= ((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, icmp_ln890_1565_reg_611)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln890_1565_fu_412_p2)
    begin
        if ((icmp_ln890_1565_fu_412_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state7_assign_proc : process(icmp_ln890_1568_fu_429_p2)
    begin
        if ((icmp_ln890_1568_fu_429_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state12_assign_proc : process(icmp_ln890_1564_fu_501_p2)
    begin
        if ((icmp_ln890_1564_fu_501_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state16_assign_proc : process(icmp_ln890_1567_fu_518_p2)
    begin
        if ((icmp_ln890_1567_fu_518_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state20, icmp_ln890_1563_fu_554_p2)
    begin
        if (((icmp_ln890_1563_fu_554_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c4_V_39_phi_fu_237_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_1565_reg_611, c4_V_39_reg_233, add_ln691_1684_reg_606)
    begin
        if (((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_c4_V_39_phi_fu_237_p4 <= add_ln691_1684_reg_606;
        else 
            ap_phi_mux_c4_V_39_phi_fu_237_p4 <= c4_V_39_reg_233;
        end if; 
    end process;


    ap_phi_mux_c4_V_phi_fu_271_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln890_1564_reg_659, c4_V_reg_267, add_ln691_reg_654)
    begin
        if (((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_c4_V_phi_fu_271_p4 <= add_ln691_reg_654;
        else 
            ap_phi_mux_c4_V_phi_fu_271_p4 <= c4_V_reg_267;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state20, icmp_ln890_1563_fu_554_p2)
    begin
        if (((icmp_ln890_1563_fu_554_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arb_fu_459_p2 <= (ap_const_lv1_1 xor and_ln1258_reg_601);

    fifo_A_A_IO_L2_in_7_x011_blk_n_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_1565_reg_611, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln890_1564_reg_659)
    begin
        if ((((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_A_A_IO_L2_in_7_x011_blk_n <= fifo_A_A_IO_L2_in_7_x011_empty_n;
        else 
            fifo_A_A_IO_L2_in_7_x011_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_A_IO_L2_in_7_x011_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln890_1565_reg_611, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln890_1564_reg_659, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((icmp_ln890_1564_reg_659 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln890_1565_reg_611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_A_A_IO_L2_in_7_x011_read <= ap_const_logic_1;
        else 
            fifo_A_A_IO_L2_in_7_x011_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_A_PE_7_0_x083_blk_n_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, icmp_ln890_1568_reg_620_pp1_iter2_reg, ap_enable_reg_pp3_iter3, ap_block_pp3_stage0, icmp_ln890_1567_reg_668_pp3_iter2_reg, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            fifo_A_PE_7_0_x083_blk_n <= fifo_A_PE_7_0_x083_full_n;
        else 
            fifo_A_PE_7_0_x083_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_PE_7_0_x083_din_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter3, icmp_ln890_1568_reg_620_pp1_iter2_reg, ap_enable_reg_pp3_iter3, icmp_ln890_1567_reg_668_pp3_iter2_reg, ap_CS_fsm_state23, reg_329, local_A_pong_V_load_reg_687, ap_block_pp1_stage0_01001, ap_block_pp3_stage0_01001)
    begin
        if (((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001))) then 
            fifo_A_PE_7_0_x083_din <= local_A_pong_V_load_reg_687;
        elsif ((((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001)) or ((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            fifo_A_PE_7_0_x083_din <= reg_329;
        else 
            fifo_A_PE_7_0_x083_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_A_PE_7_0_x083_write_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter3, icmp_ln890_1568_reg_620_pp1_iter2_reg, ap_enable_reg_pp3_iter3, icmp_ln890_1567_reg_668_pp3_iter2_reg, ap_CS_fsm_state23, ap_block_pp1_stage0_11001, ap_block_pp3_stage0_11001)
    begin
        if ((((icmp_ln890_1567_reg_668_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln890_1568_reg_620_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            fifo_A_PE_7_0_x083_write <= ap_const_logic_1;
        else 
            fifo_A_PE_7_0_x083_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln89069_fu_370_p2 <= "1" when (c2_V_reg_197 = ap_const_lv6_20) else "0";
    icmp_ln890_1562_fu_346_p2 <= "1" when (indvar_flatten15_reg_185 = ap_const_lv11_200) else "0";
    icmp_ln890_1563_fu_554_p2 <= "1" when (c6_V_reg_301 = ap_const_lv4_8) else "0";
    icmp_ln890_1564_fu_501_p2 <= "1" when (ap_phi_mux_c4_V_phi_fu_271_p4 = ap_const_lv4_8) else "0";
    icmp_ln890_1565_fu_412_p2 <= "1" when (ap_phi_mux_c4_V_39_phi_fu_237_p4 = ap_const_lv4_8) else "0";
    icmp_ln890_1566_fu_571_p2 <= "1" when (c7_V_reg_312 = ap_const_lv4_8) else "0";
    icmp_ln890_1567_fu_518_p2 <= "1" when (indvar_flatten7_reg_279 = ap_const_lv7_40) else "0";
    icmp_ln890_1568_fu_429_p2 <= "1" when (indvar_flatten_reg_245 = ap_const_lv7_40) else "0";
    icmp_ln890_1569_fu_524_p2 <= "1" when (c7_V_21_reg_290 = ap_const_lv4_8) else "0";
    icmp_ln890_1570_fu_435_p2 <= "1" when (c7_V_22_reg_256 = ap_const_lv4_8) else "0";
    icmp_ln890_fu_340_p2 <= "1" when (indvar_flatten29_reg_174 = ap_const_lv14_2000) else "0";

    local_A_ping_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1, zext_ln890_236_fu_455_p1, zext_ln890_fu_566_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            local_A_ping_V_address0 <= zext_ln890_fu_566_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            local_A_ping_V_address0 <= zext_ln890_236_fu_455_p1(3 - 1 downto 0);
        else 
            local_A_ping_V_address0 <= "XXX";
        end if; 
    end process;

    local_A_ping_V_address1 <= zext_ln890_233_fu_507_p1(3 - 1 downto 0);

    local_A_ping_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            local_A_ping_V_ce0 <= ap_const_logic_1;
        else 
            local_A_ping_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            local_A_ping_V_ce1 <= ap_const_logic_1;
        else 
            local_A_ping_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_we1_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln890_1564_reg_659_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln890_1564_reg_659_pp2_iter1_reg = ap_const_lv1_0))) then 
            local_A_ping_V_we1 <= ap_const_logic_1;
        else 
            local_A_ping_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    local_A_pong_V_address0 <= zext_ln890_235_fu_544_p1(3 - 1 downto 0);
    local_A_pong_V_address1 <= zext_ln890_234_fu_418_p1(3 - 1 downto 0);

    local_A_pong_V_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            local_A_pong_V_ce0 <= ap_const_logic_1;
        else 
            local_A_pong_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            local_A_pong_V_ce1 <= ap_const_logic_1;
        else 
            local_A_pong_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln890_1565_reg_611_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln890_1565_reg_611_pp0_iter1_reg = ap_const_lv1_0))) then 
            local_A_pong_V_we1 <= ap_const_logic_1;
        else 
            local_A_pong_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1257_fu_352_p2 <= (intra_trans_en_reg_209 or icmp_ln890_1562_fu_346_p2);
    or_ln1258_1_fu_394_p2 <= (xor_ln1258_fu_388_p2 or icmp_ln890_1562_fu_346_p2);
    or_ln1258_fu_382_p2 <= (or_ln1257_fu_352_p2 or and_ln1257_1_fu_376_p2);
    or_ln691_fu_470_p2 <= (icmp_ln890_1562_reg_586 or and_ln1257_1_reg_592);
    select_ln1280_fu_441_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_1570_fu_435_p2(0) = '1') else 
        c7_V_22_reg_256;
    select_ln1311_fu_530_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_1569_fu_524_p2(0) = '1') else 
        c7_V_21_reg_290;
    select_ln691_fu_474_p3 <= 
        ap_const_lv6_1 when (or_ln691_fu_470_p2(0) = '1') else 
        add_ln691_1689_fu_464_p2;
    select_ln890_fu_488_p3 <= 
        ap_const_lv11_1 when (icmp_ln890_1562_reg_586(0) = '1') else 
        add_ln890_393_fu_482_p2;
    xor_ln1257_fu_358_p2 <= (icmp_ln890_1562_fu_346_p2 xor ap_const_lv1_1);
    xor_ln1258_fu_388_p2 <= (icmp_ln89069_fu_370_p2 xor ap_const_lv1_1);
    zext_ln890_233_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c4_V_reg_267_pp2_iter1_reg),64));
    zext_ln890_234_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c4_V_39_reg_233_pp0_iter1_reg),64));
    zext_ln890_235_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1311_reg_672),64));
    zext_ln890_236_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1280_reg_624),64));
    zext_ln890_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c7_V_reg_312),64));
end behav;
