-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_A_IO_L2_in_boundary_x1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_A_A_IO_L2_in_7_x111_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_A_IO_L2_in_7_x111_empty_n : IN STD_LOGIC;
    fifo_A_A_IO_L2_in_7_x111_read : OUT STD_LOGIC;
    fifo_A_PE_7_0_x183_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_PE_7_0_x183_full_n : IN STD_LOGIC;
    fifo_A_PE_7_0_x183_write : OUT STD_LOGIC );
end;


architecture behav of top_A_IO_L2_in_boundary_x1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_A_A_IO_L2_in_7_x111_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal fifo_A_PE_7_0_x183_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal add_ln691_fu_325_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_reg_486 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln691_1806_fu_337_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_1806_reg_494 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln691_1809_fu_349_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln691_1809_reg_502 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln691_1808_fu_361_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1808_reg_510 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln890_258_fu_367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_258_reg_515 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln691_1812_fu_377_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1812_reg_523 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal arb_17_reg_225 : STD_LOGIC_VECTOR (0 downto 0);
    signal intra_trans_en_34_reg_212 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1810_fu_389_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1810_reg_531 : STD_LOGIC_VECTOR (3 downto 0);
    signal arb_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1650_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1651_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1813_fu_407_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1813_reg_544 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln890_1653_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1807_fu_424_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1807_reg_557 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln890_257_fu_430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_257_reg_562 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln691_1811_fu_440_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1811_reg_570 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln890_1652_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1804_fu_457_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1804_reg_583 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln691_1805_fu_469_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1805_reg_591 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln890_1646_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_A_ping_V_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_ping_V_0_ce0 : STD_LOGIC;
    signal local_A_ping_V_0_we0 : STD_LOGIC;
    signal local_A_ping_V_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_pong_V_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_pong_V_0_ce0 : STD_LOGIC;
    signal local_A_pong_V_0_we0 : STD_LOGIC;
    signal local_A_pong_V_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal c0_V_reg_152 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_1645_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal intra_trans_en_reg_163 : STD_LOGIC_VECTOR (0 downto 0);
    signal c1_V_reg_177 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_1647_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal intra_trans_en_33_reg_188 : STD_LOGIC_VECTOR (0 downto 0);
    signal c2_V_reg_201 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_arb_17_phi_fu_229_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_V_59_reg_237 : STD_LOGIC_VECTOR (3 downto 0);
    signal c6_V_34_reg_248 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1649_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_33_reg_259 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1648_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_V_34_reg_270 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_reg_281 : STD_LOGIC_VECTOR (3 downto 0);
    signal c7_V_33_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal c6_V_reg_303 : STD_LOGIC_VECTOR (3 downto 0);
    signal c7_V_reg_314 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1644_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln890_260_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_259_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_fu_475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component top_A_IO_L2_in_boundary_x0_local_A_ping_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    local_A_ping_V_0_U : component top_A_IO_L2_in_boundary_x0_local_A_ping_V_0
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_ping_V_0_address0,
        ce0 => local_A_ping_V_0_ce0,
        we0 => local_A_ping_V_0_we0,
        d0 => fifo_A_A_IO_L2_in_7_x111_dout,
        q0 => local_A_ping_V_0_q0);

    local_A_pong_V_0_U : component top_A_IO_L2_in_boundary_x0_local_A_ping_V_0
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_pong_V_0_address0,
        ce0 => local_A_pong_V_0_ce0,
        we0 => local_A_pong_V_0_we0,
        d0 => fifo_A_A_IO_L2_in_7_x111_dout,
        q0 => local_A_pong_V_0_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln890_1644_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    arb_17_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((intra_trans_en_34_reg_212 = ap_const_lv1_0) or ((icmp_ln890_1650_fu_395_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) or ((icmp_ln890_1651_fu_383_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_0))))) then 
                arb_17_reg_225 <= arb_fu_401_p2;
            elsif (((icmp_ln890_1645_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                arb_17_reg_225 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    c0_V_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c0_V_reg_152 <= ap_const_lv5_0;
            elsif (((icmp_ln890_1645_fu_343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c0_V_reg_152 <= add_ln691_reg_486;
            end if; 
        end if;
    end process;

    c1_V_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_fu_331_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c1_V_reg_177 <= ap_const_lv5_0;
            elsif (((icmp_ln890_1647_fu_355_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c1_V_reg_177 <= add_ln691_1806_reg_494;
            end if; 
        end if;
    end process;

    c2_V_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((intra_trans_en_34_reg_212 = ap_const_lv1_0) or ((icmp_ln890_1650_fu_395_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) or ((icmp_ln890_1651_fu_383_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_0))))) then 
                c2_V_reg_201 <= add_ln691_1809_reg_502;
            elsif (((icmp_ln890_1645_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c2_V_reg_201 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    c4_V_59_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_arb_17_phi_fu_229_p4 = ap_const_lv1_0) and (icmp_ln890_1647_fu_355_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c4_V_59_reg_237 <= ap_const_lv4_0;
            elsif (((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                c4_V_59_reg_237 <= add_ln691_1808_reg_510;
            end if; 
        end if;
    end process;

    c4_V_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_arb_17_phi_fu_229_p4 = ap_const_lv1_1) and (icmp_ln890_1647_fu_355_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c4_V_reg_281 <= ap_const_lv4_0;
            elsif (((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                c4_V_reg_281 <= add_ln691_1807_reg_557;
            end if; 
        end if;
    end process;

    c6_V_33_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_1648_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10) and (intra_trans_en_34_reg_212 = ap_const_lv1_1))) then 
                c6_V_33_reg_259 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln890_1652_fu_451_p2 = ap_const_lv1_1))) then 
                c6_V_33_reg_259 <= add_ln691_1810_reg_531;
            end if; 
        end if;
    end process;

    c6_V_34_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_1649_fu_371_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (intra_trans_en_34_reg_212 = ap_const_lv1_1))) then 
                c6_V_34_reg_248 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln890_1653_fu_418_p2 = ap_const_lv1_1))) then 
                c6_V_34_reg_248 <= add_ln691_1812_reg_523;
            end if; 
        end if;
    end process;

    c6_V_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_fu_331_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c6_V_reg_303 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln890_1646_fu_480_p2 = ap_const_lv1_1))) then 
                c6_V_reg_303 <= add_ln691_1804_reg_583;
            end if; 
        end if;
    end process;

    c7_V_33_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln890_1650_fu_395_p2 = ap_const_lv1_0) and (intra_trans_en_34_reg_212 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) then 
                c7_V_33_reg_292 <= ap_const_lv4_0;
            elsif (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                c7_V_33_reg_292 <= add_ln691_1811_reg_570;
            end if; 
        end if;
    end process;

    c7_V_34_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln890_1651_fu_383_p2 = ap_const_lv1_0) and (intra_trans_en_34_reg_212 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_0))) then 
                c7_V_34_reg_270 <= ap_const_lv4_0;
            elsif (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                c7_V_34_reg_270 <= add_ln691_1813_reg_544;
            end if; 
        end if;
    end process;

    c7_V_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_1644_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                c7_V_reg_314 <= ap_const_lv4_0;
            elsif (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                c7_V_reg_314 <= add_ln691_1805_reg_591;
            end if; 
        end if;
    end process;

    intra_trans_en_33_reg_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_fu_331_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                intra_trans_en_33_reg_188 <= intra_trans_en_reg_163;
            elsif (((icmp_ln890_1647_fu_355_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                intra_trans_en_33_reg_188 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    intra_trans_en_34_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((intra_trans_en_34_reg_212 = ap_const_lv1_0) or ((icmp_ln890_1650_fu_395_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) or ((icmp_ln890_1651_fu_383_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_0))))) then 
                intra_trans_en_34_reg_212 <= ap_const_lv1_1;
            elsif (((icmp_ln890_1645_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                intra_trans_en_34_reg_212 <= intra_trans_en_33_reg_188;
            end if; 
        end if;
    end process;

    intra_trans_en_reg_163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                intra_trans_en_reg_163 <= ap_const_lv1_0;
            elsif (((icmp_ln890_1645_fu_343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                intra_trans_en_reg_163 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_ln691_1804_reg_583 <= add_ln691_1804_fu_457_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln691_1805_reg_591 <= add_ln691_1805_fu_469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln691_1806_reg_494 <= add_ln691_1806_fu_337_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln691_1807_reg_557 <= add_ln691_1807_fu_424_p2;
                    zext_ln890_257_reg_562(3 downto 0) <= zext_ln890_257_fu_430_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln691_1808_reg_510 <= add_ln691_1808_fu_361_p2;
                    zext_ln890_258_reg_515(3 downto 0) <= zext_ln890_258_fu_367_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln691_1809_reg_502 <= add_ln691_1809_fu_349_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (intra_trans_en_34_reg_212 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) then
                add_ln691_1810_reg_531 <= add_ln691_1810_fu_389_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln691_1811_reg_570 <= add_ln691_1811_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (intra_trans_en_34_reg_212 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_0))) then
                add_ln691_1812_reg_523 <= add_ln691_1812_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln691_1813_reg_544 <= add_ln691_1813_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_486 <= add_ln691_fu_325_p2;
            end if;
        end if;
    end process;
    zext_ln890_258_reg_515(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln890_257_reg_562(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_A_A_IO_L2_in_7_x111_empty_n, fifo_A_PE_7_0_x183_full_n, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state7, arb_17_reg_225, intra_trans_en_34_reg_212, icmp_ln890_1650_fu_395_p2, icmp_ln890_1651_fu_383_p2, ap_CS_fsm_state8, icmp_ln890_1653_fu_418_p2, ap_CS_fsm_state10, ap_CS_fsm_state12, icmp_ln890_1652_fu_451_p2, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln890_1646_fu_480_p2, icmp_ln890_1645_fu_343_p2, icmp_ln890_1647_fu_355_p2, icmp_ln890_fu_331_p2, ap_phi_mux_arb_17_phi_fu_229_p4, icmp_ln890_1649_fu_371_p2, icmp_ln890_1648_fu_434_p2, icmp_ln890_1644_fu_463_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln890_fu_331_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_1645_fu_343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln890_1647_fu_355_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_phi_mux_arb_17_phi_fu_229_p4 = ap_const_lv1_1) and (icmp_ln890_1647_fu_355_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln890_1649_fu_371_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((intra_trans_en_34_reg_212 = ap_const_lv1_0) or ((icmp_ln890_1650_fu_395_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) or ((icmp_ln890_1651_fu_383_p2 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln890_1650_fu_395_p2 = ap_const_lv1_0) and (intra_trans_en_34_reg_212 = ap_const_lv1_1) and (arb_17_reg_225 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln890_1653_fu_418_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln890_1648_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln890_1652_fu_451_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln890_1644_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln890_1646_fu_480_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln691_1804_fu_457_p2 <= std_logic_vector(unsigned(c6_V_reg_303) + unsigned(ap_const_lv4_1));
    add_ln691_1805_fu_469_p2 <= std_logic_vector(unsigned(c7_V_reg_314) + unsigned(ap_const_lv4_1));
    add_ln691_1806_fu_337_p2 <= std_logic_vector(unsigned(c1_V_reg_177) + unsigned(ap_const_lv5_1));
    add_ln691_1807_fu_424_p2 <= std_logic_vector(unsigned(c4_V_reg_281) + unsigned(ap_const_lv4_1));
    add_ln691_1808_fu_361_p2 <= std_logic_vector(unsigned(c4_V_59_reg_237) + unsigned(ap_const_lv4_1));
    add_ln691_1809_fu_349_p2 <= std_logic_vector(unsigned(c2_V_reg_201) + unsigned(ap_const_lv6_1));
    add_ln691_1810_fu_389_p2 <= std_logic_vector(unsigned(c6_V_33_reg_259) + unsigned(ap_const_lv4_1));
    add_ln691_1811_fu_440_p2 <= std_logic_vector(unsigned(c7_V_33_reg_292) + unsigned(ap_const_lv4_1));
    add_ln691_1812_fu_377_p2 <= std_logic_vector(unsigned(c6_V_34_reg_248) + unsigned(ap_const_lv4_1));
    add_ln691_1813_fu_407_p2 <= std_logic_vector(unsigned(c7_V_34_reg_270) + unsigned(ap_const_lv4_1));
    add_ln691_fu_325_p2 <= std_logic_vector(unsigned(c0_V_reg_152) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14, icmp_ln890_1644_fu_463_p2)
    begin
        if (((icmp_ln890_1644_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_arb_17_phi_fu_229_p4 <= arb_17_reg_225;

    ap_ready_assign_proc : process(ap_CS_fsm_state14, icmp_ln890_1644_fu_463_p2)
    begin
        if (((icmp_ln890_1644_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arb_fu_401_p2 <= (arb_17_reg_225 xor ap_const_lv1_1);

    fifo_A_A_IO_L2_in_7_x111_blk_n_assign_proc : process(fifo_A_A_IO_L2_in_7_x111_empty_n, ap_CS_fsm_state6, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fifo_A_A_IO_L2_in_7_x111_blk_n <= fifo_A_A_IO_L2_in_7_x111_empty_n;
        else 
            fifo_A_A_IO_L2_in_7_x111_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_A_IO_L2_in_7_x111_read_assign_proc : process(fifo_A_A_IO_L2_in_7_x111_empty_n, ap_CS_fsm_state6, ap_CS_fsm_state11)
    begin
        if ((((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            fifo_A_A_IO_L2_in_7_x111_read <= ap_const_logic_1;
        else 
            fifo_A_A_IO_L2_in_7_x111_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_A_PE_7_0_x183_blk_n_assign_proc : process(fifo_A_PE_7_0_x183_full_n, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fifo_A_PE_7_0_x183_blk_n <= fifo_A_PE_7_0_x183_full_n;
        else 
            fifo_A_PE_7_0_x183_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_PE_7_0_x183_din_assign_proc : process(fifo_A_PE_7_0_x183_full_n, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state16, local_A_ping_V_0_q0, local_A_pong_V_0_q0)
    begin
        if (((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            fifo_A_PE_7_0_x183_din <= local_A_pong_V_0_q0;
        elsif ((((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            fifo_A_PE_7_0_x183_din <= local_A_ping_V_0_q0;
        else 
            fifo_A_PE_7_0_x183_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_A_PE_7_0_x183_write_assign_proc : process(fifo_A_PE_7_0_x183_full_n, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state16)
    begin
        if ((((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((fifo_A_PE_7_0_x183_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            fifo_A_PE_7_0_x183_write <= ap_const_logic_1;
        else 
            fifo_A_PE_7_0_x183_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln890_1644_fu_463_p2 <= "1" when (c6_V_reg_303 = ap_const_lv4_8) else "0";
    icmp_ln890_1645_fu_343_p2 <= "1" when (c1_V_reg_177 = ap_const_lv5_10) else "0";
    icmp_ln890_1646_fu_480_p2 <= "1" when (c7_V_reg_314 = ap_const_lv4_8) else "0";
    icmp_ln890_1647_fu_355_p2 <= "1" when (c2_V_reg_201 = ap_const_lv6_20) else "0";
    icmp_ln890_1648_fu_434_p2 <= "1" when (c4_V_reg_281 = ap_const_lv4_8) else "0";
    icmp_ln890_1649_fu_371_p2 <= "1" when (c4_V_59_reg_237 = ap_const_lv4_8) else "0";
    icmp_ln890_1650_fu_395_p2 <= "1" when (c6_V_33_reg_259 = ap_const_lv4_8) else "0";
    icmp_ln890_1651_fu_383_p2 <= "1" when (c6_V_34_reg_248 = ap_const_lv4_8) else "0";
    icmp_ln890_1652_fu_451_p2 <= "1" when (c7_V_33_reg_292 = ap_const_lv4_8) else "0";
    icmp_ln890_1653_fu_418_p2 <= "1" when (c7_V_34_reg_270 = ap_const_lv4_8) else "0";
    icmp_ln890_fu_331_p2 <= "1" when (c0_V_reg_152 = ap_const_lv5_10) else "0";

    local_A_ping_V_0_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state8, zext_ln890_257_reg_562, ap_CS_fsm_state15, zext_ln890_260_fu_413_p1, zext_ln890_fu_475_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            local_A_ping_V_0_address0 <= zext_ln890_fu_475_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            local_A_ping_V_0_address0 <= zext_ln890_257_reg_562(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            local_A_ping_V_0_address0 <= zext_ln890_260_fu_413_p1(3 - 1 downto 0);
        else 
            local_A_ping_V_0_address0 <= "XXX";
        end if; 
    end process;


    local_A_ping_V_0_ce0_assign_proc : process(fifo_A_A_IO_L2_in_7_x111_empty_n, ap_CS_fsm_state11, ap_CS_fsm_state8, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            local_A_ping_V_0_ce0 <= ap_const_logic_1;
        else 
            local_A_ping_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_0_we0_assign_proc : process(fifo_A_A_IO_L2_in_7_x111_empty_n, ap_CS_fsm_state11)
    begin
        if (((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            local_A_ping_V_0_we0 <= ap_const_logic_1;
        else 
            local_A_ping_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_0_address0_assign_proc : process(ap_CS_fsm_state6, zext_ln890_258_reg_515, ap_CS_fsm_state12, zext_ln890_259_fu_446_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            local_A_pong_V_0_address0 <= zext_ln890_259_fu_446_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            local_A_pong_V_0_address0 <= zext_ln890_258_reg_515(3 - 1 downto 0);
        else 
            local_A_pong_V_0_address0 <= "XXX";
        end if; 
    end process;


    local_A_pong_V_0_ce0_assign_proc : process(fifo_A_A_IO_L2_in_7_x111_empty_n, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            local_A_pong_V_0_ce0 <= ap_const_logic_1;
        else 
            local_A_pong_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_0_we0_assign_proc : process(fifo_A_A_IO_L2_in_7_x111_empty_n, ap_CS_fsm_state6)
    begin
        if (((fifo_A_A_IO_L2_in_7_x111_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            local_A_pong_V_0_we0 <= ap_const_logic_1;
        else 
            local_A_pong_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln890_257_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c4_V_reg_281),64));
    zext_ln890_258_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c4_V_59_reg_237),64));
    zext_ln890_259_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c7_V_33_reg_292),64));
    zext_ln890_260_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c7_V_34_reg_270),64));
    zext_ln890_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c7_V_reg_314),64));
end behav;
