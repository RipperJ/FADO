// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_A_IO_L2_in_boundary_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_7_x111_dout,
        fifo_A_A_IO_L2_in_7_x111_empty_n,
        fifo_A_A_IO_L2_in_7_x111_read,
        fifo_A_PE_7_0_x183_din,
        fifo_A_PE_7_0_x183_full_n,
        fifo_A_PE_7_0_x183_write
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_A_A_IO_L2_in_7_x111_dout;
input   fifo_A_A_IO_L2_in_7_x111_empty_n;
output   fifo_A_A_IO_L2_in_7_x111_read;
output  [511:0] fifo_A_PE_7_0_x183_din;
input   fifo_A_PE_7_0_x183_full_n;
output   fifo_A_PE_7_0_x183_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_A_IO_L2_in_7_x111_read;
reg[511:0] fifo_A_PE_7_0_x183_din;
reg fifo_A_PE_7_0_x183_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_A_IO_L2_in_7_x111_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
reg    fifo_A_PE_7_0_x183_blk_n;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state16;
wire   [4:0] add_ln691_fu_325_p2;
reg   [4:0] add_ln691_reg_486;
wire    ap_CS_fsm_state2;
wire   [4:0] add_ln691_1806_fu_337_p2;
reg   [4:0] add_ln691_1806_reg_494;
wire    ap_CS_fsm_state3;
wire   [5:0] add_ln691_1809_fu_349_p2;
reg   [5:0] add_ln691_1809_reg_502;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln691_1808_fu_361_p2;
reg   [3:0] add_ln691_1808_reg_510;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln890_258_fu_367_p1;
reg   [63:0] zext_ln890_258_reg_515;
wire   [3:0] add_ln691_1812_fu_377_p2;
reg   [3:0] add_ln691_1812_reg_523;
wire    ap_CS_fsm_state7;
reg   [0:0] arb_17_reg_225;
reg   [0:0] intra_trans_en_34_reg_212;
wire   [3:0] add_ln691_1810_fu_389_p2;
reg   [3:0] add_ln691_1810_reg_531;
wire   [0:0] arb_fu_401_p2;
wire   [0:0] icmp_ln890_1650_fu_395_p2;
wire   [0:0] icmp_ln890_1651_fu_383_p2;
wire   [3:0] add_ln691_1813_fu_407_p2;
reg   [3:0] add_ln691_1813_reg_544;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln890_1653_fu_418_p2;
wire   [3:0] add_ln691_1807_fu_424_p2;
reg   [3:0] add_ln691_1807_reg_557;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln890_257_fu_430_p1;
reg   [63:0] zext_ln890_257_reg_562;
wire   [3:0] add_ln691_1811_fu_440_p2;
reg   [3:0] add_ln691_1811_reg_570;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln890_1652_fu_451_p2;
wire   [3:0] add_ln691_1804_fu_457_p2;
reg   [3:0] add_ln691_1804_reg_583;
wire    ap_CS_fsm_state14;
wire   [3:0] add_ln691_1805_fu_469_p2;
reg   [3:0] add_ln691_1805_reg_591;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln890_1646_fu_480_p2;
reg   [2:0] local_A_ping_V_0_address0;
reg    local_A_ping_V_0_ce0;
reg    local_A_ping_V_0_we0;
wire   [511:0] local_A_ping_V_0_q0;
reg   [2:0] local_A_pong_V_0_address0;
reg    local_A_pong_V_0_ce0;
reg    local_A_pong_V_0_we0;
wire   [511:0] local_A_pong_V_0_q0;
reg   [4:0] c0_V_reg_152;
wire   [0:0] icmp_ln890_1645_fu_343_p2;
reg    ap_block_state1;
reg   [0:0] intra_trans_en_reg_163;
reg   [4:0] c1_V_reg_177;
wire   [0:0] icmp_ln890_1647_fu_355_p2;
wire   [0:0] icmp_ln890_fu_331_p2;
reg   [0:0] intra_trans_en_33_reg_188;
reg   [5:0] c2_V_reg_201;
wire   [0:0] ap_phi_mux_arb_17_phi_fu_229_p4;
reg   [3:0] c4_V_59_reg_237;
reg   [3:0] c6_V_34_reg_248;
wire   [0:0] icmp_ln890_1649_fu_371_p2;
reg   [3:0] c6_V_33_reg_259;
wire   [0:0] icmp_ln890_1648_fu_434_p2;
reg   [3:0] c7_V_34_reg_270;
reg   [3:0] c4_V_reg_281;
reg   [3:0] c7_V_33_reg_292;
reg   [3:0] c6_V_reg_303;
reg   [3:0] c7_V_reg_314;
wire   [0:0] icmp_ln890_1644_fu_463_p2;
wire   [63:0] zext_ln890_260_fu_413_p1;
wire   [63:0] zext_ln890_259_fu_446_p1;
wire   [63:0] zext_ln890_fu_475_p1;
reg   [15:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
end

top_A_IO_L2_in_boundary_x0_local_A_ping_V_0 #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_A_ping_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_ping_V_0_address0),
    .ce0(local_A_ping_V_0_ce0),
    .we0(local_A_ping_V_0_we0),
    .d0(fifo_A_A_IO_L2_in_7_x111_dout),
    .q0(local_A_ping_V_0_q0)
);

top_A_IO_L2_in_boundary_x0_local_A_ping_V_0 #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_A_pong_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_A_pong_V_0_address0),
    .ce0(local_A_pong_V_0_ce0),
    .we0(local_A_pong_V_0_we0),
    .d0(fifo_A_A_IO_L2_in_7_x111_dout),
    .q0(local_A_pong_V_0_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_1644_fu_463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_34_reg_212 == 1'd0) | ((icmp_ln890_1650_fu_395_p2 == 1'd1) & (arb_17_reg_225 == 1'd1))) | ((icmp_ln890_1651_fu_383_p2 == 1'd1) & (arb_17_reg_225 == 1'd0))))) begin
        arb_17_reg_225 <= arb_fu_401_p2;
    end else if (((icmp_ln890_1645_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        arb_17_reg_225 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_V_reg_152 <= 5'd0;
    end else if (((icmp_ln890_1645_fu_343_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c0_V_reg_152 <= add_ln691_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_V_reg_177 <= 5'd0;
    end else if (((icmp_ln890_1647_fu_355_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_V_reg_177 <= add_ln691_1806_reg_494;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_34_reg_212 == 1'd0) | ((icmp_ln890_1650_fu_395_p2 == 1'd1) & (arb_17_reg_225 == 1'd1))) | ((icmp_ln890_1651_fu_383_p2 == 1'd1) & (arb_17_reg_225 == 1'd0))))) begin
        c2_V_reg_201 <= add_ln691_1809_reg_502;
    end else if (((icmp_ln890_1645_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c2_V_reg_201 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_arb_17_phi_fu_229_p4 == 1'd0) & (icmp_ln890_1647_fu_355_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_59_reg_237 <= 4'd0;
    end else if (((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        c4_V_59_reg_237 <= add_ln691_1808_reg_510;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_arb_17_phi_fu_229_p4 == 1'd1) & (icmp_ln890_1647_fu_355_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c4_V_reg_281 <= 4'd0;
    end else if (((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        c4_V_reg_281 <= add_ln691_1807_reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1648_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (intra_trans_en_34_reg_212 == 1'd1))) begin
        c6_V_33_reg_259 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln890_1652_fu_451_p2 == 1'd1))) begin
        c6_V_33_reg_259 <= add_ln691_1810_reg_531;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1649_fu_371_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (intra_trans_en_34_reg_212 == 1'd1))) begin
        c6_V_34_reg_248 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln890_1653_fu_418_p2 == 1'd1))) begin
        c6_V_34_reg_248 <= add_ln691_1812_reg_523;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c6_V_reg_303 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln890_1646_fu_480_p2 == 1'd1))) begin
        c6_V_reg_303 <= add_ln691_1804_reg_583;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln890_1650_fu_395_p2 == 1'd0) & (intra_trans_en_34_reg_212 == 1'd1) & (arb_17_reg_225 == 1'd1))) begin
        c7_V_33_reg_292 <= 4'd0;
    end else if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        c7_V_33_reg_292 <= add_ln691_1811_reg_570;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln890_1651_fu_383_p2 == 1'd0) & (intra_trans_en_34_reg_212 == 1'd1) & (arb_17_reg_225 == 1'd0))) begin
        c7_V_34_reg_270 <= 4'd0;
    end else if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        c7_V_34_reg_270 <= add_ln691_1813_reg_544;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1644_fu_463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        c7_V_reg_314 <= 4'd0;
    end else if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        c7_V_reg_314 <= add_ln691_1805_reg_591;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        intra_trans_en_33_reg_188 <= intra_trans_en_reg_163;
    end else if (((icmp_ln890_1647_fu_355_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        intra_trans_en_33_reg_188 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_34_reg_212 == 1'd0) | ((icmp_ln890_1650_fu_395_p2 == 1'd1) & (arb_17_reg_225 == 1'd1))) | ((icmp_ln890_1651_fu_383_p2 == 1'd1) & (arb_17_reg_225 == 1'd0))))) begin
        intra_trans_en_34_reg_212 <= 1'd1;
    end else if (((icmp_ln890_1645_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        intra_trans_en_34_reg_212 <= intra_trans_en_33_reg_188;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_163 <= 1'd0;
    end else if (((icmp_ln890_1645_fu_343_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        intra_trans_en_reg_163 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln691_1804_reg_583 <= add_ln691_1804_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln691_1805_reg_591 <= add_ln691_1805_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_1806_reg_494 <= add_ln691_1806_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln691_1807_reg_557 <= add_ln691_1807_fu_424_p2;
        zext_ln890_257_reg_562[3 : 0] <= zext_ln890_257_fu_430_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln691_1808_reg_510 <= add_ln691_1808_fu_361_p2;
        zext_ln890_258_reg_515[3 : 0] <= zext_ln890_258_fu_367_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln691_1809_reg_502 <= add_ln691_1809_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (intra_trans_en_34_reg_212 == 1'd1) & (arb_17_reg_225 == 1'd1))) begin
        add_ln691_1810_reg_531 <= add_ln691_1810_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln691_1811_reg_570 <= add_ln691_1811_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (intra_trans_en_34_reg_212 == 1'd1) & (arb_17_reg_225 == 1'd0))) begin
        add_ln691_1812_reg_523 <= add_ln691_1812_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln691_1813_reg_544 <= add_ln691_1813_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_486 <= add_ln691_fu_325_p2;
    end
end

always @ (*) begin
    if (((icmp_ln890_1644_fu_463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1644_fu_463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        fifo_A_A_IO_L2_in_7_x111_blk_n = fifo_A_A_IO_L2_in_7_x111_empty_n;
    end else begin
        fifo_A_A_IO_L2_in_7_x111_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        fifo_A_A_IO_L2_in_7_x111_read = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_7_x111_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        fifo_A_PE_7_0_x183_blk_n = fifo_A_PE_7_0_x183_full_n;
    end else begin
        fifo_A_PE_7_0_x183_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        fifo_A_PE_7_0_x183_din = local_A_pong_V_0_q0;
    end else if ((((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        fifo_A_PE_7_0_x183_din = local_A_ping_V_0_q0;
    end else begin
        fifo_A_PE_7_0_x183_din = 'bx;
    end
end

always @ (*) begin
    if ((((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        fifo_A_PE_7_0_x183_write = 1'b1;
    end else begin
        fifo_A_PE_7_0_x183_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        local_A_ping_V_0_address0 = zext_ln890_fu_475_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        local_A_ping_V_0_address0 = zext_ln890_257_reg_562;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        local_A_ping_V_0_address0 = zext_ln890_260_fu_413_p1;
    end else begin
        local_A_ping_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | ((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        local_A_ping_V_0_ce0 = 1'b1;
    end else begin
        local_A_ping_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        local_A_ping_V_0_we0 = 1'b1;
    end else begin
        local_A_ping_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_A_pong_V_0_address0 = zext_ln890_259_fu_446_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        local_A_pong_V_0_address0 = zext_ln890_258_reg_515;
    end else begin
        local_A_pong_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        local_A_pong_V_0_ce0 = 1'b1;
    end else begin
        local_A_pong_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        local_A_pong_V_0_we0 = 1'b1;
    end else begin
        local_A_pong_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln890_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln890_1645_fu_343_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln890_1647_fu_355_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_phi_mux_arb_17_phi_fu_229_p4 == 1'd1) & (icmp_ln890_1647_fu_355_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln890_1649_fu_371_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (((intra_trans_en_34_reg_212 == 1'd0) | ((icmp_ln890_1650_fu_395_p2 == 1'd1) & (arb_17_reg_225 == 1'd1))) | ((icmp_ln890_1651_fu_383_p2 == 1'd1) & (arb_17_reg_225 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln890_1650_fu_395_p2 == 1'd0) & (intra_trans_en_34_reg_212 == 1'd1) & (arb_17_reg_225 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln890_1653_fu_418_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln890_1648_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((fifo_A_A_IO_L2_in_7_x111_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln890_1652_fu_451_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln890_1644_fu_463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln890_1646_fu_480_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((fifo_A_PE_7_0_x183_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_1804_fu_457_p2 = (c6_V_reg_303 + 4'd1);

assign add_ln691_1805_fu_469_p2 = (c7_V_reg_314 + 4'd1);

assign add_ln691_1806_fu_337_p2 = (c1_V_reg_177 + 5'd1);

assign add_ln691_1807_fu_424_p2 = (c4_V_reg_281 + 4'd1);

assign add_ln691_1808_fu_361_p2 = (c4_V_59_reg_237 + 4'd1);

assign add_ln691_1809_fu_349_p2 = (c2_V_reg_201 + 6'd1);

assign add_ln691_1810_fu_389_p2 = (c6_V_33_reg_259 + 4'd1);

assign add_ln691_1811_fu_440_p2 = (c7_V_33_reg_292 + 4'd1);

assign add_ln691_1812_fu_377_p2 = (c6_V_34_reg_248 + 4'd1);

assign add_ln691_1813_fu_407_p2 = (c7_V_34_reg_270 + 4'd1);

assign add_ln691_fu_325_p2 = (c0_V_reg_152 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_phi_mux_arb_17_phi_fu_229_p4 = arb_17_reg_225;

assign arb_fu_401_p2 = (arb_17_reg_225 ^ 1'd1);

assign icmp_ln890_1644_fu_463_p2 = ((c6_V_reg_303 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1645_fu_343_p2 = ((c1_V_reg_177 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_1646_fu_480_p2 = ((c7_V_reg_314 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1647_fu_355_p2 = ((c2_V_reg_201 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1648_fu_434_p2 = ((c4_V_reg_281 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1649_fu_371_p2 = ((c4_V_59_reg_237 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1650_fu_395_p2 = ((c6_V_33_reg_259 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1651_fu_383_p2 = ((c6_V_34_reg_248 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1652_fu_451_p2 = ((c7_V_33_reg_292 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1653_fu_418_p2 = ((c7_V_34_reg_270 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_331_p2 = ((c0_V_reg_152 == 5'd16) ? 1'b1 : 1'b0);

assign zext_ln890_257_fu_430_p1 = c4_V_reg_281;

assign zext_ln890_258_fu_367_p1 = c4_V_59_reg_237;

assign zext_ln890_259_fu_446_p1 = c7_V_33_reg_292;

assign zext_ln890_260_fu_413_p1 = c7_V_34_reg_270;

assign zext_ln890_fu_475_p1 = c7_V_reg_314;

always @ (posedge ap_clk) begin
    zext_ln890_258_reg_515[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln890_257_reg_562[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //top_A_IO_L2_in_boundary_x1
