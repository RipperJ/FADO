// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_B_IO_L2_in_boundary_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_B_B_IO_L2_in_7_x119_dout,
        fifo_B_B_IO_L2_in_7_x119_empty_n,
        fifo_B_B_IO_L2_in_7_x119_read,
        fifo_B_PE_0_7_x1155_din,
        fifo_B_PE_0_7_x1155_full_n,
        fifo_B_PE_0_7_x1155_write
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_pp0_stage0 = 12'd4;
parameter    ap_ST_fsm_state5 = 12'd8;
parameter    ap_ST_fsm_pp1_stage0 = 12'd16;
parameter    ap_ST_fsm_state8 = 12'd32;
parameter    ap_ST_fsm_pp2_stage0 = 12'd64;
parameter    ap_ST_fsm_state11 = 12'd128;
parameter    ap_ST_fsm_pp3_stage0 = 12'd256;
parameter    ap_ST_fsm_state14 = 12'd512;
parameter    ap_ST_fsm_state15 = 12'd1024;
parameter    ap_ST_fsm_state16 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_B_B_IO_L2_in_7_x119_dout;
input   fifo_B_B_IO_L2_in_7_x119_empty_n;
output   fifo_B_B_IO_L2_in_7_x119_read;
output  [511:0] fifo_B_PE_0_7_x1155_din;
input   fifo_B_PE_0_7_x1155_full_n;
output   fifo_B_PE_0_7_x1155_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_B_B_IO_L2_in_7_x119_read;
reg[511:0] fifo_B_PE_0_7_x1155_din;
reg fifo_B_PE_0_7_x1155_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_B_B_IO_L2_in_7_x119_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_1358_reg_656;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln890_1357_reg_704;
reg    fifo_B_PE_0_7_x1155_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_1361_reg_665;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln890_1360_reg_713;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln890_1359_fu_616_p2;
reg   [3:0] c4_V_1_reg_237;
reg   [6:0] indvar_flatten_reg_249;
reg   [3:0] c6_V_2_reg_260;
reg   [3:0] c7_V_2_reg_271;
reg   [3:0] c4_V_reg_282;
reg   [6:0] indvar_flatten9_reg_294;
reg   [3:0] c6_V_1_reg_305;
reg   [3:0] c7_V_1_reg_316;
wire   [13:0] add_ln890_45_fu_349_p2;
reg   [13:0] add_ln890_45_reg_622;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_355_p2;
wire   [0:0] icmp_ln890_1355_fu_361_p2;
reg   [0:0] icmp_ln890_1355_reg_631;
wire   [0:0] and_ln22739_1_fu_391_p2;
reg   [0:0] and_ln22739_1_reg_637;
wire   [0:0] or_ln22740_fu_397_p2;
reg   [0:0] or_ln22740_reg_642;
wire   [0:0] and_ln22740_fu_415_p2;
reg   [0:0] and_ln22740_reg_646;
wire   [3:0] add_ln691_1681_fu_421_p2;
reg   [3:0] add_ln691_1681_reg_651;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_1358_fu_427_p2;
wire   [6:0] add_ln890_43_fu_438_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_block_state7_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln890_1361_fu_444_p2;
wire   [3:0] select_ln890_1_fu_462_p3;
reg   [3:0] select_ln890_1_reg_669;
wire   [3:0] select_ln691_1_fu_481_p3;
wire   [0:0] arb_fu_489_p2;
wire    ap_CS_fsm_state8;
wire   [5:0] select_ln691_2_fu_504_p3;
wire   [10:0] select_ln890_2_fu_518_p3;
wire   [3:0] add_ln691_fu_525_p2;
reg   [3:0] add_ln691_reg_699;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state9_pp2_stage0_iter0;
reg    ap_block_state10_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln890_1357_fu_531_p2;
wire   [6:0] add_ln890_fu_542_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state12_pp3_stage0_iter0;
reg    ap_block_state13_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln890_1360_fu_548_p2;
wire   [3:0] select_ln890_fu_566_p3;
reg   [3:0] select_ln890_reg_717;
wire   [3:0] select_ln691_fu_585_p3;
wire   [3:0] add_ln691_1682_fu_593_p2;
reg   [3:0] add_ln691_1682_reg_732;
wire    ap_CS_fsm_state14;
wire   [511:0] local_B_ping_V_q0;
reg   [511:0] local_B_ping_V_load_reg_745;
wire    ap_CS_fsm_state15;
wire   [3:0] add_ln691_1683_fu_610_p2;
reg    ap_block_state16;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state9;
wire    ap_CS_fsm_state11;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state12;
reg   [2:0] local_B_ping_V_address0;
reg    local_B_ping_V_ce0;
wire   [2:0] local_B_ping_V_address1;
reg    local_B_ping_V_ce1;
reg    local_B_ping_V_we1;
wire   [2:0] local_B_pong_V_address0;
reg    local_B_pong_V_ce0;
wire   [511:0] local_B_pong_V_q0;
wire   [2:0] local_B_pong_V_address1;
reg    local_B_pong_V_ce1;
reg    local_B_pong_V_we1;
reg   [13:0] indvar_flatten31_reg_178;
reg    ap_block_state1;
reg   [10:0] indvar_flatten17_reg_189;
reg   [5:0] c2_V_reg_201;
reg   [0:0] intra_trans_en_reg_213;
reg   [0:0] arb_1_reg_226;
reg   [3:0] ap_phi_mux_c4_V_1_phi_fu_241_p4;
reg   [3:0] ap_phi_mux_c6_V_2_phi_fu_264_p4;
reg   [3:0] ap_phi_mux_c4_V_phi_fu_286_p4;
reg   [3:0] ap_phi_mux_c6_V_1_phi_fu_309_p4;
reg   [3:0] c6_V_reg_327;
reg   [3:0] c7_V_reg_338;
wire   [63:0] zext_ln890_242_fu_433_p1;
wire   [63:0] zext_ln890_244_fu_470_p1;
wire   [63:0] zext_ln890_241_fu_537_p1;
wire   [63:0] zext_ln890_243_fu_574_p1;
wire   [63:0] zext_ln890_fu_599_p1;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_pp3_stage0_01001;
wire   [0:0] xor_ln22739_fu_373_p2;
wire   [0:0] icmp_ln89076_fu_385_p2;
wire   [0:0] or_ln22739_fu_367_p2;
wire   [0:0] xor_ln22740_fu_403_p2;
wire   [0:0] and_ln22739_fu_379_p2;
wire   [0:0] or_ln22740_1_fu_409_p2;
wire   [0:0] icmp_ln890_1363_fu_456_p2;
wire   [3:0] add_ln691_1686_fu_450_p2;
wire   [3:0] add_ln691_1687_fu_475_p2;
wire   [0:0] or_ln691_fu_500_p2;
wire   [5:0] add_ln691_1688_fu_494_p2;
wire   [10:0] add_ln890_44_fu_512_p2;
wire   [0:0] icmp_ln890_1362_fu_560_p2;
wire   [3:0] add_ln691_1684_fu_554_p2;
wire   [3:0] add_ln691_1685_fu_579_p2;
wire   [0:0] icmp_ln890_1356_fu_604_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
end

top_A_IO_L2_in_boundary_x0_local_A_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_B_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_B_ping_V_address0),
    .ce0(local_B_ping_V_ce0),
    .q0(local_B_ping_V_q0),
    .address1(local_B_ping_V_address1),
    .ce1(local_B_ping_V_ce1),
    .we1(local_B_ping_V_we1),
    .d1(fifo_B_B_IO_L2_in_7_x119_dout)
);

top_A_IO_L2_in_boundary_x0_local_A_ping_V #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_B_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_B_pong_V_address0),
    .ce0(local_B_pong_V_ce0),
    .q0(local_B_pong_V_q0),
    .address1(local_B_pong_V_address1),
    .ce1(local_B_pong_V_ce1),
    .we1(local_B_pong_V_we1),
    .d1(fifo_B_B_IO_L2_in_7_x119_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln890_1356_fu_604_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd0 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd0 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (or_ln22740_reg_642 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (or_ln22740_reg_642 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state9))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state9))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'd1 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state12))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (or_ln22740_reg_642 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state12))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (or_ln22740_reg_642 == 1'd1))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        arb_1_reg_226 <= arb_fu_489_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        arb_1_reg_226 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c2_V_reg_201 <= select_ln691_2_fu_504_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c2_V_reg_201 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
        c4_V_1_reg_237 <= 4'd0;
    end else if (((icmp_ln890_1358_reg_656 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c4_V_1_reg_237 <= add_ln691_1681_reg_651;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
        c4_V_reg_282 <= 4'd0;
    end else if (((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c4_V_reg_282 <= add_ln691_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (or_ln22740_reg_642 == 1'd1))) begin
        c6_V_1_reg_305 <= 4'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln890_1360_reg_713 == 1'd0))) begin
        c6_V_1_reg_305 <= select_ln890_reg_717;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (or_ln22740_reg_642 == 1'd1))) begin
        c6_V_2_reg_260 <= 4'd0;
    end else if (((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c6_V_2_reg_260 <= select_ln890_1_reg_669;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd1))) begin
        c6_V_reg_327 <= 4'd0;
    end else if ((~((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd1))) begin
        c6_V_reg_327 <= add_ln691_1682_reg_732;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (or_ln22740_reg_642 == 1'd1))) begin
        c7_V_1_reg_316 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln890_1360_fu_548_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c7_V_1_reg_316 <= select_ln691_fu_585_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (or_ln22740_reg_642 == 1'd1))) begin
        c7_V_2_reg_271 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_1361_fu_444_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c7_V_2_reg_271 <= select_ln691_1_fu_481_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        c7_V_reg_338 <= 4'd0;
    end else if ((~((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd0))) begin
        c7_V_reg_338 <= add_ln691_1683_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten17_reg_189 <= select_ln890_2_fu_518_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_189 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten31_reg_178 <= add_ln890_45_reg_622;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten31_reg_178 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (or_ln22740_reg_642 == 1'd1))) begin
        indvar_flatten9_reg_294 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln890_1360_fu_548_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten9_reg_294 <= add_ln890_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (or_ln22740_reg_642 == 1'd1))) begin
        indvar_flatten_reg_249 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_1361_fu_444_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_reg_249 <= add_ln890_43_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        intra_trans_en_reg_213 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_213 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln691_1681_reg_651 <= add_ln691_1681_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln691_1682_reg_732 <= add_ln691_1682_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln691_reg_699 <= add_ln691_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln890_45_reg_622 <= add_ln890_45_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
        and_ln22739_1_reg_637 <= and_ln22739_1_fu_391_p2;
        and_ln22740_reg_646 <= and_ln22740_fu_415_p2;
        icmp_ln890_1355_reg_631 <= icmp_ln890_1355_fu_361_p2;
        or_ln22740_reg_642 <= or_ln22740_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln890_1357_reg_704 <= icmp_ln890_1357_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_1358_reg_656 <= icmp_ln890_1358_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln890_1360_reg_713 <= icmp_ln890_1360_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln890_1361_reg_665 <= icmp_ln890_1361_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        local_B_ping_V_load_reg_745 <= local_B_ping_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_1361_fu_444_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln890_1_reg_669 <= select_ln890_1_fu_462_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln890_1360_fu_548_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln890_reg_717 <= select_ln890_fu_566_p3;
    end
end

always @ (*) begin
    if ((icmp_ln890_1358_fu_427_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1361_fu_444_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1357_fu_531_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_1360_fu_548_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1356_fu_604_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1358_reg_656 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c4_V_1_phi_fu_241_p4 = add_ln691_1681_reg_651;
    end else begin
        ap_phi_mux_c4_V_1_phi_fu_241_p4 = c4_V_1_reg_237;
    end
end

always @ (*) begin
    if (((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_c4_V_phi_fu_286_p4 = add_ln691_reg_699;
    end else begin
        ap_phi_mux_c4_V_phi_fu_286_p4 = c4_V_reg_282;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln890_1360_reg_713 == 1'd0))) begin
        ap_phi_mux_c6_V_1_phi_fu_309_p4 = select_ln890_reg_717;
    end else begin
        ap_phi_mux_c6_V_1_phi_fu_309_p4 = c6_V_1_reg_305;
    end
end

always @ (*) begin
    if (((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c6_V_2_phi_fu_264_p4 = select_ln890_1_reg_669;
    end else begin
        ap_phi_mux_c6_V_2_phi_fu_264_p4 = c6_V_2_reg_260;
    end
end

always @ (*) begin
    if (((icmp_ln890_1356_fu_604_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln890_1358_reg_656 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fifo_B_B_IO_L2_in_7_x119_blk_n = fifo_B_B_IO_L2_in_7_x119_empty_n;
    end else begin
        fifo_B_B_IO_L2_in_7_x119_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln890_1358_reg_656 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fifo_B_B_IO_L2_in_7_x119_read = 1'b1;
    end else begin
        fifo_B_B_IO_L2_in_7_x119_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln890_1360_reg_713 == 1'd0)) | ((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd0)))) begin
        fifo_B_PE_0_7_x1155_blk_n = fifo_B_PE_0_7_x1155_full_n;
    end else begin
        fifo_B_PE_0_7_x1155_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd0))) begin
        fifo_B_PE_0_7_x1155_din = local_B_ping_V_load_reg_745;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_01001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln890_1360_reg_713 == 1'd0))) begin
        fifo_B_PE_0_7_x1155_din = local_B_pong_V_q0;
    end else if (((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fifo_B_PE_0_7_x1155_din = local_B_ping_V_q0;
    end else begin
        fifo_B_PE_0_7_x1155_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln890_1360_reg_713 == 1'd0)) | ((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd0)))) begin
        fifo_B_PE_0_7_x1155_write = 1'b1;
    end else begin
        fifo_B_PE_0_7_x1155_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_B_ping_V_address0 = zext_ln890_fu_599_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        local_B_ping_V_address0 = zext_ln890_244_fu_470_p1;
    end else begin
        local_B_ping_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        local_B_ping_V_ce0 = 1'b1;
    end else begin
        local_B_ping_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        local_B_ping_V_ce1 = 1'b1;
    end else begin
        local_B_ping_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        local_B_ping_V_we1 = 1'b1;
    end else begin
        local_B_ping_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        local_B_pong_V_ce0 = 1'b1;
    end else begin
        local_B_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_pong_V_ce1 = 1'b1;
    end else begin
        local_B_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_1358_reg_656 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_pong_V_we1 = 1'b1;
    end else begin
        local_B_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'd1 == and_ln22740_fu_415_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_355_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_1358_fu_427_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_1358_fu_427_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (or_ln22740_reg_642 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln890_1361_fu_444_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln890_1361_fu_444_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln890_1357_fu_531_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln890_1357_fu_531_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (or_ln22740_reg_642 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln890_1360_fu_548_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln890_1360_fu_548_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln890_1356_fu_604_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if ((~((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if ((~((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln890_1359_fu_616_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_1681_fu_421_p2 = (ap_phi_mux_c4_V_1_phi_fu_241_p4 + 4'd1);

assign add_ln691_1682_fu_593_p2 = (c6_V_reg_327 + 4'd1);

assign add_ln691_1683_fu_610_p2 = (c7_V_reg_338 + 4'd1);

assign add_ln691_1684_fu_554_p2 = (ap_phi_mux_c6_V_1_phi_fu_309_p4 + 4'd1);

assign add_ln691_1685_fu_579_p2 = (c7_V_1_reg_316 + 4'd1);

assign add_ln691_1686_fu_450_p2 = (ap_phi_mux_c6_V_2_phi_fu_264_p4 + 4'd1);

assign add_ln691_1687_fu_475_p2 = (c7_V_2_reg_271 + 4'd1);

assign add_ln691_1688_fu_494_p2 = (c2_V_reg_201 + 6'd1);

assign add_ln691_fu_525_p2 = (ap_phi_mux_c4_V_phi_fu_286_p4 + 4'd1);

assign add_ln890_43_fu_438_p2 = (indvar_flatten_reg_249 + 7'd1);

assign add_ln890_44_fu_512_p2 = (indvar_flatten17_reg_189 + 11'd1);

assign add_ln890_45_fu_349_p2 = (indvar_flatten31_reg_178 + 14'd1);

assign add_ln890_fu_542_p2 = (indvar_flatten9_reg_294 + 7'd1);

assign and_ln22739_1_fu_391_p2 = (xor_ln22739_fu_373_p2 & icmp_ln89076_fu_385_p2);

assign and_ln22739_fu_379_p2 = (xor_ln22739_fu_373_p2 & arb_1_reg_226);

assign and_ln22740_fu_415_p2 = (or_ln22740_1_fu_409_p2 & and_ln22739_fu_379_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln890_1358_reg_656 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (fifo_B_B_IO_L2_in_7_x119_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln890_1358_reg_656 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (fifo_B_B_IO_L2_in_7_x119_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (fifo_B_PE_0_7_x1155_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (fifo_B_PE_0_7_x1155_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln890_1361_reg_665 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (fifo_B_PE_0_7_x1155_full_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (fifo_B_B_IO_L2_in_7_x119_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln890_1357_reg_704 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (fifo_B_B_IO_L2_in_7_x119_empty_n == 1'b0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1360_reg_713 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1360_reg_713 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter1 == 1'b1) & (fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1360_reg_713 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp2_stage0_iter1 = ((icmp_ln890_1357_reg_704 == 1'd0) & (fifo_B_B_IO_L2_in_7_x119_empty_n == 1'b0));
end

assign ap_block_state12_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp3_stage0_iter1 = ((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1360_reg_713 == 1'd0));
end

always @ (*) begin
    ap_block_state16 = ((fifo_B_PE_0_7_x1155_full_n == 1'b0) & (icmp_ln890_1359_fu_616_p2 == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln890_1358_reg_656 == 1'd0) & (fifo_B_B_IO_L2_in_7_x119_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((icmp_ln890_1361_reg_665 == 1'd0) & (fifo_B_PE_0_7_x1155_full_n == 1'b0));
end

assign ap_block_state9_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign arb_fu_489_p2 = (1'd1 ^ and_ln22740_reg_646);

assign icmp_ln89076_fu_385_p2 = ((c2_V_reg_201 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_1355_fu_361_p2 = ((indvar_flatten17_reg_189 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_1356_fu_604_p2 = ((c6_V_reg_327 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1357_fu_531_p2 = ((ap_phi_mux_c4_V_phi_fu_286_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1358_fu_427_p2 = ((ap_phi_mux_c4_V_1_phi_fu_241_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1359_fu_616_p2 = ((c7_V_reg_338 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1360_fu_548_p2 = ((indvar_flatten9_reg_294 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_1361_fu_444_p2 = ((indvar_flatten_reg_249 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_1362_fu_560_p2 = ((c7_V_1_reg_316 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_1363_fu_456_p2 = ((c7_V_2_reg_271 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_355_p2 = ((indvar_flatten31_reg_178 == 14'd8192) ? 1'b1 : 1'b0);

assign local_B_ping_V_address1 = zext_ln890_241_fu_537_p1;

assign local_B_pong_V_address0 = zext_ln890_243_fu_574_p1;

assign local_B_pong_V_address1 = zext_ln890_242_fu_433_p1;

assign or_ln22739_fu_367_p2 = (intra_trans_en_reg_213 | icmp_ln890_1355_fu_361_p2);

assign or_ln22740_1_fu_409_p2 = (xor_ln22740_fu_403_p2 | icmp_ln890_1355_fu_361_p2);

assign or_ln22740_fu_397_p2 = (or_ln22739_fu_367_p2 | and_ln22739_1_fu_391_p2);

assign or_ln691_fu_500_p2 = (icmp_ln890_1355_reg_631 | and_ln22739_1_reg_637);

assign select_ln691_1_fu_481_p3 = ((icmp_ln890_1363_fu_456_p2[0:0] == 1'b1) ? 4'd1 : add_ln691_1687_fu_475_p2);

assign select_ln691_2_fu_504_p3 = ((or_ln691_fu_500_p2[0:0] == 1'b1) ? 6'd1 : add_ln691_1688_fu_494_p2);

assign select_ln691_fu_585_p3 = ((icmp_ln890_1362_fu_560_p2[0:0] == 1'b1) ? 4'd1 : add_ln691_1685_fu_579_p2);

assign select_ln890_1_fu_462_p3 = ((icmp_ln890_1363_fu_456_p2[0:0] == 1'b1) ? add_ln691_1686_fu_450_p2 : ap_phi_mux_c6_V_2_phi_fu_264_p4);

assign select_ln890_2_fu_518_p3 = ((icmp_ln890_1355_reg_631[0:0] == 1'b1) ? 11'd1 : add_ln890_44_fu_512_p2);

assign select_ln890_fu_566_p3 = ((icmp_ln890_1362_fu_560_p2[0:0] == 1'b1) ? add_ln691_1684_fu_554_p2 : ap_phi_mux_c6_V_1_phi_fu_309_p4);

assign xor_ln22739_fu_373_p2 = (icmp_ln890_1355_fu_361_p2 ^ 1'd1);

assign xor_ln22740_fu_403_p2 = (icmp_ln89076_fu_385_p2 ^ 1'd1);

assign zext_ln890_241_fu_537_p1 = c4_V_reg_282;

assign zext_ln890_242_fu_433_p1 = c4_V_1_reg_237;

assign zext_ln890_243_fu_574_p1 = select_ln890_fu_566_p3;

assign zext_ln890_244_fu_470_p1 = select_ln890_1_fu_462_p3;

assign zext_ln890_fu_599_p1 = c6_V_reg_327;

endmodule //top_B_IO_L2_in_boundary_x1
