-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_A_IO_L2_in_boundary_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_A_A_IO_L2_in_7_x011_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_A_IO_L2_in_7_x011_empty_n : IN STD_LOGIC;
    fifo_A_A_IO_L2_in_7_x011_read : OUT STD_LOGIC;
    fifo_A_PE_7_0_x083_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_PE_7_0_x083_full_n : IN STD_LOGIC;
    fifo_A_PE_7_0_x083_write : OUT STD_LOGIC );
end;


architecture behav of top_A_IO_L2_in_boundary_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_A_A_IO_L2_in_7_x011_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln890_1483_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln890_1482_reg_649 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_A_PE_7_0_x083_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln890_1486_reg_615 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln890_1485_reg_658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal c4_V_4_reg_237 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_249 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_8_reg_260 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_reg_271 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten7_reg_283 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_7_reg_294 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln890_82_fu_327_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln890_82_reg_572 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln890_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1480_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1480_reg_581 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1257_1_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1257_1_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1258_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1258_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1258_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1258_reg_596 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1787_fu_399_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1787_reg_601 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln890_1483_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln890_80_fu_416_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln890_1486_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1791_fu_447_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal arb_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln691_fu_468_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_fu_482_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_fu_489_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_reg_644 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state9_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln890_1482_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln890_fu_506_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state12_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln890_1485_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1790_fu_537_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1788_fu_543_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1788_reg_672 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln691_1789_fu_555_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_1789_reg_680 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state9 : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state12 : STD_LOGIC;
    signal local_A_ping_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_ping_V_ce0 : STD_LOGIC;
    signal local_A_ping_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_ping_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_ping_V_ce1 : STD_LOGIC;
    signal local_A_ping_V_we1 : STD_LOGIC;
    signal local_A_pong_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_pong_V_ce0 : STD_LOGIC;
    signal local_A_pong_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_pong_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_pong_V_ce1 : STD_LOGIC;
    signal local_A_pong_V_we1 : STD_LOGIC;
    signal indvar_flatten29_reg_178 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal indvar_flatten15_reg_189 : STD_LOGIC_VECTOR (10 downto 0);
    signal c2_V_reg_201 : STD_LOGIC_VECTOR (5 downto 0);
    signal intra_trans_en_reg_213 : STD_LOGIC_VECTOR (0 downto 0);
    signal arb_18_reg_226 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_c4_V_4_phi_fu_241_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_c4_V_phi_fu_275_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal c6_V_reg_305 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1484_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_V_reg_316 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_1481_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln890_282_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_284_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_281_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_283_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal xor_ln1257_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89069_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1257_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1258_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1257_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1258_1_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_1488_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1280_fu_434_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln691_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_1792_fu_458_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln890_81_fu_476_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln890_1487_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1311_fu_524_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_A_IO_L2_in_boundary_x0_local_A_ping_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    local_A_ping_V_U : component top_A_IO_L2_in_boundary_x0_local_A_ping_V
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_ping_V_address0,
        ce0 => local_A_ping_V_ce0,
        q0 => local_A_ping_V_q0,
        address1 => local_A_ping_V_address1,
        ce1 => local_A_ping_V_ce1,
        we1 => local_A_ping_V_we1,
        d1 => fifo_A_A_IO_L2_in_7_x011_dout);

    local_A_pong_V_U : component top_A_IO_L2_in_boundary_x0_local_A_ping_V
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_pong_V_address0,
        ce0 => local_A_pong_V_ce0,
        q0 => local_A_pong_V_q0,
        address1 => local_A_pong_V_address1,
        ce1 => local_A_pong_V_ce1,
        we1 => local_A_pong_V_we1,
        d1 => fifo_A_A_IO_L2_in_7_x011_dout);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln890_1481_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_0 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_lv1_0 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state9))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state9))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_lv1_1 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state12))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state12))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state12);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    arb_18_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                arb_18_reg_226 <= arb_fu_453_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                arb_18_reg_226 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    c2_V_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                c2_V_reg_201 <= select_ln691_fu_468_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c2_V_reg_201 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    c4_V_4_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then 
                c4_V_4_reg_237 <= ap_const_lv4_0;
            elsif (((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c4_V_4_reg_237 <= add_ln691_1787_reg_601;
            end if; 
        end if;
    end process;

    c4_V_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then 
                c4_V_reg_271 <= ap_const_lv4_0;
            elsif (((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                c4_V_reg_271 <= add_ln691_reg_644;
            end if; 
        end if;
    end process;

    c6_V_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_1))) then 
                c6_V_reg_305 <= ap_const_lv4_0;
            elsif (((icmp_ln890_1484_fu_566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                c6_V_reg_305 <= add_ln691_1788_reg_672;
            end if; 
        end if;
    end process;

    c7_V_7_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                c7_V_7_reg_294 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln890_1485_fu_512_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                c7_V_7_reg_294 <= add_ln691_1790_fu_537_p2;
            end if; 
        end if;
    end process;

    c7_V_8_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                c7_V_8_reg_260 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_1486_fu_422_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                c7_V_8_reg_260 <= add_ln691_1791_fu_447_p2;
            end if; 
        end if;
    end process;

    c7_V_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_1481_fu_549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                c7_V_reg_316 <= ap_const_lv4_0;
            elsif (((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                c7_V_reg_316 <= add_ln691_1789_reg_680;
            end if; 
        end if;
    end process;

    indvar_flatten15_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_flatten15_reg_189 <= select_ln890_fu_482_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten15_reg_189 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten29_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_flatten29_reg_178 <= add_ln890_82_reg_572;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten29_reg_178 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten7_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                indvar_flatten7_reg_283 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln890_1485_fu_512_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten7_reg_283 <= add_ln890_fu_506_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_249_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (or_ln1258_reg_592 = ap_const_lv1_1))) then 
                indvar_flatten_reg_249 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln890_1486_fu_422_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_249 <= add_ln890_80_fu_416_p2;
            end if; 
        end if;
    end process;

    intra_trans_en_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                intra_trans_en_reg_213 <= ap_const_lv1_1;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                intra_trans_en_reg_213 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln691_1787_reg_601 <= add_ln691_1787_fu_399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_ln691_1788_reg_672 <= add_ln691_1788_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln691_1789_reg_680 <= add_ln691_1789_fu_555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                add_ln691_reg_644 <= add_ln691_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln890_82_reg_572 <= add_ln890_82_fu_327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then
                and_ln1257_1_reg_587 <= and_ln1257_1_fu_369_p2;
                and_ln1258_reg_596 <= and_ln1258_fu_393_p2;
                icmp_ln890_1480_reg_581 <= icmp_ln890_1480_fu_339_p2;
                or_ln1258_reg_592 <= or_ln1258_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln890_1482_reg_649 <= icmp_ln890_1482_fu_495_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln890_1483_reg_606 <= icmp_ln890_1483_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln890_1485_reg_658 <= icmp_ln890_1485_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln890_1486_reg_615 <= icmp_ln890_1486_fu_422_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_A_PE_7_0_x083_full_n, ap_CS_fsm_state16, ap_CS_fsm_state2, icmp_ln890_fu_333_p2, or_ln1258_reg_592, and_ln1258_fu_393_p2, ap_enable_reg_pp0_iter0, icmp_ln890_1483_fu_405_p2, ap_enable_reg_pp1_iter0, icmp_ln890_1486_fu_422_p2, ap_enable_reg_pp2_iter0, icmp_ln890_1482_fu_495_p2, ap_enable_reg_pp3_iter0, icmp_ln890_1485_fu_512_p2, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_block_pp0_stage0_subdone, ap_CS_fsm_state5, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_CS_fsm_state11, ap_block_pp3_stage0_subdone, icmp_ln890_1484_fu_566_p2, icmp_ln890_1481_fu_549_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_lv1_1 = and_ln1258_fu_393_p2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_333_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln890_1483_fu_405_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln890_1483_fu_405_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (or_ln1258_reg_592 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln890_1486_fu_422_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln890_1486_fu_422_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln890_1482_fu_495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln890_1482_fu_495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln1258_reg_592 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln890_1485_fu_512_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln890_1485_fu_512_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln890_1481_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln890_1484_fu_566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln691_1787_fu_399_p2 <= std_logic_vector(unsigned(ap_phi_mux_c4_V_4_phi_fu_241_p4) + unsigned(ap_const_lv4_1));
    add_ln691_1788_fu_543_p2 <= std_logic_vector(unsigned(c6_V_reg_305) + unsigned(ap_const_lv4_1));
    add_ln691_1789_fu_555_p2 <= std_logic_vector(unsigned(c7_V_reg_316) + unsigned(ap_const_lv4_1));
    add_ln691_1790_fu_537_p2 <= std_logic_vector(unsigned(select_ln1311_fu_524_p3) + unsigned(ap_const_lv4_1));
    add_ln691_1791_fu_447_p2 <= std_logic_vector(unsigned(select_ln1280_fu_434_p3) + unsigned(ap_const_lv4_1));
    add_ln691_1792_fu_458_p2 <= std_logic_vector(unsigned(c2_V_reg_201) + unsigned(ap_const_lv6_1));
    add_ln691_fu_489_p2 <= std_logic_vector(unsigned(ap_phi_mux_c4_V_phi_fu_275_p4) + unsigned(ap_const_lv4_1));
    add_ln890_80_fu_416_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_249) + unsigned(ap_const_lv7_1));
    add_ln890_81_fu_476_p2 <= std_logic_vector(unsigned(indvar_flatten15_reg_189) + unsigned(ap_const_lv11_1));
    add_ln890_82_fu_327_p2 <= std_logic_vector(unsigned(indvar_flatten29_reg_178) + unsigned(ap_const_lv14_1));
    add_ln890_fu_506_p2 <= std_logic_vector(unsigned(indvar_flatten7_reg_283) + unsigned(ap_const_lv7_1));
    and_ln1257_1_fu_369_p2 <= (xor_ln1257_fu_351_p2 and icmp_ln89069_fu_363_p2);
    and_ln1257_fu_357_p2 <= (xor_ln1257_fu_351_p2 and arb_18_reg_226);
    and_ln1258_fu_393_p2 <= (or_ln1258_1_fu_387_p2 and and_ln1257_fu_357_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(7);
    ap_CS_fsm_state14 <= ap_CS_fsm(9);
    ap_CS_fsm_state15 <= ap_CS_fsm(10);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp0_iter1, icmp_ln890_1483_reg_606)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp0_iter1, icmp_ln890_1483_reg_606)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter1, icmp_ln890_1486_reg_615)
    begin
                ap_block_pp1_stage0_01001 <= ((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter1, icmp_ln890_1486_reg_615)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp1_iter1, icmp_ln890_1486_reg_615)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp2_iter1, icmp_ln890_1482_reg_649)
    begin
                ap_block_pp2_stage0_11001 <= ((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_enable_reg_pp2_iter1, icmp_ln890_1482_reg_649)
    begin
                ap_block_pp2_stage0_subdone <= ((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp3_iter1, icmp_ln890_1485_reg_658)
    begin
                ap_block_pp3_stage0_01001 <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp3_iter1, icmp_ln890_1485_reg_658)
    begin
                ap_block_pp3_stage0_11001 <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_enable_reg_pp3_iter1, icmp_ln890_1485_reg_658)
    begin
                ap_block_pp3_stage0_subdone <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp2_stage0_iter1_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, icmp_ln890_1482_reg_649)
    begin
                ap_block_state10_pp2_stage0_iter1 <= ((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_state12_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp3_stage0_iter1_assign_proc : process(fifo_A_PE_7_0_x083_full_n, icmp_ln890_1485_reg_658)
    begin
                ap_block_state13_pp3_stage0_iter1 <= ((fifo_A_PE_7_0_x083_full_n = ap_const_logic_0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, icmp_ln890_1483_reg_606)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (fifo_A_A_IO_L2_in_7_x011_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(fifo_A_PE_7_0_x083_full_n, icmp_ln890_1486_reg_615)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (fifo_A_PE_7_0_x083_full_n = ap_const_logic_0));
    end process;

        ap_block_state9_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln890_1483_fu_405_p2)
    begin
        if ((icmp_ln890_1483_fu_405_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln890_1486_fu_422_p2)
    begin
        if ((icmp_ln890_1486_fu_422_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state9_assign_proc : process(icmp_ln890_1482_fu_495_p2)
    begin
        if ((icmp_ln890_1482_fu_495_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state12_assign_proc : process(icmp_ln890_1485_fu_512_p2)
    begin
        if ((icmp_ln890_1485_fu_512_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14, icmp_ln890_1481_fu_549_p2)
    begin
        if (((icmp_ln890_1481_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c4_V_4_phi_fu_241_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_1483_reg_606, c4_V_4_reg_237, add_ln691_1787_reg_601)
    begin
        if (((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_c4_V_4_phi_fu_241_p4 <= add_ln691_1787_reg_601;
        else 
            ap_phi_mux_c4_V_4_phi_fu_241_p4 <= c4_V_4_reg_237;
        end if; 
    end process;


    ap_phi_mux_c4_V_phi_fu_275_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln890_1482_reg_649, c4_V_reg_271, add_ln691_reg_644)
    begin
        if (((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_c4_V_phi_fu_275_p4 <= add_ln691_reg_644;
        else 
            ap_phi_mux_c4_V_phi_fu_275_p4 <= c4_V_reg_271;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, icmp_ln890_1481_fu_549_p2)
    begin
        if (((icmp_ln890_1481_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arb_fu_453_p2 <= (ap_const_lv1_1 xor and_ln1258_reg_596);

    fifo_A_A_IO_L2_in_7_x011_blk_n_assign_proc : process(fifo_A_A_IO_L2_in_7_x011_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_1483_reg_606, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln890_1482_reg_649)
    begin
        if ((((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_A_A_IO_L2_in_7_x011_blk_n <= fifo_A_A_IO_L2_in_7_x011_empty_n;
        else 
            fifo_A_A_IO_L2_in_7_x011_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_A_IO_L2_in_7_x011_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln890_1483_reg_606, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln890_1482_reg_649, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_A_A_IO_L2_in_7_x011_read <= ap_const_logic_1;
        else 
            fifo_A_A_IO_L2_in_7_x011_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_A_PE_7_0_x083_blk_n_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln890_1486_reg_615, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln890_1485_reg_658, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0)) or ((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fifo_A_PE_7_0_x083_blk_n <= fifo_A_PE_7_0_x083_full_n;
        else 
            fifo_A_PE_7_0_x083_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_PE_7_0_x083_din_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln890_1486_reg_615, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln890_1485_reg_658, ap_CS_fsm_state16, local_A_ping_V_q0, local_A_pong_V_q0, ap_block_pp1_stage0_01001, ap_block_pp3_stage0_01001)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0))) then 
            fifo_A_PE_7_0_x083_din <= local_A_pong_V_q0;
        elsif ((((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            fifo_A_PE_7_0_x083_din <= local_A_ping_V_q0;
        else 
            fifo_A_PE_7_0_x083_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_A_PE_7_0_x083_write_assign_proc : process(fifo_A_PE_7_0_x083_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln890_1486_reg_615, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln890_1485_reg_658, ap_CS_fsm_state16, ap_block_pp1_stage0_11001, ap_block_pp3_stage0_11001)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln890_1485_reg_658 = ap_const_lv1_0)) or ((icmp_ln890_1486_reg_615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((fifo_A_PE_7_0_x083_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            fifo_A_PE_7_0_x083_write <= ap_const_logic_1;
        else 
            fifo_A_PE_7_0_x083_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln89069_fu_363_p2 <= "1" when (c2_V_reg_201 = ap_const_lv6_20) else "0";
    icmp_ln890_1480_fu_339_p2 <= "1" when (indvar_flatten15_reg_189 = ap_const_lv11_200) else "0";
    icmp_ln890_1481_fu_549_p2 <= "1" when (c6_V_reg_305 = ap_const_lv4_8) else "0";
    icmp_ln890_1482_fu_495_p2 <= "1" when (ap_phi_mux_c4_V_phi_fu_275_p4 = ap_const_lv4_8) else "0";
    icmp_ln890_1483_fu_405_p2 <= "1" when (ap_phi_mux_c4_V_4_phi_fu_241_p4 = ap_const_lv4_8) else "0";
    icmp_ln890_1484_fu_566_p2 <= "1" when (c7_V_reg_316 = ap_const_lv4_8) else "0";
    icmp_ln890_1485_fu_512_p2 <= "1" when (indvar_flatten7_reg_283 = ap_const_lv7_40) else "0";
    icmp_ln890_1486_fu_422_p2 <= "1" when (indvar_flatten_reg_249 = ap_const_lv7_40) else "0";
    icmp_ln890_1487_fu_518_p2 <= "1" when (c7_V_7_reg_294 = ap_const_lv4_8) else "0";
    icmp_ln890_1488_fu_428_p2 <= "1" when (c7_V_8_reg_260 = ap_const_lv4_8) else "0";
    icmp_ln890_fu_333_p2 <= "1" when (indvar_flatten29_reg_178 = ap_const_lv14_2000) else "0";

    local_A_ping_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state15, zext_ln890_284_fu_442_p1, zext_ln890_fu_561_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            local_A_ping_V_address0 <= zext_ln890_fu_561_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            local_A_ping_V_address0 <= zext_ln890_284_fu_442_p1(3 - 1 downto 0);
        else 
            local_A_ping_V_address0 <= "XXX";
        end if; 
    end process;

    local_A_ping_V_address1 <= zext_ln890_281_fu_501_p1(3 - 1 downto 0);

    local_A_ping_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            local_A_ping_V_ce0 <= ap_const_logic_1;
        else 
            local_A_ping_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_11001)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            local_A_ping_V_ce1 <= ap_const_logic_1;
        else 
            local_A_ping_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_we1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln890_1482_reg_649, ap_block_pp2_stage0_11001)
    begin
        if (((icmp_ln890_1482_reg_649 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            local_A_ping_V_we1 <= ap_const_logic_1;
        else 
            local_A_ping_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    local_A_pong_V_address0 <= zext_ln890_283_fu_532_p1(3 - 1 downto 0);
    local_A_pong_V_address1 <= zext_ln890_282_fu_411_p1(3 - 1 downto 0);

    local_A_pong_V_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            local_A_pong_V_ce0 <= ap_const_logic_1;
        else 
            local_A_pong_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_A_pong_V_ce1 <= ap_const_logic_1;
        else 
            local_A_pong_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln890_1483_reg_606, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln890_1483_reg_606 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_A_pong_V_we1 <= ap_const_logic_1;
        else 
            local_A_pong_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1257_fu_345_p2 <= (intra_trans_en_reg_213 or icmp_ln890_1480_fu_339_p2);
    or_ln1258_1_fu_387_p2 <= (xor_ln1258_fu_381_p2 or icmp_ln890_1480_fu_339_p2);
    or_ln1258_fu_375_p2 <= (or_ln1257_fu_345_p2 or and_ln1257_1_fu_369_p2);
    or_ln691_fu_464_p2 <= (icmp_ln890_1480_reg_581 or and_ln1257_1_reg_587);
    select_ln1280_fu_434_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_1488_fu_428_p2(0) = '1') else 
        c7_V_8_reg_260;
    select_ln1311_fu_524_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_1487_fu_518_p2(0) = '1') else 
        c7_V_7_reg_294;
    select_ln691_fu_468_p3 <= 
        ap_const_lv6_1 when (or_ln691_fu_464_p2(0) = '1') else 
        add_ln691_1792_fu_458_p2;
    select_ln890_fu_482_p3 <= 
        ap_const_lv11_1 when (icmp_ln890_1480_reg_581(0) = '1') else 
        add_ln890_81_fu_476_p2;
    xor_ln1257_fu_351_p2 <= (icmp_ln890_1480_fu_339_p2 xor ap_const_lv1_1);
    xor_ln1258_fu_381_p2 <= (icmp_ln89069_fu_363_p2 xor ap_const_lv1_1);
    zext_ln890_281_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c4_V_reg_271),64));
    zext_ln890_282_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c4_V_4_reg_237),64));
    zext_ln890_283_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1311_fu_524_p3),64));
    zext_ln890_284_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1280_fu_434_p3),64));
    zext_ln890_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c7_V_reg_316),64));
end behav;
