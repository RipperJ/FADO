-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_C_drain_IO_L2_out_2_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_3_x0295_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_3_x0295_read : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_2_x0294_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_2_x0294_write : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_read : OUT STD_LOGIC );
end;


architecture behav of top_C_drain_IO_L2_out_2_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L2_out_3_x0295_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_blk_n : STD_LOGIC;
    signal add_ln691_fu_163_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_reg_253 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln691_550_fu_175_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_550_reg_261 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln870_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_272 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln890_519_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_554_fu_199_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_554_reg_276 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln691_552_fu_211_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_552_reg_284 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_551_fu_223_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_520_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_521_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_555_fu_229_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_555_reg_297 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln691_553_fu_241_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_553_reg_305 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal c0_V_reg_85 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_518_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c1_V_reg_96 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln890_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c3_V_reg_107 : STD_LOGIC_VECTOR (3 downto 0);
    signal c4_V_10_reg_119 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_523_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_V_reg_130 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln890_522_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_V_10_reg_141 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal c5_V_reg_152 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state9 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_169_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c0_V_reg_85_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c0_V_reg_85 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln890_518_fu_181_p2 = ap_const_lv1_1))) then 
                c0_V_reg_85 <= add_ln691_reg_253;
            end if; 
        end if;
    end process;

    c1_V_reg_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_169_p2 = ap_const_lv1_0))) then 
                c1_V_reg_96 <= ap_const_lv5_0;
            elsif (((icmp_ln890_519_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c1_V_reg_96 <= add_ln691_550_reg_261;
            end if; 
        end if;
    end process;

    c3_V_reg_107_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln890_520_fu_217_p2 = ap_const_lv1_1) and (icmp_ln870_reg_272 = ap_const_lv1_1)) or ((icmp_ln870_reg_272 = ap_const_lv1_0) and (icmp_ln890_521_fu_205_p2 = ap_const_lv1_1))))) then 
                c3_V_reg_107 <= add_ln691_551_fu_223_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln890_518_fu_181_p2 = ap_const_lv1_0))) then 
                c3_V_reg_107 <= ap_const_lv4_2;
            end if; 
        end if;
    end process;

    c4_V_10_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_519_fu_187_p2 = ap_const_lv1_0) and (icmp_ln870_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c4_V_10_reg_119 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_523_fu_235_p2 = ap_const_lv1_1))) then 
                c4_V_10_reg_119 <= add_ln691_554_reg_276;
            end if; 
        end if;
    end process;

    c4_V_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_519_fu_187_p2 = ap_const_lv1_0) and (icmp_ln870_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c4_V_reg_130 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln890_522_fu_247_p2 = ap_const_lv1_1))) then 
                c4_V_reg_130 <= add_ln691_552_reg_284;
            end if; 
        end if;
    end process;

    c5_V_10_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln870_reg_272 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln890_521_fu_205_p2 = ap_const_lv1_0))) then 
                c5_V_10_reg_141 <= ap_const_lv4_0;
            elsif ((not(((fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                c5_V_10_reg_141 <= add_ln691_555_reg_297;
            end if; 
        end if;
    end process;

    c5_V_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_520_fu_217_p2 = ap_const_lv1_0) and (icmp_ln870_reg_272 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                c5_V_reg_152 <= ap_const_lv4_0;
            elsif ((not(((fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                c5_V_reg_152 <= add_ln691_553_reg_305;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln691_550_reg_261 <= add_ln691_550_fu_175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln870_reg_272 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln691_552_reg_284 <= add_ln691_552_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln691_553_reg_305 <= add_ln691_553_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln870_reg_272 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln691_554_reg_276 <= add_ln691_554_fu_199_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln691_555_reg_297 <= add_ln691_555_fu_229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_253 <= add_ln691_fu_163_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_519_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln870_reg_272 <= icmp_ln870_fu_193_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n, fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln870_reg_272, ap_CS_fsm_state4, icmp_ln890_519_fu_187_p2, ap_CS_fsm_state5, icmp_ln890_520_fu_217_p2, icmp_ln890_521_fu_205_p2, ap_CS_fsm_state6, ap_CS_fsm_state8, icmp_ln890_518_fu_181_p2, icmp_ln890_fu_169_p2, icmp_ln890_523_fu_235_p2, icmp_ln890_522_fu_247_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_169_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln890_518_fu_181_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln890_519_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln890_520_fu_217_p2 = ap_const_lv1_1) and (icmp_ln870_reg_272 = ap_const_lv1_1)) or ((icmp_ln870_reg_272 = ap_const_lv1_0) and (icmp_ln890_521_fu_205_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((icmp_ln890_520_fu_217_p2 = ap_const_lv1_0) and (icmp_ln870_reg_272 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln890_523_fu_235_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln890_522_fu_247_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln691_550_fu_175_p2 <= std_logic_vector(unsigned(c1_V_reg_96) + unsigned(ap_const_lv5_1));
    add_ln691_551_fu_223_p2 <= std_logic_vector(unsigned(c3_V_reg_107) + unsigned(ap_const_lv4_1));
    add_ln691_552_fu_211_p2 <= std_logic_vector(unsigned(c4_V_reg_130) + unsigned(ap_const_lv4_1));
    add_ln691_553_fu_241_p2 <= std_logic_vector(unsigned(c5_V_reg_152) + unsigned(ap_const_lv4_1));
    add_ln691_554_fu_199_p2 <= std_logic_vector(unsigned(c4_V_10_reg_119) + unsigned(ap_const_lv4_1));
    add_ln691_555_fu_229_p2 <= std_logic_vector(unsigned(c5_V_10_reg_141) + unsigned(ap_const_lv4_1));
    add_ln691_fu_163_p2 <= std_logic_vector(unsigned(c0_V_reg_85) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n, fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n)
    begin
                ap_block_state7 <= ((fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n)
    begin
                ap_block_state9 <= ((fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln890_fu_169_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_169_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln890_fu_169_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_169_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_blk_n <= fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_read_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n, ap_CS_fsm_state9)
    begin
        if ((not(((fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n <= fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n;
        else 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_2_x0294_din_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_3_x0295_dout, fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n, fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_dout, fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((not(((fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_din <= fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_dout;
        elsif ((not(((fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_din <= fifo_C_drain_C_drain_IO_L2_out_3_x0295_dout;
        else 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_2_x0294_write_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n, fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((not(((fifo_C_drain_C_drain_IO_L1_out_2_0_x0244_empty_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_write <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L2_out_2_x0294_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_3_x0295_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fifo_C_drain_C_drain_IO_L2_out_3_x0295_blk_n <= fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L2_out_3_x0295_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_3_x0295_read_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n, fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n, ap_CS_fsm_state7)
    begin
        if ((not(((fifo_C_drain_C_drain_IO_L2_out_2_x0294_full_n = ap_const_logic_0) or (fifo_C_drain_C_drain_IO_L2_out_3_x0295_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_C_drain_C_drain_IO_L2_out_3_x0295_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L2_out_3_x0295_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln870_fu_193_p2 <= "1" when (c3_V_reg_107 = ap_const_lv4_2) else "0";
    icmp_ln890_518_fu_181_p2 <= "1" when (c1_V_reg_96 = ap_const_lv5_10) else "0";
    icmp_ln890_519_fu_187_p2 <= "1" when (c3_V_reg_107 = ap_const_lv4_8) else "0";
    icmp_ln890_520_fu_217_p2 <= "1" when (c4_V_reg_130 = ap_const_lv4_8) else "0";
    icmp_ln890_521_fu_205_p2 <= "1" when (c4_V_10_reg_119 = ap_const_lv4_8) else "0";
    icmp_ln890_522_fu_247_p2 <= "1" when (c5_V_reg_152 = ap_const_lv4_8) else "0";
    icmp_ln890_523_fu_235_p2 <= "1" when (c5_V_10_reg_141 = ap_const_lv4_8) else "0";
    icmp_ln890_fu_169_p2 <= "1" when (c0_V_reg_85 = ap_const_lv5_10) else "0";
end behav;
