// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_B_IO_L2_in_x1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_B_B_IO_L2_in_0_x114_dout,
        fifo_B_B_IO_L2_in_0_x114_empty_n,
        fifo_B_B_IO_L2_in_0_x114_read,
        fifo_B_B_IO_L2_in_1_x115_din,
        fifo_B_B_IO_L2_in_1_x115_full_n,
        fifo_B_B_IO_L2_in_1_x115_write,
        fifo_B_PE_0_0_x155_din,
        fifo_B_PE_0_0_x155_full_n,
        fifo_B_PE_0_0_x155_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state4 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state8 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_B_B_IO_L2_in_0_x114_dout;
input   fifo_B_B_IO_L2_in_0_x114_empty_n;
output   fifo_B_B_IO_L2_in_0_x114_read;
output  [255:0] fifo_B_B_IO_L2_in_1_x115_din;
input   fifo_B_B_IO_L2_in_1_x115_full_n;
output   fifo_B_B_IO_L2_in_1_x115_write;
output  [255:0] fifo_B_PE_0_0_x155_din;
input   fifo_B_PE_0_0_x155_full_n;
output   fifo_B_PE_0_0_x155_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_B_B_IO_L2_in_0_x114_read;
reg fifo_B_B_IO_L2_in_1_x115_write;
reg fifo_B_PE_0_0_x155_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_B_B_IO_L2_in_0_x114_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_reg_604;
reg    fifo_B_B_IO_L2_in_1_x115_blk_n;
reg   [0:0] select_ln7142_1_reg_608;
reg    fifo_B_PE_0_0_x155_blk_n;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln890_338_reg_647;
reg   [0:0] icmp_ln890_338_reg_647_pp1_iter1_reg;
reg   [12:0] indvar_flatten13_reg_148;
reg   [1:0] c3_V_reg_159;
reg   [12:0] indvar_flatten_reg_170;
reg   [6:0] c4_V_reg_181;
reg   [5:0] c5_V_1_reg_192;
reg   [15:0] indvar_flatten40_reg_203;
reg   [5:0] c5_V_reg_214;
reg   [11:0] indvar_flatten22_reg_225;
reg   [6:0] c6_V_reg_236;
reg   [4:0] c7_V_reg_247;
wire   [12:0] add_ln890_181_fu_258_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln890_fu_264_p2;
wire   [0:0] select_ln7142_1_fu_302_p3;
wire   [1:0] select_ln890_fu_328_p3;
wire   [6:0] select_ln890_489_fu_388_p3;
wire   [10:0] add_ln7151_fu_400_p2;
reg   [10:0] add_ln7151_reg_622;
wire   [5:0] add_ln691_473_fu_406_p2;
wire   [12:0] select_ln890_496_fu_418_p3;
wire   [15:0] add_ln890_179_fu_430_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_state7_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [10:0] empty_847_fu_452_p2;
reg   [10:0] empty_847_reg_642;
wire   [0:0] icmp_ln890_338_fu_458_p2;
wire   [5:0] add_ln691_470_fu_464_p2;
reg   [5:0] add_ln691_470_reg_651;
wire   [0:0] icmp_ln890_339_fu_470_p2;
reg   [0:0] icmp_ln890_339_reg_656;
wire   [5:0] select_ln890_491_fu_484_p3;
reg   [5:0] select_ln890_491_reg_661;
wire   [0:0] and_ln890_fu_504_p2;
reg   [0:0] and_ln890_reg_667;
wire   [5:0] empty_848_fu_516_p1;
reg   [5:0] empty_848_reg_672;
wire   [6:0] select_ln890_494_fu_520_p3;
wire   [4:0] select_ln691_fu_540_p3;
wire   [11:0] select_ln890_495_fu_554_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_CS_fsm_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire   [10:0] local_B_pong_V_address0;
reg    local_B_pong_V_ce0;
wire   [255:0] local_B_pong_V_q0;
wire   [10:0] local_B_pong_V_address1;
reg    local_B_pong_V_ce1;
reg    local_B_pong_V_we1;
reg   [5:0] ap_phi_mux_c5_V_phi_fu_218_p4;
wire   [63:0] zext_ln7151_1_fu_426_p1;
wire   [63:0] select_ln890_546_cast_fu_594_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln890_336_fu_276_p2;
wire   [1:0] add_ln691_fu_270_p2;
wire   [0:0] cmp_i_i72_mid1_fu_290_p2;
wire   [0:0] cmp_i_i7252_fu_296_p2;
wire   [0:0] icmp_ln890_337_fu_316_p2;
wire   [0:0] xor_ln7142_fu_310_p2;
wire   [6:0] select_ln7142_fu_282_p3;
wire   [0:0] and_ln7142_fu_322_p2;
wire   [0:0] or_ln890_fu_342_p2;
wire   [6:0] add_ln691_469_fu_336_p2;
wire   [5:0] trunc_ln7151_1_fu_360_p1;
wire   [5:0] trunc_ln7151_fu_356_p1;
wire   [5:0] select_ln7142_2_fu_364_p3;
wire   [5:0] select_ln890_488_fu_372_p3;
wire   [5:0] select_ln890_487_fu_348_p3;
wire   [10:0] tmp_268_cast_fu_380_p3;
wire   [10:0] zext_ln7151_fu_396_p1;
wire   [12:0] add_ln890_180_fu_412_p2;
wire   [5:0] empty_fu_440_p1;
wire   [10:0] tmp_cast_fu_444_p3;
wire   [10:0] zext_ln7158_fu_436_p1;
wire   [0:0] icmp_ln890_340_fu_498_p2;
wire   [0:0] xor_ln890_fu_492_p2;
wire   [6:0] select_ln890_490_fu_476_p3;
wire   [6:0] add_ln691_471_fu_510_p2;
wire   [0:0] or_ln691_fu_534_p2;
wire   [4:0] add_ln691_472_fu_528_p2;
wire   [11:0] add_ln890_fu_548_p2;
wire   [10:0] zext_ln890_fu_562_p1;
wire   [10:0] tmp_269_cast_fu_574_p3;
wire   [10:0] zext_ln7160_fu_565_p1;
wire   [10:0] empty_849_fu_581_p2;
wire   [10:0] select_ln890_492_fu_568_p3;
wire   [10:0] select_ln890_493_fu_587_p3;
wire    ap_CS_fsm_state8;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

top_B_IO_L2_in_x0_local_B_pong_V #(
    .DataWidth( 256 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
local_B_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_B_pong_V_address0),
    .ce0(local_B_pong_V_ce0),
    .q0(local_B_pong_V_q0),
    .address1(local_B_pong_V_address1),
    .ce1(local_B_pong_V_ce1),
    .we1(local_B_pong_V_we1),
    .d1(fifo_B_B_IO_L2_in_0_x114_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state5)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_264_p2 == 1'd0))) begin
        c3_V_reg_159 <= select_ln890_fu_328_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c3_V_reg_159 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_264_p2 == 1'd0))) begin
        c4_V_reg_181 <= select_ln890_489_fu_388_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c4_V_reg_181 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_264_p2 == 1'd0))) begin
        c5_V_1_reg_192 <= add_ln691_473_fu_406_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c5_V_1_reg_192 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c5_V_reg_214 <= 6'd0;
    end else if (((icmp_ln890_338_reg_647 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c5_V_reg_214 <= select_ln890_491_reg_661;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c6_V_reg_236 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_338_fu_458_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c6_V_reg_236 <= select_ln890_494_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c7_V_reg_247 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_338_fu_458_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c7_V_reg_247 <= select_ln691_fu_540_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_264_p2 == 1'd0))) begin
        indvar_flatten13_reg_148 <= add_ln890_181_fu_258_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_148 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten22_reg_225 <= 12'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_338_fu_458_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten22_reg_225 <= select_ln890_495_fu_554_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten40_reg_203 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_338_fu_458_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten40_reg_203 <= add_ln890_179_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_264_p2 == 1'd0))) begin
        indvar_flatten_reg_170 <= select_ln890_496_fu_418_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_170 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_338_fu_458_p2 == 1'd0))) begin
        add_ln691_470_reg_651 <= add_ln691_470_fu_464_p2;
        and_ln890_reg_667 <= and_ln890_fu_504_p2;
        empty_848_reg_672 <= empty_848_fu_516_p1;
        icmp_ln890_339_reg_656 <= icmp_ln890_339_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_fu_264_p2 == 1'd0))) begin
        add_ln7151_reg_622 <= add_ln7151_fu_400_p2;
        select_ln7142_1_reg_608 <= select_ln7142_1_fu_302_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_847_reg_642 <= empty_847_fu_452_p2;
        icmp_ln890_338_reg_647 <= icmp_ln890_338_fu_458_p2;
        icmp_ln890_338_reg_647_pp1_iter1_reg <= icmp_ln890_338_reg_647;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_reg_604 <= icmp_ln890_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln890_338_fu_458_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln890_491_reg_661 <= select_ln890_491_fu_484_p3;
    end
end

always @ (*) begin
    if ((icmp_ln890_fu_264_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln890_338_fu_458_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_338_reg_647 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c5_V_phi_fu_218_p4 = select_ln890_491_reg_661;
    end else begin
        ap_phi_mux_c5_V_phi_fu_218_p4 = c5_V_reg_214;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_604 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_0_x114_blk_n = fifo_B_B_IO_L2_in_0_x114_empty_n;
    end else begin
        fifo_B_B_IO_L2_in_0_x114_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_reg_604 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_0_x114_read = 1'b1;
    end else begin
        fifo_B_B_IO_L2_in_0_x114_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln7142_1_reg_608 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_1_x115_blk_n = fifo_B_B_IO_L2_in_1_x115_full_n;
    end else begin
        fifo_B_B_IO_L2_in_1_x115_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln7142_1_reg_608 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_1_x115_write = 1'b1;
    end else begin
        fifo_B_B_IO_L2_in_1_x115_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_338_reg_647_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        fifo_B_PE_0_0_x155_blk_n = fifo_B_PE_0_0_x155_full_n;
    end else begin
        fifo_B_PE_0_0_x155_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_338_reg_647_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fifo_B_PE_0_0_x155_write = 1'b1;
    end else begin
        fifo_B_PE_0_0_x155_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_B_pong_V_ce0 = 1'b1;
    end else begin
        local_B_pong_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_pong_V_ce1 = 1'b1;
    end else begin
        local_B_pong_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln7142_1_reg_608 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_B_pong_V_we1 = 1'b1;
    end else begin
        local_B_pong_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_fu_264_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln890_fu_264_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_338_fu_458_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln890_338_fu_458_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln691_469_fu_336_p2 = (select_ln7142_fu_282_p3 + 7'd1);

assign add_ln691_470_fu_464_p2 = (ap_phi_mux_c5_V_phi_fu_218_p4 + 6'd1);

assign add_ln691_471_fu_510_p2 = (select_ln890_490_fu_476_p3 + 7'd1);

assign add_ln691_472_fu_528_p2 = (c7_V_reg_247 + 5'd1);

assign add_ln691_473_fu_406_p2 = (select_ln890_487_fu_348_p3 + 6'd1);

assign add_ln691_fu_270_p2 = (c3_V_reg_159 + 2'd1);

assign add_ln7151_fu_400_p2 = (tmp_268_cast_fu_380_p3 + zext_ln7151_fu_396_p1);

assign add_ln890_179_fu_430_p2 = (indvar_flatten40_reg_203 + 16'd1);

assign add_ln890_180_fu_412_p2 = (indvar_flatten_reg_170 + 13'd1);

assign add_ln890_181_fu_258_p2 = (indvar_flatten13_reg_148 + 13'd1);

assign add_ln890_fu_548_p2 = (indvar_flatten22_reg_225 + 12'd1);

assign and_ln7142_fu_322_p2 = (xor_ln7142_fu_310_p2 & icmp_ln890_337_fu_316_p2);

assign and_ln890_fu_504_p2 = (xor_ln890_fu_492_p2 & icmp_ln890_340_fu_498_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln7142_1_reg_608 == 1'd0) & (fifo_B_B_IO_L2_in_1_x115_full_n == 1'b0)) | ((icmp_ln890_reg_604 == 1'd0) & (fifo_B_B_IO_L2_in_0_x114_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln7142_1_reg_608 == 1'd0) & (fifo_B_B_IO_L2_in_1_x115_full_n == 1'b0)) | ((icmp_ln890_reg_604 == 1'd0) & (fifo_B_B_IO_L2_in_0_x114_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((select_ln7142_1_reg_608 == 1'd0) & (fifo_B_B_IO_L2_in_1_x115_full_n == 1'b0)) | ((icmp_ln890_reg_604 == 1'd0) & (fifo_B_B_IO_L2_in_0_x114_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln890_338_reg_647_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (fifo_B_PE_0_0_x155_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln890_338_reg_647_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (fifo_B_PE_0_0_x155_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln890_338_reg_647_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (fifo_B_PE_0_0_x155_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((select_ln7142_1_reg_608 == 1'd0) & (fifo_B_B_IO_L2_in_1_x115_full_n == 1'b0)) | ((icmp_ln890_reg_604 == 1'd0) & (fifo_B_B_IO_L2_in_0_x114_empty_n == 1'b0)));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter2 = ((icmp_ln890_338_reg_647_pp1_iter1_reg == 1'd0) & (fifo_B_PE_0_0_x155_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmp_i_i7252_fu_296_p2 = ((c3_V_reg_159 == 2'd0) ? 1'b1 : 1'b0);

assign cmp_i_i72_mid1_fu_290_p2 = ((add_ln691_fu_270_p2 == 2'd0) ? 1'b1 : 1'b0);

assign empty_847_fu_452_p2 = (tmp_cast_fu_444_p3 + zext_ln7158_fu_436_p1);

assign empty_848_fu_516_p1 = add_ln691_471_fu_510_p2[5:0];

assign empty_849_fu_581_p2 = (tmp_269_cast_fu_574_p3 + zext_ln7160_fu_565_p1);

assign empty_fu_440_p1 = c6_V_reg_236[5:0];

assign fifo_B_B_IO_L2_in_1_x115_din = fifo_B_B_IO_L2_in_0_x114_dout;

assign fifo_B_PE_0_0_x155_din = local_B_pong_V_q0;

assign icmp_ln890_336_fu_276_p2 = ((indvar_flatten_reg_170 == 13'd2048) ? 1'b1 : 1'b0);

assign icmp_ln890_337_fu_316_p2 = ((c5_V_1_reg_192 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_338_fu_458_p2 = ((indvar_flatten40_reg_203 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln890_339_fu_470_p2 = ((indvar_flatten22_reg_225 == 12'd1024) ? 1'b1 : 1'b0);

assign icmp_ln890_340_fu_498_p2 = ((c7_V_reg_247 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_264_p2 = ((indvar_flatten13_reg_148 == 13'd4096) ? 1'b1 : 1'b0);

assign local_B_pong_V_address0 = select_ln890_546_cast_fu_594_p1;

assign local_B_pong_V_address1 = zext_ln7151_1_fu_426_p1;

assign or_ln691_fu_534_p2 = (icmp_ln890_339_fu_470_p2 | and_ln890_fu_504_p2);

assign or_ln890_fu_342_p2 = (icmp_ln890_336_fu_276_p2 | and_ln7142_fu_322_p2);

assign select_ln691_fu_540_p3 = ((or_ln691_fu_534_p2[0:0] == 1'b1) ? 5'd1 : add_ln691_472_fu_528_p2);

assign select_ln7142_1_fu_302_p3 = ((icmp_ln890_336_fu_276_p2[0:0] == 1'b1) ? cmp_i_i72_mid1_fu_290_p2 : cmp_i_i7252_fu_296_p2);

assign select_ln7142_2_fu_364_p3 = ((icmp_ln890_336_fu_276_p2[0:0] == 1'b1) ? 6'd0 : trunc_ln7151_1_fu_360_p1);

assign select_ln7142_fu_282_p3 = ((icmp_ln890_336_fu_276_p2[0:0] == 1'b1) ? 7'd0 : c4_V_reg_181);

assign select_ln890_487_fu_348_p3 = ((or_ln890_fu_342_p2[0:0] == 1'b1) ? 6'd0 : c5_V_1_reg_192);

assign select_ln890_488_fu_372_p3 = ((and_ln7142_fu_322_p2[0:0] == 1'b1) ? trunc_ln7151_fu_356_p1 : select_ln7142_2_fu_364_p3);

assign select_ln890_489_fu_388_p3 = ((and_ln7142_fu_322_p2[0:0] == 1'b1) ? add_ln691_469_fu_336_p2 : select_ln7142_fu_282_p3);

assign select_ln890_490_fu_476_p3 = ((icmp_ln890_339_fu_470_p2[0:0] == 1'b1) ? 7'd0 : c6_V_reg_236);

assign select_ln890_491_fu_484_p3 = ((icmp_ln890_339_fu_470_p2[0:0] == 1'b1) ? add_ln691_470_fu_464_p2 : ap_phi_mux_c5_V_phi_fu_218_p4);

assign select_ln890_492_fu_568_p3 = ((icmp_ln890_339_reg_656[0:0] == 1'b1) ? zext_ln890_fu_562_p1 : empty_847_reg_642);

assign select_ln890_493_fu_587_p3 = ((and_ln890_reg_667[0:0] == 1'b1) ? empty_849_fu_581_p2 : select_ln890_492_fu_568_p3);

assign select_ln890_494_fu_520_p3 = ((and_ln890_fu_504_p2[0:0] == 1'b1) ? add_ln691_471_fu_510_p2 : select_ln890_490_fu_476_p3);

assign select_ln890_495_fu_554_p3 = ((icmp_ln890_339_fu_470_p2[0:0] == 1'b1) ? 12'd1 : add_ln890_fu_548_p2);

assign select_ln890_496_fu_418_p3 = ((icmp_ln890_336_fu_276_p2[0:0] == 1'b1) ? 13'd1 : add_ln890_180_fu_412_p2);

assign select_ln890_546_cast_fu_594_p1 = select_ln890_493_fu_587_p3;

assign select_ln890_fu_328_p3 = ((icmp_ln890_336_fu_276_p2[0:0] == 1'b1) ? add_ln691_fu_270_p2 : c3_V_reg_159);

assign tmp_268_cast_fu_380_p3 = {{select_ln890_488_fu_372_p3}, {5'd0}};

assign tmp_269_cast_fu_574_p3 = {{empty_848_reg_672}, {5'd0}};

assign tmp_cast_fu_444_p3 = {{empty_fu_440_p1}, {5'd0}};

assign trunc_ln7151_1_fu_360_p1 = c4_V_reg_181[5:0];

assign trunc_ln7151_fu_356_p1 = add_ln691_469_fu_336_p2[5:0];

assign xor_ln7142_fu_310_p2 = (icmp_ln890_336_fu_276_p2 ^ 1'd1);

assign xor_ln890_fu_492_p2 = (icmp_ln890_339_fu_470_p2 ^ 1'd1);

assign zext_ln7151_1_fu_426_p1 = add_ln7151_reg_622;

assign zext_ln7151_fu_396_p1 = select_ln890_487_fu_348_p3;

assign zext_ln7158_fu_436_p1 = ap_phi_mux_c5_V_phi_fu_218_p4;

assign zext_ln7160_fu_565_p1 = select_ln890_491_reg_661;

assign zext_ln890_fu_562_p1 = add_ln691_470_reg_651;

endmodule //top_B_IO_L2_in_x1
