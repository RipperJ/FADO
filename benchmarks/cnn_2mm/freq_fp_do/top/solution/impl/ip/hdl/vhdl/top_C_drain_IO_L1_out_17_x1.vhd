-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_C_drain_IO_L1_out_17_x1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_read : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_write : OUT STD_LOGIC;
    fifo_C_drain_PE_6_1_x1102_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_PE_6_1_x1102_empty_n : IN STD_LOGIC;
    fifo_C_drain_PE_6_1_x1102_read : OUT STD_LOGIC );
end;


architecture behav of top_C_drain_IO_L1_out_17_x1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_E00 : STD_LOGIC_VECTOR (11 downto 0) := "111000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln890_265_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_265_reg_711_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11205_1_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11205_1_reg_715_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln890_265_reg_711_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_PE_6_1_x1102_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln878_reg_678 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_25_reg_687 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_V_reg_239 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_s_reg_250 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten22_reg_259 : STD_LOGIC_VECTOR (11 downto 0);
    signal c4_V_reg_270 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten8_reg_281 : STD_LOGIC_VECTOR (10 downto 0);
    signal c5_V_reg_292 : STD_LOGIC_VECTOR (4 downto 0);
    signal c6_V_87_reg_303 : STD_LOGIC_VECTOR (5 downto 0);
    signal local_C_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op117_read_state11 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln890_fu_330_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln890_reg_638 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln890_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_fu_354_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_reg_647 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln890_425_fu_362_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln890_425_reg_652 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln890_fu_380_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln890_reg_657 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_C_V_addr_reg_662 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_data_split_V_addr_99_reg_668 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_373_fu_401_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln691_373_reg_673 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln878_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_reg_682 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_25_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_25_reg_687_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1497_fu_439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1497_reg_691 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_op66_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal buf_data_split_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_reg_696 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal add_ln691_372_fu_450_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln890_160_fu_455_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln890_265_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11205_1_fu_499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_426_fu_525_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_429_fu_585_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_C_V_addr_35_reg_729 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_374_fu_608_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_430_fu_620_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal local_C_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_ce0 : STD_LOGIC;
    signal local_C_V_ce1 : STD_LOGIC;
    signal local_C_V_we1 : STD_LOGIC;
    signal local_C_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_data_split_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_data_split_V_ce0 : STD_LOGIC;
    signal buf_data_split_V_we0 : STD_LOGIC;
    signal buf_data_split_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_V_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_data_split_V_ce1 : STD_LOGIC;
    signal indvar_flatten_reg_206 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c6_V_reg_217 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_reg_228 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_n_V_phi_fu_243_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_Val2_s_phi_fu_253_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter0_fifo_data_35_reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter1_fifo_data_35_reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter2_fifo_data_35_reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter3_fifo_data_35_reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11188_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_fu_397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11213_1_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal trunc_ln674_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln89058_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_fu_342_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_i113_mid2_v_fu_370_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_384_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln890_266_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_370_fu_467_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp_i_i_mid1_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i59_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_267_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11205_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11205_fu_479_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln11205_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln890_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_371_fu_533_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln11213_1_fu_557_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln11213_fu_553_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln11205_2_fu_561_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_428_fu_569_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_427_fu_545_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_215_cast_fu_577_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln11213_fu_593_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln11213_fu_597_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln890_159_fu_614_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_C_drain_IO_L1_out_0_x0_local_C_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_C_drain_IO_L1_out_4_x0_buf_data_split_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    local_C_V_U : component top_C_drain_IO_L1_out_0_x0_local_C_V
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_V_address0,
        ce0 => local_C_V_ce0,
        q0 => local_C_V_q0,
        address1 => local_C_V_addr_reg_662,
        ce1 => local_C_V_ce1,
        we1 => local_C_V_we1,
        d1 => local_C_V_d1);

    buf_data_split_V_U : component top_C_drain_IO_L1_out_4_x0_buf_data_split_V
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_data_split_V_address0,
        ce0 => buf_data_split_V_ce0,
        we0 => buf_data_split_V_we0,
        d0 => buf_data_split_V_d0,
        address1 => buf_data_split_V_address1,
        ce1 => buf_data_split_V_ce1,
        q1 => buf_data_split_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter3_fifo_data_35_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
                if (((select_ln11205_1_reg_715_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln890_265_reg_711_pp1_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter3_fifo_data_35_reg_314 <= fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_dout;
                elsif (((select_ln11205_1_reg_715_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln890_265_reg_711_pp1_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter3_fifo_data_35_reg_314 <= local_C_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter3_fifo_data_35_reg_314 <= ap_phi_reg_pp1_iter2_fifo_data_35_reg_314;
                end if;
            end if; 
        end if;
    end process;

    c4_V_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                c4_V_reg_270 <= ap_const_lv4_6;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                c4_V_reg_270 <= select_ln890_426_fu_525_p3;
            end if; 
        end if;
    end process;

    c5_V_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                c5_V_reg_292 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                c5_V_reg_292 <= select_ln890_429_fu_585_p3;
            end if; 
        end if;
    end process;

    c6_V_87_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                c6_V_87_reg_303 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                c6_V_87_reg_303 <= add_ln691_374_fu_608_p2;
            end if; 
        end if;
    end process;

    c6_V_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                c6_V_reg_217 <= select_ln890_425_reg_652;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c6_V_reg_217 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    c7_V_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                c7_V_reg_228 <= add_ln691_372_fu_450_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c7_V_reg_228 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten22_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                indvar_flatten22_reg_259 <= ap_const_lv12_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten22_reg_259 <= add_ln890_160_fu_455_p2;
            end if; 
        end if;
    end process;

    indvar_flatten8_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then 
                indvar_flatten8_reg_281 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten8_reg_281 <= select_ln890_430_fu_620_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten_reg_206 <= add_ln890_reg_638;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_206 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    n_V_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                n_V_reg_239 <= ap_const_lv2_0;
            elsif (((icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                n_V_reg_239 <= add_ln691_373_reg_673;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_Val2_s_reg_250 <= local_C_V_q0;
            elsif (((icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                p_Val2_s_reg_250 <= zext_ln1497_reg_691;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln691_373_reg_673 <= add_ln691_373_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln890_reg_638 <= add_ln890_fu_330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter1_fifo_data_35_reg_314 <= ap_phi_reg_pp1_iter0_fifo_data_35_reg_314;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter2_fifo_data_35_reg_314 <= ap_phi_reg_pp1_iter1_fifo_data_35_reg_314;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                buf_data_split_V_addr_99_reg_668 <= zext_ln890_fu_397_p1(1 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_fu_407_p2 = ap_const_lv1_0))) then
                icmp_ln878_25_reg_687 <= icmp_ln878_25_fu_433_p2;
                r_reg_682 <= ap_phi_mux_p_Val2_s_phi_fu_253_p4(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln878_25_reg_687_pp0_iter1_reg <= icmp_ln878_25_reg_687;
                icmp_ln878_reg_678 <= icmp_ln878_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln890_265_reg_711 <= icmp_ln890_265_fu_461_p2;
                icmp_ln890_265_reg_711_pp1_iter1_reg <= icmp_ln890_265_reg_711;
                select_ln11205_1_reg_715_pp1_iter1_reg <= select_ln11205_1_reg_715;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln890_265_reg_711_pp1_iter2_reg <= icmp_ln890_265_reg_711_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                local_C_V_addr_35_reg_729 <= zext_ln11213_1_fu_603_p1(9 - 1 downto 0);
                select_ln11205_1_reg_715 <= select_ln11205_1_fu_499_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_0))) then
                local_C_V_addr_reg_662 <= zext_ln11188_fu_392_p1(9 - 1 downto 0);
                select_ln890_425_reg_652 <= select_ln890_425_fu_362_p3;
                select_ln890_reg_647 <= select_ln890_fu_354_p3;
                trunc_ln890_reg_657 <= trunc_ln890_fu_380_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln878_25_reg_687_pp0_iter1_reg = ap_const_lv1_1))) then
                v2_V_reg_696 <= buf_data_split_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    zext_ln1497_reg_691(31 downto 0) <= zext_ln1497_fu_439_p1(31 downto 0);
            end if;
        end if;
    end process;
    zext_ln1497_reg_691(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp0_iter0, ap_CS_fsm_state2, icmp_ln890_fu_336_p2, ap_CS_fsm_pp0_stage0, icmp_ln878_fu_407_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter0, icmp_ln890_265_fu_461_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_336_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln878_fu_407_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln878_fu_407_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln890_265_fu_461_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln11213_fu_597_p2 <= std_logic_vector(unsigned(tmp_215_cast_fu_577_p3) + unsigned(zext_ln11213_fu_593_p1));
    add_ln691_370_fu_467_p2 <= std_logic_vector(unsigned(c4_V_reg_270) + unsigned(ap_const_lv4_1));
    add_ln691_371_fu_533_p2 <= std_logic_vector(unsigned(select_ln11205_fu_479_p3) + unsigned(ap_const_lv5_1));
    add_ln691_372_fu_450_p2 <= std_logic_vector(unsigned(select_ln890_reg_647) + unsigned(ap_const_lv5_1));
    add_ln691_373_fu_401_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_V_phi_fu_243_p4) + unsigned(ap_const_lv2_1));
    add_ln691_374_fu_608_p2 <= std_logic_vector(unsigned(select_ln890_427_fu_545_p3) + unsigned(ap_const_lv6_1));
    add_ln691_fu_342_p2 <= std_logic_vector(unsigned(c6_V_reg_217) + unsigned(ap_const_lv7_1));
    add_ln890_159_fu_614_p2 <= std_logic_vector(unsigned(indvar_flatten8_reg_281) + unsigned(ap_const_lv11_1));
    add_ln890_160_fu_455_p2 <= std_logic_vector(unsigned(indvar_flatten22_reg_259) + unsigned(ap_const_lv12_1));
    add_ln890_fu_330_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_206) + unsigned(ap_const_lv11_1));
    and_ln11205_fu_519_p2 <= (xor_ln11205_fu_507_p2 and icmp_ln890_267_fu_513_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(fifo_C_drain_PE_6_1_x1102_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op66_read_state5)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (fifo_C_drain_PE_6_1_x1102_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(fifo_C_drain_PE_6_1_x1102_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op66_read_state5)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (fifo_C_drain_PE_6_1_x1102_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n, fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln890_265_reg_711_pp1_iter2_reg, ap_predicate_op117_read_state11)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln890_265_reg_711_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n, fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln890_265_reg_711_pp1_iter2_reg, ap_predicate_op117_read_state11)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln890_265_reg_711_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n, fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln890_265_reg_711_pp1_iter2_reg, ap_predicate_op117_read_state11)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln890_265_reg_711_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter2_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n, ap_predicate_op117_read_state11)
    begin
                ap_block_state11_pp1_stage0_iter2 <= ((fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state11 = ap_const_boolean_1));
    end process;

        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp1_stage0_iter3_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n, icmp_ln890_265_reg_711_pp1_iter2_reg)
    begin
                ap_block_state13_pp1_stage0_iter3 <= ((icmp_ln890_265_reg_711_pp1_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage1_iter0_assign_proc : process(fifo_C_drain_PE_6_1_x1102_empty_n, ap_predicate_op66_read_state5)
    begin
                ap_block_state5_pp0_stage1_iter0 <= ((fifo_C_drain_PE_6_1_x1102_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln878_fu_407_p2)
    begin
        if ((icmp_ln878_fu_407_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(icmp_ln890_265_fu_461_p2)
    begin
        if ((icmp_ln890_265_fu_461_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_n_V_phi_fu_243_p4_assign_proc : process(icmp_ln878_reg_678, n_V_reg_239, add_ln691_373_reg_673, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_n_V_phi_fu_243_p4 <= add_ln691_373_reg_673;
        else 
            ap_phi_mux_n_V_phi_fu_243_p4 <= n_V_reg_239;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_253_p4_assign_proc : process(icmp_ln878_reg_678, p_Val2_s_reg_250, ap_CS_fsm_pp0_stage0, zext_ln1497_reg_691, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_p_Val2_s_phi_fu_253_p4 <= zext_ln1497_reg_691;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_253_p4 <= p_Val2_s_reg_250;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_fifo_data_35_reg_314 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op117_read_state11_assign_proc : process(icmp_ln890_265_reg_711_pp1_iter1_reg, select_ln11205_1_reg_715_pp1_iter1_reg)
    begin
                ap_predicate_op117_read_state11 <= ((select_ln11205_1_reg_715_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln890_265_reg_711_pp1_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op66_read_state5_assign_proc : process(icmp_ln878_reg_678, icmp_ln878_25_reg_687)
    begin
                ap_predicate_op66_read_state5 <= ((icmp_ln878_25_reg_687 = ap_const_lv1_1) and (icmp_ln878_reg_678 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, buf_data_split_V_addr_99_reg_668, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln878_fu_413_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                buf_data_split_V_address0 <= buf_data_split_V_addr_99_reg_668;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                buf_data_split_V_address0 <= zext_ln878_fu_413_p1(1 - 1 downto 0);
            else 
                buf_data_split_V_address0 <= "X";
            end if;
        else 
            buf_data_split_V_address0 <= "X";
        end if; 
    end process;


    buf_data_split_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                buf_data_split_V_address1 <= ap_const_lv64_1(1 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                buf_data_split_V_address1 <= ap_const_lv64_0(1 - 1 downto 0);
            else 
                buf_data_split_V_address1 <= "X";
            end if;
        else 
            buf_data_split_V_address1 <= "X";
        end if; 
    end process;


    buf_data_split_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_data_split_V_ce0 <= ap_const_logic_1;
        else 
            buf_data_split_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buf_data_split_V_ce1 <= ap_const_logic_1;
        else 
            buf_data_split_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_d0_assign_proc : process(fifo_C_drain_PE_6_1_x1102_dout, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, trunc_ln674_fu_418_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                buf_data_split_V_d0 <= fifo_C_drain_PE_6_1_x1102_dout;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                buf_data_split_V_d0 <= trunc_ln674_fu_418_p1;
            else 
                buf_data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_data_split_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln878_reg_678, icmp_ln878_25_reg_687, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln878_fu_407_p2, ap_block_pp0_stage1_11001)
    begin
        if ((((icmp_ln878_25_reg_687 = ap_const_lv1_1) and (icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_fu_407_p2 = ap_const_lv1_0)))) then 
            buf_data_split_V_we0 <= ap_const_logic_1;
        else 
            buf_data_split_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i59_fu_493_p2 <= "1" when (c4_V_reg_270 = ap_const_lv4_6) else "0";
    cmp_i_i_mid1_fu_487_p2 <= "1" when (add_ln691_370_fu_467_p2 = ap_const_lv4_6) else "0";
    conv_i113_mid2_v_fu_370_p4 <= select_ln890_425_fu_362_p3(5 downto 1);

    fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln890_265_reg_711_pp1_iter2_reg)
    begin
        if (((icmp_ln890_265_reg_711_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_blk_n <= fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_full_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_din <= ap_phi_reg_pp1_iter3_fifo_data_35_reg_314;

    fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln890_265_reg_711_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln890_265_reg_711_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_write <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_1_6_x1128_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln890_265_reg_711_pp1_iter1_reg, select_ln11205_1_reg_715_pp1_iter1_reg)
    begin
        if (((select_ln11205_1_reg_715_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln890_265_reg_711_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_blk_n <= fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_read_assign_proc : process(ap_enable_reg_pp1_iter2, ap_predicate_op117_read_state11, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_predicate_op117_read_state11 = ap_const_boolean_1))) then 
            fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_1_7_x1129_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_PE_6_1_x1102_blk_n_assign_proc : process(fifo_C_drain_PE_6_1_x1102_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln878_reg_678, icmp_ln878_25_reg_687)
    begin
        if (((icmp_ln878_25_reg_687 = ap_const_lv1_1) and (icmp_ln878_reg_678 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            fifo_C_drain_PE_6_1_x1102_blk_n <= fifo_C_drain_PE_6_1_x1102_empty_n;
        else 
            fifo_C_drain_PE_6_1_x1102_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_PE_6_1_x1102_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op66_read_state5, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op66_read_state5 = ap_const_boolean_1))) then 
            fifo_C_drain_PE_6_1_x1102_read <= ap_const_logic_1;
        else 
            fifo_C_drain_PE_6_1_x1102_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln878_25_fu_433_p2 <= "1" when (add_ln691_373_fu_401_p2 = ap_const_lv2_2) else "0";
    icmp_ln878_fu_407_p2 <= "1" when (ap_phi_mux_n_V_phi_fu_243_p4 = ap_const_lv2_2) else "0";
    icmp_ln89058_fu_348_p2 <= "1" when (c7_V_reg_228 = ap_const_lv5_10) else "0";
    icmp_ln890_265_fu_461_p2 <= "1" when (indvar_flatten22_reg_259 = ap_const_lv12_E00) else "0";
    icmp_ln890_266_fu_473_p2 <= "1" when (indvar_flatten8_reg_281 = ap_const_lv11_200) else "0";
    icmp_ln890_267_fu_513_p2 <= "1" when (c6_V_87_reg_303 = ap_const_lv6_20) else "0";
    icmp_ln890_fu_336_p2 <= "1" when (indvar_flatten_reg_206 = ap_const_lv11_400) else "0";

    local_C_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, local_C_V_addr_35_reg_729, ap_enable_reg_pp1_iter1, zext_ln11188_fu_392_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            local_C_V_address0 <= local_C_V_addr_35_reg_729;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_C_V_address0 <= zext_ln11188_fu_392_p1(9 - 1 downto 0);
        else 
            local_C_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_C_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            local_C_V_ce0 <= ap_const_logic_1;
        else 
            local_C_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_C_V_ce1 <= ap_const_logic_1;
        else 
            local_C_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_V_d1 <= (buf_data_split_V_q1 & v2_V_reg_696);

    local_C_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln878_25_reg_687_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_25_reg_687_pp0_iter1_reg = ap_const_lv1_1))) then 
            local_C_V_we1 <= ap_const_logic_1;
        else 
            local_C_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln890_fu_539_p2 <= (icmp_ln890_266_fu_473_p2 or and_ln11205_fu_519_p2);
    select_ln11205_1_fu_499_p3 <= 
        cmp_i_i_mid1_fu_487_p2 when (icmp_ln890_266_fu_473_p2(0) = '1') else 
        cmp_i_i59_fu_493_p2;
    select_ln11205_2_fu_561_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_266_fu_473_p2(0) = '1') else 
        trunc_ln11213_1_fu_557_p1;
    select_ln11205_fu_479_p3 <= 
        ap_const_lv5_0 when (icmp_ln890_266_fu_473_p2(0) = '1') else 
        c5_V_reg_292;
    select_ln890_425_fu_362_p3 <= 
        add_ln691_fu_342_p2 when (icmp_ln89058_fu_348_p2(0) = '1') else 
        c6_V_reg_217;
    select_ln890_426_fu_525_p3 <= 
        add_ln691_370_fu_467_p2 when (icmp_ln890_266_fu_473_p2(0) = '1') else 
        c4_V_reg_270;
    select_ln890_427_fu_545_p3 <= 
        ap_const_lv6_0 when (or_ln890_fu_539_p2(0) = '1') else 
        c6_V_87_reg_303;
    select_ln890_428_fu_569_p3 <= 
        trunc_ln11213_fu_553_p1 when (and_ln11205_fu_519_p2(0) = '1') else 
        select_ln11205_2_fu_561_p3;
    select_ln890_429_fu_585_p3 <= 
        add_ln691_371_fu_533_p2 when (and_ln11205_fu_519_p2(0) = '1') else 
        select_ln11205_fu_479_p3;
    select_ln890_430_fu_620_p3 <= 
        ap_const_lv11_1 when (icmp_ln890_266_fu_473_p2(0) = '1') else 
        add_ln890_159_fu_614_p2;
    select_ln890_fu_354_p3 <= 
        ap_const_lv5_0 when (icmp_ln89058_fu_348_p2(0) = '1') else 
        c7_V_reg_228;
    tmp_215_cast_fu_577_p3 <= (select_ln890_428_fu_569_p3 & ap_const_lv5_0);
    tmp_s_fu_384_p3 <= (select_ln890_fu_354_p3 & conv_i113_mid2_v_fu_370_p4);
    trunc_ln11213_1_fu_557_p1 <= c5_V_reg_292(4 - 1 downto 0);
    trunc_ln11213_fu_553_p1 <= add_ln691_371_fu_533_p2(4 - 1 downto 0);
    trunc_ln674_fu_418_p1 <= ap_phi_mux_p_Val2_s_phi_fu_253_p4(32 - 1 downto 0);
    trunc_ln890_fu_380_p1 <= select_ln890_425_fu_362_p3(1 - 1 downto 0);
    xor_ln11205_fu_507_p2 <= (icmp_ln890_266_fu_473_p2 xor ap_const_lv1_1);
    zext_ln11188_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_384_p3),64));
    zext_ln11213_1_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln11213_fu_597_p2),64));
    zext_ln11213_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln890_427_fu_545_p3),9));
    zext_ln1497_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_reg_682),64));
    zext_ln878_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_V_phi_fu_243_p4),64));
    zext_ln890_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln890_reg_657),64));
end behav;
