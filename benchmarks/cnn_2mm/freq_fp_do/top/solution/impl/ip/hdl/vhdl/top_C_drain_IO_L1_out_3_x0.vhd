-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_C_drain_IO_L1_out_3_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write : OUT STD_LOGIC;
    fifo_C_drain_PE_8_0_x091_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_PE_8_0_x091_empty_n : IN STD_LOGIC;
    fifo_C_drain_PE_8_0_x091_read : OUT STD_LOGIC );
end;


architecture behav of top_C_drain_IO_L1_out_3_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_A00 : STD_LOGIC_VECTOR (11 downto 0) := "101000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln890_210_reg_655 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_210_reg_655_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln4020_1_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln4020_1_reg_659_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln890_210_reg_655_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_PE_8_0_x091_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln878_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten13_reg_250 : STD_LOGIC_VECTOR (11 downto 0);
    signal c4_V_reg_261 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_272 : STD_LOGIC_VECTOR (10 downto 0);
    signal c5_V_reg_283 : STD_LOGIC_VECTOR (4 downto 0);
    signal c6_V_70_reg_294 : STD_LOGIC_VECTOR (5 downto 0);
    signal local_C_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op111_read_state9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln691_fu_321_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln691_reg_604 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln890_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal div_i_i120_udiv_reg_613 : STD_LOGIC_VECTOR (4 downto 0);
    signal buf_data_split_V_addr_49_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_289_fu_352_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_289_reg_623 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal local_C_V_addr_reg_628 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_290_fu_376_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal zext_ln1497_fu_408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln890_131_fu_421_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln890_210_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln4020_1_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_fu_491_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_341_fu_551_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_C_V_addr_18_reg_673 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_288_fu_574_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln890_342_fu_586_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal local_C_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_ce0 : STD_LOGIC;
    signal local_C_V_ce1 : STD_LOGIC;
    signal local_C_V_we1 : STD_LOGIC;
    signal local_C_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_data_split_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_data_split_V_ce0 : STD_LOGIC;
    signal buf_data_split_V_we0 : STD_LOGIC;
    signal buf_data_split_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_V_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_data_split_V_ce1 : STD_LOGIC;
    signal buf_data_split_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c6_V_reg_208 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln890_211_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c7_V_reg_219 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal n_V_reg_230 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_s_reg_241 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_fifo_data_18_reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_fifo_data_18_reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_fifo_data_18_reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom_fu_347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4003_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_fu_382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4028_1_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln674_fu_393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal empty_fu_343_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_358_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_fu_398_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln890_212_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_286_fu_433_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp_i_i_mid1_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i48_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_213_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln4020_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln4020_fu_445_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln4020_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln890_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_287_fu_499_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln4028_1_fu_523_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln4028_fu_519_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln4020_2_fu_527_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_340_fu_535_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln890_339_fu_511_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_164_cast_fu_543_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln4028_fu_559_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln4028_fu_563_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln890_fu_580_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_C_drain_IO_L1_out_0_x0_local_C_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_C_drain_IO_L1_out_0_x0_buf_data_split_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    local_C_V_U : component top_C_drain_IO_L1_out_0_x0_local_C_V
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_V_address0,
        ce0 => local_C_V_ce0,
        q0 => local_C_V_q0,
        address1 => local_C_V_addr_reg_628,
        ce1 => local_C_V_ce1,
        we1 => local_C_V_we1,
        d1 => local_C_V_d1);

    buf_data_split_V_U : component top_C_drain_IO_L1_out_0_x0_buf_data_split_V
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_data_split_V_address0,
        ce0 => buf_data_split_V_ce0,
        we0 => buf_data_split_V_we0,
        d0 => buf_data_split_V_d0,
        q0 => buf_data_split_V_q0,
        address1 => buf_data_split_V_address1,
        ce1 => buf_data_split_V_ce1,
        q1 => buf_data_split_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_fifo_data_18_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((select_ln4020_1_reg_659_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln890_210_reg_655_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 <= fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_dout;
                elsif (((select_ln4020_1_reg_659_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln890_210_reg_655_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 <= local_C_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 <= ap_phi_reg_pp0_iter2_fifo_data_18_reg_305;
                end if;
            end if; 
        end if;
    end process;

    c4_V_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                c4_V_reg_261 <= ap_const_lv4_8;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                c4_V_reg_261 <= select_ln890_fu_491_p3;
            end if; 
        end if;
    end process;

    c5_V_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                c5_V_reg_283 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                c5_V_reg_283 <= select_ln890_341_fu_551_p3;
            end if; 
        end if;
    end process;

    c6_V_70_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                c6_V_70_reg_294 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                c6_V_70_reg_294 <= add_ln691_288_fu_574_p2;
            end if; 
        end if;
    end process;

    c6_V_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c6_V_reg_208 <= ap_const_lv7_0;
            elsif (((icmp_ln890_211_fu_370_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c6_V_reg_208 <= add_ln691_reg_604;
            end if; 
        end if;
    end process;

    c7_V_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_0))) then 
                c7_V_reg_219 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c7_V_reg_219 <= add_ln691_289_reg_623;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                indvar_flatten13_reg_250 <= ap_const_lv12_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten13_reg_250 <= add_ln890_131_fu_421_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then 
                indvar_flatten_reg_272 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_272 <= select_ln890_342_fu_586_p3;
            end if; 
        end if;
    end process;

    n_V_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                n_V_reg_230 <= ap_const_lv2_0;
            elsif ((not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                n_V_reg_230 <= add_ln691_290_fu_376_p2;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_s_reg_241 <= local_C_V_q0;
            elsif ((not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_Val2_s_reg_241 <= zext_ln1497_fu_408_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln691_289_reg_623 <= add_ln691_289_fu_352_p2;
                local_C_V_addr_reg_628 <= zext_ln4003_fu_365_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_604 <= add_ln691_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_fifo_data_18_reg_305 <= ap_phi_reg_pp0_iter0_fifo_data_18_reg_305;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_fifo_data_18_reg_305 <= ap_phi_reg_pp0_iter1_fifo_data_18_reg_305;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_0))) then
                buf_data_split_V_addr_49_reg_618 <= idxprom_fu_347_p1(1 - 1 downto 0);
                div_i_i120_udiv_reg_613 <= c6_V_reg_208(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln890_210_reg_655 <= icmp_ln890_210_fu_427_p2;
                icmp_ln890_210_reg_655_pp0_iter1_reg <= icmp_ln890_210_reg_655;
                select_ln4020_1_reg_659_pp0_iter1_reg <= select_ln4020_1_reg_659;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln890_210_reg_655_pp0_iter2_reg <= icmp_ln890_210_reg_655_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_0))) then
                local_C_V_addr_18_reg_673 <= zext_ln4028_1_fu_569_p1(9 - 1 downto 0);
                select_ln4020_1_reg_659 <= select_ln4020_1_fu_465_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_C_drain_PE_8_0_x091_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_state5, icmp_ln878_fu_387_p2, ap_CS_fsm_state2, icmp_ln890_fu_327_p2, ap_CS_fsm_state3, ap_enable_reg_pp0_iter0, icmp_ln890_210_fu_427_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, icmp_ln890_211_fu_370_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_327_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_211_fu_370_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if ((not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_210_fu_427_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln4028_fu_563_p2 <= std_logic_vector(unsigned(tmp_164_cast_fu_543_p3) + unsigned(zext_ln4028_fu_559_p1));
    add_ln691_286_fu_433_p2 <= std_logic_vector(unsigned(c4_V_reg_261) + unsigned(ap_const_lv4_1));
    add_ln691_287_fu_499_p2 <= std_logic_vector(unsigned(select_ln4020_fu_445_p3) + unsigned(ap_const_lv5_1));
    add_ln691_288_fu_574_p2 <= std_logic_vector(unsigned(select_ln890_339_fu_511_p3) + unsigned(ap_const_lv6_1));
    add_ln691_289_fu_352_p2 <= std_logic_vector(unsigned(c7_V_reg_219) + unsigned(ap_const_lv5_1));
    add_ln691_290_fu_376_p2 <= std_logic_vector(unsigned(n_V_reg_230) + unsigned(ap_const_lv2_1));
    add_ln691_fu_321_p2 <= std_logic_vector(unsigned(c6_V_reg_208) + unsigned(ap_const_lv7_1));
    add_ln890_131_fu_421_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_250) + unsigned(ap_const_lv12_1));
    add_ln890_fu_580_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_272) + unsigned(ap_const_lv11_1));
    and_ln4020_fu_485_p2 <= (xor_ln4020_fu_473_p2 and icmp_ln890_213_fu_479_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln890_210_reg_655_pp0_iter2_reg, ap_predicate_op111_read_state9)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln890_210_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n = ap_const_logic_0)) or ((ap_predicate_op111_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln890_210_reg_655_pp0_iter2_reg, ap_predicate_op111_read_state9)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln890_210_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n = ap_const_logic_0)) or ((ap_predicate_op111_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln890_210_reg_655_pp0_iter2_reg, ap_predicate_op111_read_state9)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln890_210_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n = ap_const_logic_0)) or ((ap_predicate_op111_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter3_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n, icmp_ln890_210_reg_655_pp0_iter2_reg)
    begin
                ap_block_state11_pp0_stage0_iter3 <= ((icmp_ln890_210_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(fifo_C_drain_PE_8_0_x091_empty_n, icmp_ln878_fu_387_p2)
    begin
                ap_block_state5 <= ((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0));
    end process;

        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter2_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n, ap_predicate_op111_read_state9)
    begin
                ap_block_state9_pp0_stage0_iter2 <= ((ap_predicate_op111_read_state9 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state8_assign_proc : process(icmp_ln890_210_fu_427_p2)
    begin
        if ((icmp_ln890_210_fu_427_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_fifo_data_18_reg_305 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op111_read_state9_assign_proc : process(icmp_ln890_210_reg_655_pp0_iter1_reg, select_ln4020_1_reg_659_pp0_iter1_reg)
    begin
                ap_predicate_op111_read_state9 <= ((select_ln4020_1_reg_659_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln890_210_reg_655_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_address0_assign_proc : process(ap_CS_fsm_state5, icmp_ln878_fu_387_p2, buf_data_split_V_addr_49_reg_618, zext_ln878_fu_382_p1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_data_split_V_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif (((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_data_split_V_address0 <= buf_data_split_V_addr_49_reg_618;
        elsif (((icmp_ln878_fu_387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_data_split_V_address0 <= zext_ln878_fu_382_p1(1 - 1 downto 0);
        else 
            buf_data_split_V_address0 <= "X";
        end if; 
    end process;

    buf_data_split_V_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    buf_data_split_V_ce0_assign_proc : process(fifo_C_drain_PE_8_0_x091_empty_n, ap_CS_fsm_state5, icmp_ln878_fu_387_p2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            buf_data_split_V_ce0 <= ap_const_logic_1;
        else 
            buf_data_split_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_data_split_V_ce1 <= ap_const_logic_1;
        else 
            buf_data_split_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_data_split_V_d0_assign_proc : process(fifo_C_drain_PE_8_0_x091_dout, ap_CS_fsm_state5, icmp_ln878_fu_387_p2, trunc_ln674_fu_393_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
            if ((icmp_ln878_fu_387_p2 = ap_const_lv1_1)) then 
                buf_data_split_V_d0 <= fifo_C_drain_PE_8_0_x091_dout;
            elsif ((icmp_ln878_fu_387_p2 = ap_const_lv1_0)) then 
                buf_data_split_V_d0 <= trunc_ln674_fu_393_p1;
            else 
                buf_data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_data_split_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_data_split_V_we0_assign_proc : process(fifo_C_drain_PE_8_0_x091_empty_n, ap_CS_fsm_state5, icmp_ln878_fu_387_p2)
    begin
        if (((not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            buf_data_split_V_we0 <= ap_const_logic_1;
        else 
            buf_data_split_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i48_fu_459_p2 <= "1" when (c4_V_reg_261 = ap_const_lv4_8) else "0";
    cmp_i_i_mid1_fu_453_p2 <= "1" when (add_ln691_286_fu_433_p2 = ap_const_lv4_8) else "0";
    empty_fu_343_p1 <= c6_V_reg_208(1 - 1 downto 0);

    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln890_210_reg_655_pp0_iter2_reg)
    begin
        if (((icmp_ln890_210_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n <= fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_din <= ap_phi_reg_pp0_iter3_fifo_data_18_reg_305;

    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln890_210_reg_655_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln890_210_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln890_210_reg_655_pp0_iter1_reg, select_ln4020_1_reg_659_pp0_iter1_reg)
    begin
        if (((select_ln4020_1_reg_659_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln890_210_reg_655_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n <= fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op111_read_state9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op111_read_state9 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_PE_8_0_x091_blk_n_assign_proc : process(fifo_C_drain_PE_8_0_x091_empty_n, ap_CS_fsm_state5, icmp_ln878_fu_387_p2)
    begin
        if (((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fifo_C_drain_PE_8_0_x091_blk_n <= fifo_C_drain_PE_8_0_x091_empty_n;
        else 
            fifo_C_drain_PE_8_0_x091_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_PE_8_0_x091_read_assign_proc : process(fifo_C_drain_PE_8_0_x091_empty_n, ap_CS_fsm_state5, icmp_ln878_fu_387_p2)
    begin
        if ((not(((icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (fifo_C_drain_PE_8_0_x091_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fifo_C_drain_PE_8_0_x091_read <= ap_const_logic_1;
        else 
            fifo_C_drain_PE_8_0_x091_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln878_fu_387_p2 <= "1" when (n_V_reg_230 = ap_const_lv2_2) else "0";
    icmp_ln890_210_fu_427_p2 <= "1" when (indvar_flatten13_reg_250 = ap_const_lv12_A00) else "0";
    icmp_ln890_211_fu_370_p2 <= "1" when (c7_V_reg_219 = ap_const_lv5_10) else "0";
    icmp_ln890_212_fu_439_p2 <= "1" when (indvar_flatten_reg_272 = ap_const_lv11_200) else "0";
    icmp_ln890_213_fu_479_p2 <= "1" when (c6_V_70_reg_294 = ap_const_lv6_20) else "0";
    icmp_ln890_fu_327_p2 <= "1" when (c6_V_reg_208 = ap_const_lv7_40) else "0";
    idxprom_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_343_p1),64));

    local_C_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, local_C_V_addr_18_reg_673, ap_enable_reg_pp0_iter1, zext_ln4003_fu_365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_C_V_address0 <= local_C_V_addr_18_reg_673;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            local_C_V_address0 <= zext_ln4003_fu_365_p1(9 - 1 downto 0);
        else 
            local_C_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_C_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_C_V_ce0 <= ap_const_logic_1;
        else 
            local_C_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_V_ce1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            local_C_V_ce1 <= ap_const_logic_1;
        else 
            local_C_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_V_d1 <= (buf_data_split_V_q0 & buf_data_split_V_q1);

    local_C_V_we1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            local_C_V_we1 <= ap_const_logic_1;
        else 
            local_C_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln890_fu_505_p2 <= (icmp_ln890_212_fu_439_p2 or and_ln4020_fu_485_p2);
    r_fu_398_p4 <= p_Val2_s_reg_241(63 downto 32);
    select_ln4020_1_fu_465_p3 <= 
        cmp_i_i_mid1_fu_453_p2 when (icmp_ln890_212_fu_439_p2(0) = '1') else 
        cmp_i_i48_fu_459_p2;
    select_ln4020_2_fu_527_p3 <= 
        ap_const_lv4_0 when (icmp_ln890_212_fu_439_p2(0) = '1') else 
        trunc_ln4028_1_fu_523_p1;
    select_ln4020_fu_445_p3 <= 
        ap_const_lv5_0 when (icmp_ln890_212_fu_439_p2(0) = '1') else 
        c5_V_reg_283;
    select_ln890_339_fu_511_p3 <= 
        ap_const_lv6_0 when (or_ln890_fu_505_p2(0) = '1') else 
        c6_V_70_reg_294;
    select_ln890_340_fu_535_p3 <= 
        trunc_ln4028_fu_519_p1 when (and_ln4020_fu_485_p2(0) = '1') else 
        select_ln4020_2_fu_527_p3;
    select_ln890_341_fu_551_p3 <= 
        add_ln691_287_fu_499_p2 when (and_ln4020_fu_485_p2(0) = '1') else 
        select_ln4020_fu_445_p3;
    select_ln890_342_fu_586_p3 <= 
        ap_const_lv11_1 when (icmp_ln890_212_fu_439_p2(0) = '1') else 
        add_ln890_fu_580_p2;
    select_ln890_fu_491_p3 <= 
        add_ln691_286_fu_433_p2 when (icmp_ln890_212_fu_439_p2(0) = '1') else 
        c4_V_reg_261;
    tmp_164_cast_fu_543_p3 <= (select_ln890_340_fu_535_p3 & ap_const_lv5_0);
    tmp_s_fu_358_p3 <= (c7_V_reg_219 & div_i_i120_udiv_reg_613);
    trunc_ln4028_1_fu_523_p1 <= c5_V_reg_283(4 - 1 downto 0);
    trunc_ln4028_fu_519_p1 <= add_ln691_287_fu_499_p2(4 - 1 downto 0);
    trunc_ln674_fu_393_p1 <= p_Val2_s_reg_241(32 - 1 downto 0);
    xor_ln4020_fu_473_p2 <= (icmp_ln890_212_fu_439_p2 xor ap_const_lv1_1);
    zext_ln1497_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_398_p4),64));
    zext_ln4003_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_358_p3),64));
    zext_ln4028_1_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln4028_fu_563_p2),64));
    zext_ln4028_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln890_339_fu_511_p3),9));
    zext_ln878_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_reg_230),64));
end behav;
