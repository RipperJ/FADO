// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_C_drain_IO_L1_out_3_x0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_dout,
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n,
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read,
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_din,
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n,
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write,
        fifo_C_drain_PE_8_0_x091_dout,
        fifo_C_drain_PE_8_0_x091_empty_n,
        fifo_C_drain_PE_8_0_x091_read
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_pp0_stage0 = 9'd128;
parameter    ap_ST_fsm_state12 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_dout;
input   fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n;
output   fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read;
output  [63:0] fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_din;
input   fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n;
output   fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write;
input  [31:0] fifo_C_drain_PE_8_0_x091_dout;
input   fifo_C_drain_PE_8_0_x091_empty_n;
output   fifo_C_drain_PE_8_0_x091_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read;
reg fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write;
reg fifo_C_drain_PE_8_0_x091_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln890_210_reg_655;
reg   [0:0] icmp_ln890_210_reg_655_pp0_iter1_reg;
reg   [0:0] select_ln4020_1_reg_659;
reg   [0:0] select_ln4020_1_reg_659_pp0_iter1_reg;
reg    fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln890_210_reg_655_pp0_iter2_reg;
reg    fifo_C_drain_PE_8_0_x091_blk_n;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln878_fu_387_p2;
reg   [11:0] indvar_flatten13_reg_250;
reg   [3:0] c4_V_reg_261;
reg   [10:0] indvar_flatten_reg_272;
reg   [4:0] c5_V_reg_283;
reg   [5:0] c6_V_70_reg_294;
wire   [63:0] local_C_V_q0;
wire    ap_CS_fsm_state4;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
reg    ap_predicate_op111_read_state9;
reg    ap_block_state9_pp0_stage0_iter2;
reg    ap_block_state11_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln691_fu_321_p2;
reg   [6:0] add_ln691_reg_604;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln890_fu_327_p2;
reg   [4:0] div_i_i120_udiv_reg_613;
reg   [0:0] buf_data_split_V_addr_49_reg_618;
wire   [4:0] add_ln691_289_fu_352_p2;
reg   [4:0] add_ln691_289_reg_623;
wire    ap_CS_fsm_state3;
reg   [8:0] local_C_V_addr_reg_628;
wire   [1:0] add_ln691_290_fu_376_p2;
reg    ap_block_state5;
wire   [63:0] zext_ln1497_fu_408_p1;
wire   [11:0] add_ln890_131_fu_421_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln890_210_fu_427_p2;
wire   [0:0] select_ln4020_1_fu_465_p3;
wire   [3:0] select_ln890_fu_491_p3;
wire   [4:0] select_ln890_341_fu_551_p3;
reg   [8:0] local_C_V_addr_18_reg_673;
wire   [5:0] add_ln691_288_fu_574_p2;
wire   [10:0] select_ln890_342_fu_586_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
reg    ap_enable_reg_pp0_iter1;
reg   [8:0] local_C_V_address0;
reg    local_C_V_ce0;
reg    local_C_V_ce1;
reg    local_C_V_we1;
wire   [63:0] local_C_V_d1;
reg   [0:0] buf_data_split_V_address0;
reg    buf_data_split_V_ce0;
reg    buf_data_split_V_we0;
reg   [31:0] buf_data_split_V_d0;
wire   [31:0] buf_data_split_V_q0;
wire   [0:0] buf_data_split_V_address1;
reg    buf_data_split_V_ce1;
wire   [31:0] buf_data_split_V_q1;
reg   [6:0] c6_V_reg_208;
wire   [0:0] icmp_ln890_211_fu_370_p2;
reg    ap_block_state1;
reg   [4:0] c7_V_reg_219;
wire    ap_CS_fsm_state7;
reg   [1:0] n_V_reg_230;
reg   [63:0] p_Val2_s_reg_241;
wire   [63:0] ap_phi_reg_pp0_iter0_fifo_data_18_reg_305;
reg   [63:0] ap_phi_reg_pp0_iter1_fifo_data_18_reg_305;
reg   [63:0] ap_phi_reg_pp0_iter2_fifo_data_18_reg_305;
reg   [63:0] ap_phi_reg_pp0_iter3_fifo_data_18_reg_305;
wire   [63:0] idxprom_fu_347_p1;
wire   [63:0] zext_ln4003_fu_365_p1;
wire   [63:0] zext_ln878_fu_382_p1;
wire   [63:0] zext_ln4028_1_fu_569_p1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] trunc_ln674_fu_393_p1;
wire    ap_CS_fsm_state6;
wire   [0:0] empty_fu_343_p1;
wire   [9:0] tmp_s_fu_358_p3;
wire   [31:0] r_fu_398_p4;
wire   [0:0] icmp_ln890_212_fu_439_p2;
wire   [3:0] add_ln691_286_fu_433_p2;
wire   [0:0] cmp_i_i_mid1_fu_453_p2;
wire   [0:0] cmp_i_i48_fu_459_p2;
wire   [0:0] icmp_ln890_213_fu_479_p2;
wire   [0:0] xor_ln4020_fu_473_p2;
wire   [4:0] select_ln4020_fu_445_p3;
wire   [0:0] and_ln4020_fu_485_p2;
wire   [0:0] or_ln890_fu_505_p2;
wire   [4:0] add_ln691_287_fu_499_p2;
wire   [3:0] trunc_ln4028_1_fu_523_p1;
wire   [3:0] trunc_ln4028_fu_519_p1;
wire   [3:0] select_ln4020_2_fu_527_p3;
wire   [3:0] select_ln890_340_fu_535_p3;
wire   [5:0] select_ln890_339_fu_511_p3;
wire   [8:0] tmp_164_cast_fu_543_p3;
wire   [8:0] zext_ln4028_fu_559_p1;
wire   [8:0] add_ln4028_fu_563_p2;
wire   [10:0] add_ln890_fu_580_p2;
wire    ap_CS_fsm_state12;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

top_C_drain_IO_L1_out_0_x0_local_C_V #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_C_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_V_address0),
    .ce0(local_C_V_ce0),
    .q0(local_C_V_q0),
    .address1(local_C_V_addr_reg_628),
    .ce1(local_C_V_ce1),
    .we1(local_C_V_we1),
    .d1(local_C_V_d1)
);

top_C_drain_IO_L1_out_0_x0_buf_data_split_V #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
buf_data_split_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_data_split_V_address0),
    .ce0(buf_data_split_V_ce0),
    .we0(buf_data_split_V_we0),
    .d0(buf_data_split_V_d0),
    .q0(buf_data_split_V_q0),
    .address1(buf_data_split_V_address1),
    .ce1(buf_data_split_V_ce1),
    .q1(buf_data_split_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state8)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((select_ln4020_1_reg_659_pp0_iter1_reg == 1'd0) & (icmp_ln890_210_reg_655_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 <= fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_dout;
        end else if (((select_ln4020_1_reg_659_pp0_iter1_reg == 1'd1) & (icmp_ln890_210_reg_655_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 <= local_C_V_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_fifo_data_18_reg_305 <= ap_phi_reg_pp0_iter2_fifo_data_18_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
        c4_V_reg_261 <= 4'd8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_210_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c4_V_reg_261 <= select_ln890_fu_491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
        c5_V_reg_283 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_210_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c5_V_reg_283 <= select_ln890_341_fu_551_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
        c6_V_70_reg_294 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_210_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c6_V_70_reg_294 <= add_ln691_288_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c6_V_reg_208 <= 7'd0;
    end else if (((icmp_ln890_211_fu_370_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c6_V_reg_208 <= add_ln691_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd0))) begin
        c7_V_reg_219 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        c7_V_reg_219 <= add_ln691_289_reg_623;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
        indvar_flatten13_reg_250 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_210_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten13_reg_250 <= add_ln890_131_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
        indvar_flatten_reg_272 <= 11'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_210_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_272 <= select_ln890_342_fu_586_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        n_V_reg_230 <= 2'd0;
    end else if ((~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        n_V_reg_230 <= add_ln691_290_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_s_reg_241 <= local_C_V_q0;
    end else if ((~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        p_Val2_s_reg_241 <= zext_ln1497_fu_408_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln691_289_reg_623 <= add_ln691_289_fu_352_p2;
        local_C_V_addr_reg_628 <= zext_ln4003_fu_365_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln691_reg_604 <= add_ln691_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_fifo_data_18_reg_305 <= ap_phi_reg_pp0_iter0_fifo_data_18_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_fifo_data_18_reg_305 <= ap_phi_reg_pp0_iter1_fifo_data_18_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd0))) begin
        buf_data_split_V_addr_49_reg_618 <= idxprom_fu_347_p1;
        div_i_i120_udiv_reg_613 <= {{c6_V_reg_208[5:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln890_210_reg_655 <= icmp_ln890_210_fu_427_p2;
        icmp_ln890_210_reg_655_pp0_iter1_reg <= icmp_ln890_210_reg_655;
        select_ln4020_1_reg_659_pp0_iter1_reg <= select_ln4020_1_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln890_210_reg_655_pp0_iter2_reg <= icmp_ln890_210_reg_655_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln890_210_fu_427_p2 == 1'd0))) begin
        local_C_V_addr_18_reg_673 <= zext_ln4028_1_fu_569_p1;
        select_ln4020_1_reg_659 <= select_ln4020_1_fu_465_p3;
    end
end

always @ (*) begin
    if ((icmp_ln890_210_fu_427_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_data_split_V_address0 = 64'd1;
    end else if (((icmp_ln878_fu_387_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        buf_data_split_V_address0 = buf_data_split_V_addr_49_reg_618;
    end else if (((icmp_ln878_fu_387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        buf_data_split_V_address0 = zext_ln878_fu_382_p1;
    end else begin
        buf_data_split_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | (~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        buf_data_split_V_ce0 = 1'b1;
    end else begin
        buf_data_split_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_data_split_V_ce1 = 1'b1;
    end else begin
        buf_data_split_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((icmp_ln878_fu_387_p2 == 1'd1)) begin
            buf_data_split_V_d0 = fifo_C_drain_PE_8_0_x091_dout;
        end else if ((icmp_ln878_fu_387_p2 == 1'd0)) begin
            buf_data_split_V_d0 = trunc_ln674_fu_393_p1;
        end else begin
            buf_data_split_V_d0 = 'bx;
        end
    end else begin
        buf_data_split_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | (~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        buf_data_split_V_we0 = 1'b1;
    end else begin
        buf_data_split_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln890_210_reg_655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n = fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln890_210_reg_655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln4020_1_reg_659_pp0_iter1_reg == 1'd0) & (icmp_ln890_210_reg_655_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n = fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op111_read_state9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_fu_387_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        fifo_C_drain_PE_8_0_x091_blk_n = fifo_C_drain_PE_8_0_x091_empty_n;
    end else begin
        fifo_C_drain_PE_8_0_x091_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        fifo_C_drain_PE_8_0_x091_read = 1'b1;
    end else begin
        fifo_C_drain_PE_8_0_x091_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_address0 = local_C_V_addr_18_reg_673;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        local_C_V_address0 = zext_ln4003_fu_365_p1;
    end else begin
        local_C_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_C_V_ce0 = 1'b1;
    end else begin
        local_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_C_V_ce1 = 1'b1;
    end else begin
        local_C_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_C_V_we1 = 1'b1;
    end else begin
        local_C_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln890_fu_327_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln890_211_fu_370_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0)) & (icmp_ln878_fu_387_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_210_fu_427_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln890_210_fu_427_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln4028_fu_563_p2 = (tmp_164_cast_fu_543_p3 + zext_ln4028_fu_559_p1);

assign add_ln691_286_fu_433_p2 = (c4_V_reg_261 + 4'd1);

assign add_ln691_287_fu_499_p2 = (select_ln4020_fu_445_p3 + 5'd1);

assign add_ln691_288_fu_574_p2 = (select_ln890_339_fu_511_p3 + 6'd1);

assign add_ln691_289_fu_352_p2 = (c7_V_reg_219 + 5'd1);

assign add_ln691_290_fu_376_p2 = (n_V_reg_230 + 2'd1);

assign add_ln691_fu_321_p2 = (c6_V_reg_208 + 7'd1);

assign add_ln890_131_fu_421_p2 = (indvar_flatten13_reg_250 + 12'd1);

assign add_ln890_fu_580_p2 = (indvar_flatten_reg_272 + 11'd1);

assign and_ln4020_fu_485_p2 = (xor_ln4020_fu_473_p2 & icmp_ln890_213_fu_479_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln890_210_reg_655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n == 1'b0)) | ((ap_predicate_op111_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln890_210_reg_655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n == 1'b0)) | ((ap_predicate_op111_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln890_210_reg_655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n == 1'b0)) | ((ap_predicate_op111_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter3 = ((icmp_ln890_210_reg_655_pp0_iter2_reg == 1'd0) & (fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((icmp_ln878_fu_387_p2 == 1'd1) & (fifo_C_drain_PE_8_0_x091_empty_n == 1'b0));
end

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter2 = ((ap_predicate_op111_read_state9 == 1'b1) & (fifo_C_drain_C_drain_IO_L1_out_0_9_x0118_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_fifo_data_18_reg_305 = 'bx;

always @ (*) begin
    ap_predicate_op111_read_state9 = ((select_ln4020_1_reg_659_pp0_iter1_reg == 1'd0) & (icmp_ln890_210_reg_655_pp0_iter1_reg == 1'd0));
end

assign buf_data_split_V_address1 = 64'd0;

assign cmp_i_i48_fu_459_p2 = ((c4_V_reg_261 == 4'd8) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_453_p2 = ((add_ln691_286_fu_433_p2 == 4'd8) ? 1'b1 : 1'b0);

assign empty_fu_343_p1 = c6_V_reg_208[0:0];

assign fifo_C_drain_C_drain_IO_L1_out_0_8_x0117_din = ap_phi_reg_pp0_iter3_fifo_data_18_reg_305;

assign icmp_ln878_fu_387_p2 = ((n_V_reg_230 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln890_210_fu_427_p2 = ((indvar_flatten13_reg_250 == 12'd2560) ? 1'b1 : 1'b0);

assign icmp_ln890_211_fu_370_p2 = ((c7_V_reg_219 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln890_212_fu_439_p2 = ((indvar_flatten_reg_272 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln890_213_fu_479_p2 = ((c6_V_70_reg_294 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_327_p2 = ((c6_V_reg_208 == 7'd64) ? 1'b1 : 1'b0);

assign idxprom_fu_347_p1 = empty_fu_343_p1;

assign local_C_V_d1 = {{buf_data_split_V_q0}, {buf_data_split_V_q1}};

assign or_ln890_fu_505_p2 = (icmp_ln890_212_fu_439_p2 | and_ln4020_fu_485_p2);

assign r_fu_398_p4 = {{p_Val2_s_reg_241[63:32]}};

assign select_ln4020_1_fu_465_p3 = ((icmp_ln890_212_fu_439_p2[0:0] == 1'b1) ? cmp_i_i_mid1_fu_453_p2 : cmp_i_i48_fu_459_p2);

assign select_ln4020_2_fu_527_p3 = ((icmp_ln890_212_fu_439_p2[0:0] == 1'b1) ? 4'd0 : trunc_ln4028_1_fu_523_p1);

assign select_ln4020_fu_445_p3 = ((icmp_ln890_212_fu_439_p2[0:0] == 1'b1) ? 5'd0 : c5_V_reg_283);

assign select_ln890_339_fu_511_p3 = ((or_ln890_fu_505_p2[0:0] == 1'b1) ? 6'd0 : c6_V_70_reg_294);

assign select_ln890_340_fu_535_p3 = ((and_ln4020_fu_485_p2[0:0] == 1'b1) ? trunc_ln4028_fu_519_p1 : select_ln4020_2_fu_527_p3);

assign select_ln890_341_fu_551_p3 = ((and_ln4020_fu_485_p2[0:0] == 1'b1) ? add_ln691_287_fu_499_p2 : select_ln4020_fu_445_p3);

assign select_ln890_342_fu_586_p3 = ((icmp_ln890_212_fu_439_p2[0:0] == 1'b1) ? 11'd1 : add_ln890_fu_580_p2);

assign select_ln890_fu_491_p3 = ((icmp_ln890_212_fu_439_p2[0:0] == 1'b1) ? add_ln691_286_fu_433_p2 : c4_V_reg_261);

assign tmp_164_cast_fu_543_p3 = {{select_ln890_340_fu_535_p3}, {5'd0}};

assign tmp_s_fu_358_p3 = {{c7_V_reg_219}, {div_i_i120_udiv_reg_613}};

assign trunc_ln4028_1_fu_523_p1 = c5_V_reg_283[3:0];

assign trunc_ln4028_fu_519_p1 = add_ln691_287_fu_499_p2[3:0];

assign trunc_ln674_fu_393_p1 = p_Val2_s_reg_241[31:0];

assign xor_ln4020_fu_473_p2 = (icmp_ln890_212_fu_439_p2 ^ 1'd1);

assign zext_ln1497_fu_408_p1 = r_fu_398_p4;

assign zext_ln4003_fu_365_p1 = tmp_s_fu_358_p3;

assign zext_ln4028_1_fu_569_p1 = add_ln4028_fu_563_p2;

assign zext_ln4028_fu_559_p1 = select_ln890_339_fu_511_p3;

assign zext_ln878_fu_382_p1 = n_V_reg_230;

endmodule //top_C_drain_IO_L1_out_3_x0
