-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_PE_wrapper_2_0_x1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_A_PE_2_0_x122_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fifo_A_PE_2_0_x122_empty_n : IN STD_LOGIC;
    fifo_A_PE_2_0_x122_read : OUT STD_LOGIC;
    fifo_A_PE_2_1_x123_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_A_PE_2_1_x123_full_n : IN STD_LOGIC;
    fifo_A_PE_2_1_x123_write : OUT STD_LOGIC;
    fifo_B_PE_2_0_x157_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_PE_2_0_x157_empty_n : IN STD_LOGIC;
    fifo_B_PE_2_0_x157_read : OUT STD_LOGIC;
    fifo_B_PE_3_0_x158_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_PE_3_0_x158_full_n : IN STD_LOGIC;
    fifo_B_PE_3_0_x158_write : OUT STD_LOGIC;
    fifo_C_drain_PE_2_0_x185_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_PE_2_0_x185_full_n : IN STD_LOGIC;
    fifo_C_drain_PE_2_0_x185_write : OUT STD_LOGIC );
end;


architecture behav of top_PE_wrapper_2_0_x1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (25 downto 0) := "00000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (25 downto 0) := "00000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (25 downto 0) := "00000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (25 downto 0) := "00000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (25 downto 0) := "00001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (25 downto 0) := "00010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (25 downto 0) := "00100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (25 downto 0) := "01000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (25 downto 0) := "10000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_A_PE_2_0_x122_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln890_154_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_A_PE_2_1_x123_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal fifo_B_PE_2_0_x157_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln878_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_B_PE_3_0_x158_blk_n : STD_LOGIC;
    signal fifo_C_drain_PE_2_0_x185_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln890_155_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_reg_904 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_A_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal local_A_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal local_B_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_472 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_B_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln691_fu_478_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln691_reg_795 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln890_fu_484_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln890_reg_800 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln890_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_211_fu_494_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln691_212_fu_528_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln691_212_reg_896 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal cmp_i_i_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln890_151_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_213_fu_546_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln691_213_reg_908 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln890_61_fu_552_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln890_61_reg_913 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_217_fu_562_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln691_217_reg_921 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal local_C_addr_31_reg_926 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_214_fu_596_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal zext_ln1497_fu_632_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal add_ln691_215_fu_636_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln1497_31_fu_672_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal icmp_ln878_31_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_C_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln691_216_fu_676_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln691_216_reg_976 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_predicate_op157_write_state10 : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal grp_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal u6_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal u6_31_reg_1009 : STD_LOGIC_VECTOR (31 downto 0);
    signal u5_reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal u4_reg_1019 : STD_LOGIC_VECTOR (31 downto 0);
    signal u5_31_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal u4_31_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal u3_reg_1034 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal u2_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal u3_31_reg_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal u2_31_reg_1049 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_A_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_0_ce0 : STD_LOGIC;
    signal local_A_0_we0 : STD_LOGIC;
    signal local_A_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_A_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_A_0_ce1 : STD_LOGIC;
    signal local_B_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_B_0_ce0 : STD_LOGIC;
    signal local_B_0_we0 : STD_LOGIC;
    signal local_B_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_B_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_B_0_ce1 : STD_LOGIC;
    signal local_C_ce0 : STD_LOGIC;
    signal local_C_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal local_C_ce1 : STD_LOGIC;
    signal local_C_we1 : STD_LOGIC;
    signal local_C_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c6_V_reg_340 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln890_152_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal c7_V_reg_351 : STD_LOGIC_VECTOR (4 downto 0);
    signal c5_V_reg_362 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln890_153_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_31_reg_373 : STD_LOGIC_VECTOR (6 downto 0);
    signal c7_V_31_reg_384 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state26 : BOOLEAN;
    signal n_V_reg_395 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_reg_406 : STD_LOGIC_VECTOR (255 downto 0);
    signal n_V_31_reg_415 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_31_reg_426 : STD_LOGIC_VECTOR (255 downto 0);
    signal c8_V_reg_435 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_1467_reg_446 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln9392_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln878_31_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln890_62_fu_682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal trunc_ln9392_fu_500_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_cast_fu_504_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln9392_fu_512_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_568_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_101_cast_fu_572_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_1466_fu_580_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_fu_613_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_622_p4 : STD_LOGIC_VECTOR (223 downto 0);
    signal u_31_fu_653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_31_fu_662_p4 : STD_LOGIC_VECTOR (223 downto 0);
    signal v1_V_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_768_fu_703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_767_fu_706_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_766_fu_709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_765_fu_712_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_764_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_763_fu_718_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_V_31_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_775_fu_751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_774_fu_754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_773_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_772_fu_760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_771_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_770_fu_766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_V_769_fu_770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component top_fadd_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_PE_wrapper_0_0_x0_local_A_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_PE_wrapper_0_0_x0_local_C IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    local_A_0_U : component top_PE_wrapper_0_0_x0_local_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_A_0_address0,
        ce0 => local_A_0_ce0,
        we0 => local_A_0_we0,
        d0 => local_A_0_d0,
        q0 => local_A_0_q0,
        address1 => local_A_0_address1,
        ce1 => local_A_0_ce1,
        q1 => local_A_0_q1);

    local_B_0_U : component top_PE_wrapper_0_0_x0_local_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_B_0_address0,
        ce0 => local_B_0_ce0,
        we0 => local_B_0_we0,
        d0 => local_B_0_d0,
        q0 => local_B_0_q0,
        address1 => local_B_0_address1,
        ce1 => local_B_0_ce1,
        q1 => local_B_0_q1);

    local_C_U : component top_PE_wrapper_0_0_x0_local_C
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_addr_31_reg_926,
        ce0 => local_C_ce0,
        q0 => local_C_q0,
        address1 => local_C_address1,
        ce1 => local_C_ce1,
        we1 => local_C_we1,
        d1 => local_C_d1);

    fadd_32ns_32ns_32_7_full_dsp_1_U579 : component top_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => empty_1467_reg_446,
        din1 => mul_reg_994,
        ce => ap_const_logic_1,
        dout => grp_fu_457_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U580 : component top_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_466,
        din1 => reg_472,
        ce => ap_const_logic_1,
        dout => grp_fu_462_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_151_fu_534_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c5_V_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_488_p2 = ap_const_lv1_1))) then 
                c5_V_reg_362 <= ap_const_lv6_0;
            elsif (((icmp_ln890_153_fu_556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                c5_V_reg_362 <= add_ln691_212_reg_896;
            end if; 
        end if;
    end process;

    c6_V_31_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_151_fu_534_p2 = ap_const_lv1_0))) then 
                c6_V_31_reg_373 <= ap_const_lv7_0;
            elsif ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (icmp_ln890_154_fu_590_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                c6_V_31_reg_373 <= add_ln691_213_reg_908;
            end if; 
        end if;
    end process;

    c6_V_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c6_V_reg_340 <= ap_const_lv7_0;
            elsif (((icmp_ln890_152_fu_522_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c6_V_reg_340 <= add_ln691_reg_795;
            end if; 
        end if;
    end process;

    c7_V_31_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln890_153_fu_556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                c7_V_31_reg_384 <= ap_const_lv5_0;
            elsif ((not(((fifo_B_PE_3_0_x158_full_n = ap_const_logic_0) or (fifo_A_PE_2_1_x123_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                c7_V_31_reg_384 <= add_ln691_217_reg_921;
            end if; 
        end if;
    end process;

    c7_V_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_488_p2 = ap_const_lv1_0))) then 
                c7_V_reg_351 <= ap_const_lv5_0;
            elsif (((icmp_ln890_152_fu_522_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c7_V_reg_351 <= add_ln691_211_fu_494_p2;
            end if; 
        end if;
    end process;

    c8_V_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                c8_V_reg_435 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                c8_V_reg_435 <= add_ln691_216_reg_976;
            end if; 
        end if;
    end process;

    empty_1467_reg_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                empty_1467_reg_446 <= local_C_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                empty_1467_reg_446 <= grp_fu_457_p2;
            end if; 
        end if;
    end process;

    n_V_31_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                n_V_31_reg_415 <= ap_const_lv4_0;
            elsif (((icmp_ln878_31_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                n_V_31_reg_415 <= add_ln691_215_fu_636_p2;
            end if; 
        end if;
    end process;

    n_V_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                n_V_reg_395 <= ap_const_lv4_0;
            elsif ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                n_V_reg_395 <= add_ln691_214_fu_596_p2;
            end if; 
        end if;
    end process;

    p_Val2_31_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                p_Val2_31_reg_426 <= fifo_B_PE_2_0_x157_dout;
            elsif (((icmp_ln878_31_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_Val2_31_reg_426 <= zext_ln1497_31_fu_672_p1;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                p_Val2_s_reg_406 <= fifo_A_PE_2_0_x122_dout;
            elsif ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                p_Val2_s_reg_406 <= zext_ln1497_fu_632_p1;
            end if; 
        end if;
    end process;

    reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                reg_466 <= local_A_0_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                reg_466 <= local_A_0_q0;
            end if; 
        end if;
    end process;

    reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                reg_472 <= local_B_0_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                reg_472 <= local_B_0_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln691_212_reg_896 <= add_ln691_212_fu_528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln691_213_reg_908 <= add_ln691_213_fu_546_p2;
                    zext_ln890_61_reg_913(6 downto 0) <= zext_ln890_61_fu_552_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                add_ln691_216_reg_976 <= add_ln691_216_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln691_217_reg_921 <= add_ln691_217_fu_562_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln691_reg_795 <= add_ln691_fu_478_p2;
                    zext_ln890_reg_800(6 downto 0) <= zext_ln890_fu_484_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_151_fu_534_p2 = ap_const_lv1_0))) then
                cmp_i_i_reg_904 <= cmp_i_i_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                local_C_addr_31_reg_926 <= p_cast_fu_585_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                mul_reg_994 <= grp_fu_462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                u2_31_reg_1049 <= local_A_0_q1;
                u2_reg_1039 <= local_B_0_q1;
                u3_31_reg_1044 <= local_A_0_q0;
                u3_reg_1034 <= local_B_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                u4_31_reg_1029 <= local_A_0_q1;
                u4_reg_1019 <= local_B_0_q1;
                u5_31_reg_1024 <= local_A_0_q0;
                u5_reg_1014 <= local_B_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                u6_31_reg_1009 <= local_A_0_q0;
                u6_reg_1004 <= local_B_0_q0;
            end if;
        end if;
    end process;
    zext_ln890_reg_800(9 downto 7) <= "000";
    zext_ln890_61_reg_913(9 downto 7) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, fifo_A_PE_2_0_x122_empty_n, fifo_A_PE_2_1_x123_full_n, fifo_B_PE_2_0_x157_empty_n, fifo_B_PE_3_0_x158_full_n, fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state6, icmp_ln890_154_fu_590_p2, ap_CS_fsm_state26, ap_CS_fsm_state7, icmp_ln878_fu_607_p2, ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, ap_CS_fsm_state2, icmp_ln890_fu_488_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, icmp_ln890_151_fu_534_p2, ap_CS_fsm_state5, ap_CS_fsm_state8, icmp_ln878_31_fu_647_p2, ap_predicate_op157_write_state10, icmp_ln890_152_fu_522_p2, icmp_ln890_153_fu_556_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln890_fu_488_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln890_152_fu_522_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_151_fu_534_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln890_153_fu_556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (icmp_ln890_154_fu_590_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln878_31_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if ((not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif ((not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if ((not(((fifo_B_PE_3_0_x158_full_n = ap_const_logic_0) or (fifo_A_PE_2_1_x123_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln691_211_fu_494_p2 <= std_logic_vector(unsigned(c7_V_reg_351) + unsigned(ap_const_lv5_1));
    add_ln691_212_fu_528_p2 <= std_logic_vector(unsigned(c5_V_reg_362) + unsigned(ap_const_lv6_1));
    add_ln691_213_fu_546_p2 <= std_logic_vector(unsigned(c6_V_31_reg_373) + unsigned(ap_const_lv7_1));
    add_ln691_214_fu_596_p2 <= std_logic_vector(unsigned(n_V_reg_395) + unsigned(ap_const_lv4_1));
    add_ln691_215_fu_636_p2 <= std_logic_vector(unsigned(n_V_31_reg_415) + unsigned(ap_const_lv4_1));
    add_ln691_216_fu_676_p2 <= std_logic_vector(unsigned(c8_V_reg_435) + unsigned(ap_const_lv4_1));
    add_ln691_217_fu_562_p2 <= std_logic_vector(unsigned(c7_V_31_reg_384) + unsigned(ap_const_lv5_1));
    add_ln691_fu_478_p2 <= std_logic_vector(unsigned(c6_V_reg_340) + unsigned(ap_const_lv7_1));
    add_ln9392_fu_512_p2 <= std_logic_vector(unsigned(tmp_100_cast_fu_504_p3) + unsigned(zext_ln890_reg_800));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_predicate_op157_write_state10)
    begin
                ap_block_state10 <= ((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1));
    end process;


    ap_block_state26_assign_proc : process(fifo_A_PE_2_1_x123_full_n, fifo_B_PE_3_0_x158_full_n)
    begin
                ap_block_state26 <= ((fifo_B_PE_3_0_x158_full_n = ap_const_logic_0) or (fifo_A_PE_2_1_x123_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(fifo_A_PE_2_0_x122_empty_n, icmp_ln890_154_fu_590_p2)
    begin
                ap_block_state6 <= ((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(fifo_B_PE_2_0_x157_empty_n, icmp_ln878_fu_607_p2)
    begin
                ap_block_state7 <= ((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, icmp_ln890_151_fu_534_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_151_fu_534_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op157_write_state10_assign_proc : process(icmp_ln890_155_fu_688_p2, cmp_i_i_reg_904)
    begin
                ap_predicate_op157_write_state10 <= ((cmp_i_i_reg_904 = ap_const_lv1_1) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln890_151_fu_534_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln890_151_fu_534_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i_fu_540_p2 <= "1" when (c5_V_reg_362 = ap_const_lv6_1F) else "0";
    empty_1466_fu_580_p2 <= std_logic_vector(unsigned(tmp_101_cast_fu_572_p3) + unsigned(zext_ln890_61_reg_913));
    empty_fu_568_p1 <= c7_V_31_reg_384(4 - 1 downto 0);

    fifo_A_PE_2_0_x122_blk_n_assign_proc : process(fifo_A_PE_2_0_x122_empty_n, ap_CS_fsm_state6, icmp_ln890_154_fu_590_p2)
    begin
        if (((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fifo_A_PE_2_0_x122_blk_n <= fifo_A_PE_2_0_x122_empty_n;
        else 
            fifo_A_PE_2_0_x122_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_PE_2_0_x122_read_assign_proc : process(fifo_A_PE_2_0_x122_empty_n, ap_CS_fsm_state6, icmp_ln890_154_fu_590_p2)
    begin
        if ((not(((icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (fifo_A_PE_2_0_x122_empty_n = ap_const_logic_0))) and (icmp_ln890_154_fu_590_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fifo_A_PE_2_0_x122_read <= ap_const_logic_1;
        else 
            fifo_A_PE_2_0_x122_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_A_PE_2_1_x123_blk_n_assign_proc : process(fifo_A_PE_2_1_x123_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            fifo_A_PE_2_1_x123_blk_n <= fifo_A_PE_2_1_x123_full_n;
        else 
            fifo_A_PE_2_1_x123_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_A_PE_2_1_x123_din <= (((((((v1_V_31_fu_747_p1 & v2_V_775_fu_751_p1) & v2_V_774_fu_754_p1) & v2_V_773_fu_757_p1) & v2_V_772_fu_760_p1) & v2_V_771_fu_763_p1) & v2_V_770_fu_766_p1) & v2_V_769_fu_770_p1);

    fifo_A_PE_2_1_x123_write_assign_proc : process(fifo_A_PE_2_1_x123_full_n, fifo_B_PE_3_0_x158_full_n, ap_CS_fsm_state26)
    begin
        if ((not(((fifo_B_PE_3_0_x158_full_n = ap_const_logic_0) or (fifo_A_PE_2_1_x123_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            fifo_A_PE_2_1_x123_write <= ap_const_logic_1;
        else 
            fifo_A_PE_2_1_x123_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_PE_2_0_x157_blk_n_assign_proc : process(fifo_B_PE_2_0_x157_empty_n, ap_CS_fsm_state7, icmp_ln878_fu_607_p2)
    begin
        if (((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_B_PE_2_0_x157_blk_n <= fifo_B_PE_2_0_x157_empty_n;
        else 
            fifo_B_PE_2_0_x157_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_B_PE_2_0_x157_read_assign_proc : process(fifo_B_PE_2_0_x157_empty_n, ap_CS_fsm_state7, icmp_ln878_fu_607_p2)
    begin
        if ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_B_PE_2_0_x157_read <= ap_const_logic_1;
        else 
            fifo_B_PE_2_0_x157_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_PE_3_0_x158_blk_n_assign_proc : process(fifo_B_PE_3_0_x158_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            fifo_B_PE_3_0_x158_blk_n <= fifo_B_PE_3_0_x158_full_n;
        else 
            fifo_B_PE_3_0_x158_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_B_PE_3_0_x158_din <= (((((((v1_V_fu_699_p1 & v2_V_768_fu_703_p1) & v2_V_767_fu_706_p1) & v2_V_766_fu_709_p1) & v2_V_765_fu_712_p1) & v2_V_764_fu_715_p1) & v2_V_763_fu_718_p1) & v2_V_fu_722_p1);

    fifo_B_PE_3_0_x158_write_assign_proc : process(fifo_A_PE_2_1_x123_full_n, fifo_B_PE_3_0_x158_full_n, ap_CS_fsm_state26)
    begin
        if ((not(((fifo_B_PE_3_0_x158_full_n = ap_const_logic_0) or (fifo_A_PE_2_1_x123_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            fifo_B_PE_3_0_x158_write <= ap_const_logic_1;
        else 
            fifo_B_PE_3_0_x158_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_PE_2_0_x185_blk_n_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, cmp_i_i_reg_904)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (cmp_i_i_reg_904 = ap_const_lv1_1) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1))) then 
            fifo_C_drain_PE_2_0_x185_blk_n <= fifo_C_drain_PE_2_0_x185_full_n;
        else 
            fifo_C_drain_PE_2_0_x185_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_PE_2_0_x185_din <= empty_1467_reg_446;

    fifo_C_drain_PE_2_0_x185_write_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, ap_predicate_op157_write_state10)
    begin
        if ((not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_predicate_op157_write_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fifo_C_drain_PE_2_0_x185_write <= ap_const_logic_1;
        else 
            fifo_C_drain_PE_2_0_x185_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln878_31_fu_647_p2 <= "1" when (n_V_31_reg_415 = ap_const_lv4_8) else "0";
    icmp_ln878_fu_607_p2 <= "1" when (n_V_reg_395 = ap_const_lv4_8) else "0";
    icmp_ln890_151_fu_534_p2 <= "1" when (c5_V_reg_362 = ap_const_lv6_20) else "0";
    icmp_ln890_152_fu_522_p2 <= "1" when (c7_V_reg_351 = ap_const_lv5_10) else "0";
    icmp_ln890_153_fu_556_p2 <= "1" when (c6_V_31_reg_373 = ap_const_lv7_40) else "0";
    icmp_ln890_154_fu_590_p2 <= "1" when (c7_V_31_reg_384 = ap_const_lv5_10) else "0";
    icmp_ln890_155_fu_688_p2 <= "1" when (c8_V_reg_435 = ap_const_lv4_8) else "0";
    icmp_ln890_fu_488_p2 <= "1" when (c6_V_reg_340 = ap_const_lv7_40) else "0";

    local_A_0_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, zext_ln878_fu_602_p1, zext_ln890_62_fu_682_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_A_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_A_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_A_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1))) then 
            local_A_0_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_0))) then 
            local_A_0_address0 <= zext_ln890_62_fu_682_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            local_A_0_address0 <= zext_ln878_fu_602_p1(3 - 1 downto 0);
        else 
            local_A_0_address0 <= "XXX";
        end if; 
    end process;


    local_A_0_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_A_0_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_A_0_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_A_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            local_A_0_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        else 
            local_A_0_address1 <= "XXX";
        end if; 
    end process;


    local_A_0_ce0_assign_proc : process(fifo_B_PE_2_0_x157_empty_n, fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state7, icmp_ln878_fu_607_p2, ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, ap_CS_fsm_state23, ap_predicate_op157_write_state10, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_0)) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1)) or (not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            local_A_0_ce0 <= ap_const_logic_1;
        else 
            local_A_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_0_ce1_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, ap_CS_fsm_state23, ap_predicate_op157_write_state10, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            local_A_0_ce1 <= ap_const_logic_1;
        else 
            local_A_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_A_0_d0 <= u_fu_613_p1;

    local_A_0_we0_assign_proc : process(fifo_B_PE_2_0_x157_empty_n, ap_CS_fsm_state7, icmp_ln878_fu_607_p2)
    begin
        if ((not(((icmp_ln878_fu_607_p2 = ap_const_lv1_1) and (fifo_B_PE_2_0_x157_empty_n = ap_const_logic_0))) and (icmp_ln878_fu_607_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            local_A_0_we0 <= ap_const_logic_1;
        else 
            local_A_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_B_0_address0_assign_proc : process(ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, ap_CS_fsm_state23, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state25, zext_ln878_31_fu_642_p1, zext_ln890_62_fu_682_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_B_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_B_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_B_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1))) then 
            local_B_0_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_0))) then 
            local_B_0_address0 <= zext_ln890_62_fu_682_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            local_B_0_address0 <= zext_ln878_31_fu_642_p1(3 - 1 downto 0);
        else 
            local_B_0_address0 <= "XXX";
        end if; 
    end process;


    local_B_0_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            local_B_0_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            local_B_0_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            local_B_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            local_B_0_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        else 
            local_B_0_address1 <= "XXX";
        end if; 
    end process;


    local_B_0_ce0_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, ap_CS_fsm_state23, ap_CS_fsm_state8, ap_predicate_op157_write_state10, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_0)) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1)))) then 
            local_B_0_ce0 <= ap_const_logic_1;
        else 
            local_B_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_B_0_ce1_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, ap_CS_fsm_state23, ap_predicate_op157_write_state10, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            local_B_0_ce1 <= ap_const_logic_1;
        else 
            local_B_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_B_0_d0 <= u_31_fu_653_p1;

    local_B_0_we0_assign_proc : process(ap_CS_fsm_state8, icmp_ln878_31_fu_647_p2)
    begin
        if (((icmp_ln878_31_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            local_B_0_we0 <= ap_const_logic_1;
        else 
            local_B_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state3, local_C_addr_31_reg_926, zext_ln9392_fu_517_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            local_C_address1 <= local_C_addr_31_reg_926;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            local_C_address1 <= zext_ln9392_fu_517_p1(10 - 1 downto 0);
        else 
            local_C_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    local_C_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            local_C_ce0 <= ap_const_logic_1;
        else 
            local_C_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_ce1_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, ap_CS_fsm_state3, ap_predicate_op157_write_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            local_C_ce1 <= ap_const_logic_1;
        else 
            local_C_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_d1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state3, empty_1467_reg_446)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            local_C_d1 <= empty_1467_reg_446;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            local_C_d1 <= ap_const_lv32_0;
        else 
            local_C_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    local_C_we1_assign_proc : process(fifo_C_drain_PE_2_0_x185_full_n, ap_CS_fsm_state10, icmp_ln890_155_fu_688_p2, ap_CS_fsm_state3, ap_predicate_op157_write_state10, icmp_ln890_152_fu_522_p2)
    begin
        if ((((icmp_ln890_152_fu_522_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((fifo_C_drain_PE_2_0_x185_full_n = ap_const_logic_0) and (ap_predicate_op157_write_state10 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln890_155_fu_688_p2 = ap_const_lv1_1)))) then 
            local_C_we1 <= ap_const_logic_1;
        else 
            local_C_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_1466_fu_580_p2),64));
    r_31_fu_662_p4 <= p_Val2_31_reg_426(255 downto 32);
    r_fu_622_p4 <= p_Val2_s_reg_406(255 downto 32);
    tmp_100_cast_fu_504_p3 <= (trunc_ln9392_fu_500_p1 & ap_const_lv6_0);
    tmp_101_cast_fu_572_p3 <= (empty_fu_568_p1 & ap_const_lv6_0);
    trunc_ln9392_fu_500_p1 <= c7_V_reg_351(4 - 1 downto 0);
    u_31_fu_653_p1 <= p_Val2_31_reg_426(32 - 1 downto 0);
    u_fu_613_p1 <= p_Val2_s_reg_406(32 - 1 downto 0);
    v1_V_31_fu_747_p1 <= reg_466;
    v1_V_fu_699_p1 <= reg_472;
    v2_V_763_fu_718_p1 <= local_B_0_q0;
    v2_V_764_fu_715_p1 <= u2_reg_1039;
    v2_V_765_fu_712_p1 <= u3_reg_1034;
    v2_V_766_fu_709_p1 <= u4_reg_1019;
    v2_V_767_fu_706_p1 <= u5_reg_1014;
    v2_V_768_fu_703_p1 <= u6_reg_1004;
    v2_V_769_fu_770_p1 <= local_A_0_q1;
    v2_V_770_fu_766_p1 <= local_A_0_q0;
    v2_V_771_fu_763_p1 <= u2_31_reg_1049;
    v2_V_772_fu_760_p1 <= u3_31_reg_1044;
    v2_V_773_fu_757_p1 <= u4_31_reg_1029;
    v2_V_774_fu_754_p1 <= u5_31_reg_1024;
    v2_V_775_fu_751_p1 <= u6_31_reg_1009;
    v2_V_fu_722_p1 <= local_B_0_q1;
    zext_ln1497_31_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_31_fu_662_p4),256));
    zext_ln1497_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_622_p4),256));
    zext_ln878_31_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_31_reg_415),64));
    zext_ln878_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_reg_395),64));
    zext_ln890_61_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c6_V_31_reg_373),10));
    zext_ln890_62_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c8_V_reg_435),64));
    zext_ln890_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c6_V_reg_340),10));
    zext_ln9392_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9392_fu_512_p2),64));
end behav;
