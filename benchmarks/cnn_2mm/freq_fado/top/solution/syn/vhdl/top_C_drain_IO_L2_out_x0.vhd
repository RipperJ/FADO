-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_C_drain_IO_L2_out_x0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_1_x0136_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_1_x0136_read : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_0_x0135_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L2_out_0_x0135_write : OUT STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n : IN STD_LOGIC;
    fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_read : OUT STD_LOGIC );
end;


architecture behav of top_C_drain_IO_L2_out_x0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_3400 : STD_LOGIC_VECTOR (13 downto 0) := "11010000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv14_1A00 : STD_LOGIC_VECTOR (13 downto 0) := "01101000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_C_drain_IO_L2_out_1_x0136_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln890_reg_181 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln5260_reg_185 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_C_drain_IO_L2_out_0_x0135_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln890_reg_181_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_blk_n : STD_LOGIC;
    signal indvar_flatten31_reg_67 : STD_LOGIC_VECTOR (13 downto 0);
    signal c3_V_reg_78 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten11_reg_89 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln890_106_fu_110_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op31_read_state3 : BOOLEAN;
    signal ap_predicate_op33_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln890_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln5260_fu_146_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln890_fu_154_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln890_262_fu_168_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_fifo_data_4_reg_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_fifo_data_4_reg_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_fifo_data_4_reg_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln691_fu_122_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln89038_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_mid1_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i35_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln890_fu_162_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_151 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_fifo_data_4_reg_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_151)) then
                if (((select_ln5260_reg_185 = ap_const_lv1_0) and (icmp_ln890_reg_181 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_fifo_data_4_reg_100 <= fifo_C_drain_C_drain_IO_L2_out_1_x0136_dout;
                elsif (((select_ln5260_reg_185 = ap_const_lv1_1) and (icmp_ln890_reg_181 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_fifo_data_4_reg_100 <= fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_fifo_data_4_reg_100 <= ap_phi_reg_pp0_iter1_fifo_data_4_reg_100;
                end if;
            end if; 
        end if;
    end process;

    c3_V_reg_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_fu_116_p2 = ap_const_lv1_0))) then 
                c3_V_reg_78 <= select_ln890_fu_154_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c3_V_reg_78 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_89_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_fu_116_p2 = ap_const_lv1_0))) then 
                indvar_flatten11_reg_89 <= select_ln890_262_fu_168_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten11_reg_89 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten31_reg_67_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_fu_116_p2 = ap_const_lv1_0))) then 
                indvar_flatten31_reg_67 <= add_ln890_106_fu_110_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten31_reg_67 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_fifo_data_4_reg_100 <= ap_phi_reg_pp0_iter0_fifo_data_4_reg_100;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln890_reg_181 <= icmp_ln890_fu_116_p2;
                icmp_ln890_reg_181_pp0_iter1_reg <= icmp_ln890_reg_181;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln890_fu_116_p2 = ap_const_lv1_0))) then
                select_ln5260_reg_185 <= select_ln5260_fu_146_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, icmp_ln890_fu_116_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_fu_116_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln890_fu_116_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln691_fu_122_p2 <= std_logic_vector(unsigned(c3_V_reg_78) + unsigned(ap_const_lv2_1));
    add_ln890_106_fu_110_p2 <= std_logic_vector(unsigned(indvar_flatten31_reg_67) + unsigned(ap_const_lv14_1));
    add_ln890_fu_162_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_89) + unsigned(ap_const_lv14_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n, fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n, fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln890_reg_181_pp0_iter1_reg, ap_predicate_op31_read_state3, ap_predicate_op33_read_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln890_reg_181_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op33_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n = ap_const_logic_0)) or ((ap_predicate_op31_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n, fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n, fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln890_reg_181_pp0_iter1_reg, ap_predicate_op31_read_state3, ap_predicate_op33_read_state3)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln890_reg_181_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op33_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n = ap_const_logic_0)) or ((ap_predicate_op31_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n, fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n, fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln890_reg_181_pp0_iter1_reg, ap_predicate_op31_read_state3, ap_predicate_op33_read_state3)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln890_reg_181_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op33_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n = ap_const_logic_0)) or ((ap_predicate_op31_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n, fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n, ap_predicate_op31_read_state3, ap_predicate_op33_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((ap_predicate_op33_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n = ap_const_logic_0)) or ((ap_predicate_op31_read_state3 = ap_const_boolean_1) and (fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n, icmp_ln890_reg_181_pp0_iter1_reg)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((icmp_ln890_reg_181_pp0_iter1_reg = ap_const_lv1_0) and (fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n = ap_const_logic_0));
    end process;


    ap_condition_151_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_151 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln890_fu_116_p2)
    begin
        if ((icmp_ln890_fu_116_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_fifo_data_4_reg_100 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op31_read_state3_assign_proc : process(icmp_ln890_reg_181, select_ln5260_reg_185)
    begin
                ap_predicate_op31_read_state3 <= ((select_ln5260_reg_185 = ap_const_lv1_0) and (icmp_ln890_reg_181 = ap_const_lv1_0));
    end process;


    ap_predicate_op33_read_state3_assign_proc : process(icmp_ln890_reg_181, select_ln5260_reg_185)
    begin
                ap_predicate_op33_read_state3 <= ((select_ln5260_reg_185 = ap_const_lv1_1) and (icmp_ln890_reg_181 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i35_fu_134_p2 <= "1" when (c3_V_reg_78 = ap_const_lv2_0) else "0";
    cmp_i_i_mid1_fu_128_p2 <= "1" when (add_ln691_fu_122_p2 = ap_const_lv2_0) else "0";

    fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_reg_181, select_ln5260_reg_185)
    begin
        if (((select_ln5260_reg_185 = ap_const_lv1_1) and (icmp_ln890_reg_181 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_blk_n <= fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op33_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op33_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L1_out_0_0_x0109_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_0_x0135_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln890_reg_181_pp0_iter1_reg)
    begin
        if (((icmp_ln890_reg_181_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_C_drain_C_drain_IO_L2_out_0_x0135_blk_n <= fifo_C_drain_C_drain_IO_L2_out_0_x0135_full_n;
        else 
            fifo_C_drain_C_drain_IO_L2_out_0_x0135_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_C_drain_IO_L2_out_0_x0135_din <= ap_phi_reg_pp0_iter2_fifo_data_4_reg_100;

    fifo_C_drain_C_drain_IO_L2_out_0_x0135_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln890_reg_181_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln890_reg_181_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_C_drain_C_drain_IO_L2_out_0_x0135_write <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L2_out_0_x0135_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_1_x0136_blk_n_assign_proc : process(fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln890_reg_181, select_ln5260_reg_185)
    begin
        if (((select_ln5260_reg_185 = ap_const_lv1_0) and (icmp_ln890_reg_181 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_C_drain_IO_L2_out_1_x0136_blk_n <= fifo_C_drain_C_drain_IO_L2_out_1_x0136_empty_n;
        else 
            fifo_C_drain_C_drain_IO_L2_out_1_x0136_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_C_drain_IO_L2_out_1_x0136_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op31_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op31_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_C_drain_IO_L2_out_1_x0136_read <= ap_const_logic_1;
        else 
            fifo_C_drain_C_drain_IO_L2_out_1_x0136_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln89038_fu_140_p2 <= "1" when (indvar_flatten11_reg_89 = ap_const_lv14_1A00) else "0";
    icmp_ln890_fu_116_p2 <= "1" when (indvar_flatten31_reg_67 = ap_const_lv14_3400) else "0";
    select_ln5260_fu_146_p3 <= 
        cmp_i_i_mid1_fu_128_p2 when (icmp_ln89038_fu_140_p2(0) = '1') else 
        cmp_i_i35_fu_134_p2;
    select_ln890_262_fu_168_p3 <= 
        ap_const_lv14_1 when (icmp_ln89038_fu_140_p2(0) = '1') else 
        add_ln890_fu_162_p2;
    select_ln890_fu_154_p3 <= 
        add_ln691_fu_122_p2 when (icmp_ln89038_fu_140_p2(0) = '1') else 
        c3_V_reg_78;
end behav;
